{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4e3b\u9875 simplepeng\u7684\u72ec\u7acb\u535a\u5ba2\u7ad9\u70b9\uff0c\u968f\u7f18\u8bb0\u5f55\u548c\u5206\u4eab\u77e5\u8bc6\u3002 \u5173\u4e8e\u4f5c\u8005 https://github.com/simplepeng \u5c0f\u989d\u8d5e\u52a9 \u840c\u6233\u94fe\u63a5","title":"\u4e3b\u9875"},{"location":"#_1","text":"simplepeng\u7684\u72ec\u7acb\u535a\u5ba2\u7ad9\u70b9\uff0c\u968f\u7f18\u8bb0\u5f55\u548c\u5206\u4eab\u77e5\u8bc6\u3002","title":"\u4e3b\u9875"},{"location":"#_2","text":"https://github.com/simplepeng","title":"\u5173\u4e8e\u4f5c\u8005"},{"location":"#_3","text":"\u840c\u6233\u94fe\u63a5","title":"\u5c0f\u989d\u8d5e\u52a9"},{"location":"android/FFmpeg/%E7%BC%96%E8%AF%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E7%9A%84FFmpeg/","text":"\u7f16\u8bd1\u53ef\u6267\u884c\u547d\u4ee4\u7684FFmpeg \u4e0a\u4e00\u7bc7\u8bb2\u5230\u4e86 \u4f7f\u7528FFmpeg\u751f\u6210\u89c6\u9891\u5c01\u9762\u56fe \uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 FFmpeg\u76f8\u5173\u547d\u4ee4 \u622a\u53d6\u4e00\u5e27\u7684\u56fe\u50cf\u6570\u636e\u4fdd\u5b58\u5230\u672c\u5730\uff0c\u7136\u540e\u52a0\u8f7d\u5230ImageView\u4e0a\uff0c\u6709\u65f6\u5019\u4f7f\u7528\u547d\u4ee4\u786e\u5b9e\u6bd4\u5199\u4ee3\u7801\u66f4\u52a0\u7b80\u5355\u548c\u4f7f\u4eba\u8f7b\u677e\u4e00\u70b9\uff0c\u6240\u4ee5\u8fd9\u4e00\u7bc7\u662f\u8bb2\u89e3\u5982\u4f55\u5bfc\u5165 FFmpeg\u76f8\u5173\u6e90\u7801 \u7136\u540e\u5982\u4f55\u6267\u884c\u547d\u4ee4\u884c\u5de5\u5177\u7684\u535a\u5ba2\uff0c\u4f46\u662f\u5176\u5b9e\u8fd9\u53ea\u662f\u4e2aDemo\u800c\u5df2\uff0c\u56e0\u4e3a\u6709\u5f88\u591a\u7ec6\u8282\u9700\u8981\u5904\u7406\uff0c\u63a8\u8350\u76f4\u63a5\u4f7f\u7528\u5f00\u6e90\u5e93\u3002 \u5bfc\u5165\u6e90\u7801 \u4eceFFmpeg\u6e90\u7801\u4e2d\u5bfc\u5165 cmdutils.c \u3001 cmdutils.h \u3001 config.h \u3001 ffmpeg.c \u3001 ffmpeg.h \u3001 ffmpeg_filter.c \u3001 ffmpeg_hw.c \u3001 ffmpeg_opt.c \u8fd9\u51e0\u4e2a\u6e90\u7801\uff0c\u4e00\u822c\u5b58\u653e\u5728 fftools \u76ee\u5f55\u4e0b\u3002 config.h \u5982\u679c\u7f16\u8bd1\u751f\u6210\u76ee\u5f55\u4e0b\u6ca1\u6709\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528ffmpeg\u6839\u76ee\u5f55\u4e0b\u7684 config.h \u3002 \u7f16\u5199CmakeList # \u8bbe\u7f6e\u6784\u5efa\u672c\u673a\u5e93\u6587\u4ef6\u6240\u9700\u7684 CMake\u7684\u6700\u5c0f\u7248\u672c cmake_minimum_required(VERSION 3.4.1) #\u6dfb\u52a0\u5934\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84 include_directories(src/main/cpp/include) #\u8bbe\u7f6e\u67e5\u627e\u52a8\u6001\u5e93\u4f4d\u7f6e set(LINK_DIR ${CMAKE_SOURCE_DIR}/libs/${CMAKE_ANDROID_ARCH_ABI}) link_directories(${LINK_DIR}) #\u627e\u5230\u6240\u6709\u7684so\u5e93\uff0c\u5b58\u653e\u5728\u5168\u5c40\u53d8\u91cfSO_DIR\u4e2d file(GLOB SO_DIR ${LINK_DIR}/*.so) #\u627e\u5230\u6240\u6709\u7684\u6e90\u6587\u4ef6\uff0c\u5b58\u653e\u5728\u5168\u5c40\u53d8\u91cf\u4e2d #file(GLOB FFMPEG_DIR src/main/cpp/ffmpeg/*.c) #message(\"FFMPEG_DIR == ${FFMPEG_DIR}\") file(GLOB CPP_DIR src/main/cpp/*.cpp) file(GLOB FFMPEG_DIR src/main/cpp/include/*.c) # \u6dfb\u52a0\u81ea\u5df1\u5199\u7684 C/C++\u6e90\u6587\u4ef6 add_library(utils #so\u540d\u79f0 SHARED #\u52a8\u6001\u5e93 ${CPP_DIR} ${FFMPEG_DIR} ) # \u4f9d\u8d56 NDK\u4e2d\u81ea\u5e26\u7684log\u5e93 find_library(log-lib log) # \u94fe\u63a5\u5e93 target_link_libraries( utils ${SO_DIR} jnigraphics ${log-lib}) \u6211\u662f\u5c06ffmpeg\u7684\u6e90\u7801\u548c\u4e4b\u524d\u751f\u6210\u7684ffmpeg\u5934\u6587\u4ef6\u90fd\u653e\u5728\u4e86 cpp/include \u76ee\u5f55\u4e0b\uff0c\u8fd9\u6837\u5728CmakeList\u4e2d\u4f7f\u7528 include_directories \u5c31\u53ef\u4ee5\u76f4\u63a5\u627e\u5230\u6240\u6709\u7684\u5934\u6587\u4ef6\uff0c\u7136\u540e\u5c06ffmpeg\u7684\u6e90\u7801\u548c\u81ea\u5df1\u5199\u7684\u5de5\u5177\u7c7b\u6e90\u7801\u5173\u8054\u8d77\u6765\u5c31\u884c\u4e86\u3002 \u4fee\u6539FFmpeg\u7684\u6e90\u7801 \u4fee\u6539 ffmpeg.c \u7684 main \u65b9\u6cd5\u540d\u79f0\u4e3a exe_cmd \uff0c\u5e76\u5728 ffmpeg.h \u5934\u6587\u4ef6\u52a0\u4e0a\u540c\u6837\u540d\u79f0\u7684\u65b9\u6cd5\u58f0\u660e\u3002 //ffmpeg.c int exe_cmd(int argc, char **argv) { ... } //ffmpeg.h int exe_cmd(int argc, char **argv); \u539f\u751f\u547d\u4ee4\u884c\u5de5\u5177\u5728\u6267\u884c\u5b8cFFmpeg\u547d\u4ee4\u540e\u90fd\u4f1a\u9000\u51fa\u7a0b\u5e8f\uff0c\u4f46\u662f\u5728Android\u91cc\u9762\u53ef\u4e0d\u80fd\u8fd9\u6837\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u4fee\u6539FFmpeg\u7ed3\u675f\u7a0b\u5e8f\u7684\u51fd\u6570\u3002 \u4fee\u6539 cmdutils.c \u548c cmdutils.h \uff0c\u6ce8\u91ca\u6389\u9000\u51fa\u7a0b\u5e8f\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u589e\u52a0\u4e00\u4e2aint\u7684\u8fd4\u56de\u503c\u3002 //cmdutils.c int exit_program(int ret) { // if (program_exit) // program_exit(ret); // exit(ret); return ret; } //cmdutils.h int exit_program(int ret); \u5e76\u4e14\u5728Android\u91cc\u9762\u6211\u4eec\u80af\u5b9a\u662f\u6267\u884c\u5b8c\u4e00\u6761\u547d\u4ee4\uff0c\u63a5\u7740\u8fd8\u4f1a\u7ee7\u7eed\u6267\u884c\u5176\u4ed6\u547d\u4ee4\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u91cd\u65b0\u521d\u59cb\u5316\u4e00\u4e9b\u5173\u952e\u53d8\u91cf\u7684\u503c\u3002 \u627e\u5230 ffmpeg.c \u4e2d\u7684 ffmpeg_cleanup \u51fd\u6570\uff0c\u5728\u672b\u5c3e\u5c06\u4e00\u4e9b\u5173\u952e\u53d8\u91cf\u91cd\u65b0\u521d\u59cb\u5316\u3002 //ffmpeg.c static void ffmpeg_cleanup(int ret) { ... nb_filtergraphs = 0; nb_output_files = 0; nb_output_streams = 0; nb_input_files = 0; nb_input_streams = 0; } \u6700\u540e\u5728 main \u51fd\u6570\u672b\u5c3e\u8c03\u7528 ffmpeg_cleanup \u51fd\u6570 int exe_cmd(int argc, char **argv) { ... // exit_program(received_nb_signals ? 255 : main_return_code); ffmpeg_cleanup(0); } \u589e\u52a0FFmpeg\u65e5\u5fd7\u8f93\u51fa \u5728 ffmpeg.c \u4e2d\u627e\u5230 log_callback_null \u7684\u51fd\u6570\uff0c\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff0c\u539f\u4ee3\u7801\u5757\u662f\u7a7a\u5b9e\u73b0\u3002 #include \"android/log.h\" #define logDebug(...) __android_log_print(ANDROID_LOG_DEBUG,\"MainActivity\",__VA_ARGS__) static void log_callback_null(void *ptr, int level, const char *fmt, va_list vl) { static int print_prefix = 1; static int count; static char prev[1024]; char line[1024]; static int is_atty; av_log_format_line(ptr, level, fmt, vl, line, sizeof(line), &print_prefix); strcpy(prev, line); logDebug(\"ffmpeg log ----- %s\", line); } \u5728 main \u51fd\u6570\u4e2d\u8c03\u7528 log_callback_null \u51fd\u6570 int exe_cmd(int argc, char **argv) { av_log_set_callback(log_callback_null); int i, ret; ... } \u7f16\u5199\u5de5\u5177\u7c7b\u65b9\u6cd5 \u5728 MainActivity \u4e2d\u589e\u52a0 exeCmd(String[] cmd) \u65b9\u6cd5 public static native int exeCmd(String[] cmd); \u5728 ffmpeg_utils.cpp \u589e\u52a0jni\u65b9\u6cd5 JNIEXPORT jint JNICALL Java_demo_simple_example_1ffmpeg_MainActivity_exeCmd(JNIEnv *env, jclass clazz, jobjectArray cmd) { int argc = env->GetArrayLength(cmd); logDebug(\"argc == %d\", argc); char *argv[argc]; for (int i = 0; i < argc; ++i) { jstring str = (jstring) env->GetObjectArrayElement(cmd, i); argv[i] = (char *) env->GetStringUTFChars(str, JNI_FALSE); logDebug(\"%s \", argv[i]); } return exe_cmd(argc, argv); // return 1; } \u6267\u884c\u547d\u4ee4 private void exeCmd() { String path = Environment.getExternalStorageDirectory().getAbsolutePath() + File.separator + \"get_cover1.mp4\"; String outPath = Environment.getExternalStorageDirectory().getAbsolutePath() + File.separator + \"video.flv\"; File outFile = new File(outPath); if (outFile.exists()) { outFile.delete(); } //\u88c1\u526a\u4e2a1s\u89c6\u9891 String cmd = \"ffmpeg -ss 00:00:00 -t 00:00:10 -i \" + path + \" -vcodec copy -acodec copy \" + outPath; String[] cmdArr = cmd.split(\" \"); int result = exeCmd(cmdArr); Log.d(TAG, \"exe cmd result == \" + result); } \u67e5\u770b\u65e5\u5fd7\u8f93\u51fa demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- Total: 331 packets (1993540 bytes) demuxed demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- Output file #0 (/storage/emulated/0/video.flv): demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- Output stream #0:0 (video): demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- 129 packets muxed (1822580 bytes); demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- Output stream #0:1 (audio): demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- 202 packets muxed (170960 bytes); demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- Total: 331 packets (1993540 bytes) muxed demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- 0 frames successfully decoded, 0 decoding errors demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- [AVIOContext @ 0xda2ea480] Statistics: 2 seeks, 10 writeouts demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- [AVIOContext @ 0xda2ea3c0] Statistics: 2161643 bytes read, 1 seeks demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- demo.simple.example_ffmpeg D/MainActivity: exe cmd result == 0 \u6267\u884c\u547d\u4ee4\u7684\u8fd4\u56de\u503c ==0 \uff0c\u5e76\u4e14\u4e5f\u770b\u5230\u786e\u5b9e\u6587\u4ef6\u5df2\u7ecf\u751f\u6210\u51fa\u6765\u4e86\uff0c\u6211\u4eec adb pull \u628a\u6587\u4ef6\u5bfc\u51fa\u5230\u684c\u9762\u7528 ffprobe \u6216 ffplay \u770b\u770b\u3002 ffprobe video.flv ffprobe version 4.0.4 Copyright (c) 2007-2019 the FFmpeg developers built with Apple LLVM version 10.0.0 (clang-1000.10.44.4) configuration: libavutil 56. 14.100 / 56. 14.100 libavcodec 58. 18.100 / 58. 18.100 libavformat 58. 12.100 / 58. 12.100 libavdevice 58. 3.100 / 58. 3.100 libavfilter 7. 16.100 / 7. 16.100 libswscale 5. 1.100 / 5. 1.100 libswresample 3. 1.100 / 3. 1.100 Input #0, flv, from 'video.flv': Metadata: major_brand : mp42 minor_version : 0 compatible_brands: mp42mp41 encoder : Lavf58.45.100 Duration: 00:00:01.07, start: 0.033000, bitrate: 3130 kb/s Stream #0:0: Video: h264 (Main), yuv420p(tv, bt709, progressive), 1080x1920, 3390 kb/s, 30 fps, 30 tbr, 1k tbn, 60 tbc Stream #0:1: Audio: aac (LC), 48000 Hz, stereo, fltp, 317 kb/s \u53ef\u4ee5\u770b\u5230\u786e\u5b9e\u88c1\u526a\u751f\u6210\u4e86\u4e00\u4e2a1\u79d2\u7684\u89c6\u9891\uff0c\u867d\u7136\u540e\u7f00\u540d\u6211\u4eec\u7528\u7684 .flv \uff0c\u4f46\u662f\u5176\u5b9e\u6211\u4eec\u662f\u62f7\u8d1d\u7684\u89c6\u9891\u7f16\u7801\uff0c\u6240\u4ee5\u8fd8\u662f mp4 \u7684\u5c01\u88c5\u683c\u5f0f\u3002 \u6e90\u7801 \u4f7f\u7528\u5df2\u6709\u7684\u8f6e\u5b50 \u4e0a\u9762\u7684\u4f8b\u5b50\u5e76\u4e0d\u662f\u4e00\u4e2a\u5b8c\u5584\u7684\u5de5\u5177\u7c7b\uff0c\u6bd4\u5982\u7f3a\u5c11Native\u5c42\u7684\u7ebf\u7a0b\u652f\u6301\uff0c\u51fa\u73b0\u9519\u8bef\u5c31\u4f1a\u76f4\u63a5\u95ea\u9000\uff0c\u7f3a\u5c11\u8fdb\u5ea6\u56de\u8c03\u7b49\uff0c\u6240\u4ee5\u8fd8\u662f\u76f4\u63a5\u4f7f\u7528\u73b0\u6210\u7684\u8f6e\u5b50\u6bd4\u8f83\u9760\u8c31\uff0c\u53ea\u662f\u6211\u4eec\u9700\u8981\u77e5\u9053\u8f6e\u5b50\u5927\u6982\u662f\u600e\u4e48\u9020\u51fa\u6765\u7684\u5c31\u884c\u4e86\u3002 \u8fd9\u91cc\u6211\u63a8\u8350\u4f7f\u7528 mobile-ffmpeg \u8fd9\u4e2a\u5f00\u6e90\u5e93\uff0c1.8k\u7684star\u8db3\u4ee5\u8bc1\u660e\u5176\u54c1\u8d28\u8fd8\u884c\uff0c\u76f4\u63a5\u5bfc\u5165\u7f16\u8bd1\u597d\u7684 aar \u5c31\u53ef\u4ee5\u6267\u884c\u547d\u4ee4\u884c\u5de5\u5177\u94fe\uff0c\u800c\u4e14\u53ef\u4ee5\u81ea\u884c\u7f16\u8bd1\u94fe\u63a5\u5f88\u591a\u6709\u7528\u7684\u7b2c\u4e09\u65b9library\uff0c\u6bd4\u5982 x264 \u3001 libwebp \u7b49\u3002 \u52a8\u624b\u80fd\u529b\u5f3a\u6216\u6709\u7279\u6b8a\u9700\u6c42\u7684\u53ef\u4ee5\u4f7f\u7528 android.sh \u81ea\u884c\u7f16\u8bd1\u51faFFmpeg\u5934\u6587\u4ef6\u548c\u52a8\u6001\u5e93\uff0c\u4ee5\u53caAndroid\u5de5\u5177\u94fe\u7684aar\u3002 \u6bd4\u5982\u8bf4\u6211\u73b0\u5728\u53ea\u9700\u8981\u4e00\u4e2a\u652f\u6301 arm64-v8a \u548c api16 \u53ca\u4ee5\u4e0a\u7684\u52a8\u6001\u5e93\uff0c\u90a3\u4e48\u6211\u5c31\u81ea\u5df1\u65b0\u5efa\u4e86\u4e00\u4e2ashell\u811a\u672c\u6587\u4ef6\uff1a #!/bin/bash export ANDROID_HOME=\"/Users/chenpeng/Library/Android/sdk/\" export ANDROID_NDK_ROOT=\"/Users/chenpeng/Desktop/work_space/ndk/android-ndk-r21b/\" build() { ./android.sh \\ --lts \\ --disable-arm-v7a \\ --disable-arm-v7a-neon \\ --disable-x86 \\ --disable-x86-64 } build \u6267\u884c\u5b8c\u8fd9\u4e2ashell\u540e\uff0c\u5c31\u4f1a\u5728 prebuilt \u76ee\u5f55\u4e0b\u751f\u4ea7\u5bf9\u5e94\u7684\u5934\u6587\u4ef6\uff0c\u52a8\u6001\u5e93\uff0c\u4ee5\u53caaar\u6587\u4ef6\uff0c\u76f4\u63a5\u62ff\u6765\u7528\u5c31\u53ef\u4ee5\u4e86\u3002","title":"\u7f16\u8bd1\u53ef\u6267\u884c\u547d\u4ee4\u7684FFmpeg"},{"location":"android/FFmpeg/%E7%BC%96%E8%AF%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E7%9A%84FFmpeg/#ffmpeg","text":"\u4e0a\u4e00\u7bc7\u8bb2\u5230\u4e86 \u4f7f\u7528FFmpeg\u751f\u6210\u89c6\u9891\u5c01\u9762\u56fe \uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 FFmpeg\u76f8\u5173\u547d\u4ee4 \u622a\u53d6\u4e00\u5e27\u7684\u56fe\u50cf\u6570\u636e\u4fdd\u5b58\u5230\u672c\u5730\uff0c\u7136\u540e\u52a0\u8f7d\u5230ImageView\u4e0a\uff0c\u6709\u65f6\u5019\u4f7f\u7528\u547d\u4ee4\u786e\u5b9e\u6bd4\u5199\u4ee3\u7801\u66f4\u52a0\u7b80\u5355\u548c\u4f7f\u4eba\u8f7b\u677e\u4e00\u70b9\uff0c\u6240\u4ee5\u8fd9\u4e00\u7bc7\u662f\u8bb2\u89e3\u5982\u4f55\u5bfc\u5165 FFmpeg\u76f8\u5173\u6e90\u7801 \u7136\u540e\u5982\u4f55\u6267\u884c\u547d\u4ee4\u884c\u5de5\u5177\u7684\u535a\u5ba2\uff0c\u4f46\u662f\u5176\u5b9e\u8fd9\u53ea\u662f\u4e2aDemo\u800c\u5df2\uff0c\u56e0\u4e3a\u6709\u5f88\u591a\u7ec6\u8282\u9700\u8981\u5904\u7406\uff0c\u63a8\u8350\u76f4\u63a5\u4f7f\u7528\u5f00\u6e90\u5e93\u3002","title":"\u7f16\u8bd1\u53ef\u6267\u884c\u547d\u4ee4\u7684FFmpeg"},{"location":"android/FFmpeg/%E7%BC%96%E8%AF%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E7%9A%84FFmpeg/#_1","text":"\u4eceFFmpeg\u6e90\u7801\u4e2d\u5bfc\u5165 cmdutils.c \u3001 cmdutils.h \u3001 config.h \u3001 ffmpeg.c \u3001 ffmpeg.h \u3001 ffmpeg_filter.c \u3001 ffmpeg_hw.c \u3001 ffmpeg_opt.c \u8fd9\u51e0\u4e2a\u6e90\u7801\uff0c\u4e00\u822c\u5b58\u653e\u5728 fftools \u76ee\u5f55\u4e0b\u3002 config.h \u5982\u679c\u7f16\u8bd1\u751f\u6210\u76ee\u5f55\u4e0b\u6ca1\u6709\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528ffmpeg\u6839\u76ee\u5f55\u4e0b\u7684 config.h \u3002","title":"\u5bfc\u5165\u6e90\u7801"},{"location":"android/FFmpeg/%E7%BC%96%E8%AF%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E7%9A%84FFmpeg/#cmakelist","text":"# \u8bbe\u7f6e\u6784\u5efa\u672c\u673a\u5e93\u6587\u4ef6\u6240\u9700\u7684 CMake\u7684\u6700\u5c0f\u7248\u672c cmake_minimum_required(VERSION 3.4.1) #\u6dfb\u52a0\u5934\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84 include_directories(src/main/cpp/include) #\u8bbe\u7f6e\u67e5\u627e\u52a8\u6001\u5e93\u4f4d\u7f6e set(LINK_DIR ${CMAKE_SOURCE_DIR}/libs/${CMAKE_ANDROID_ARCH_ABI}) link_directories(${LINK_DIR}) #\u627e\u5230\u6240\u6709\u7684so\u5e93\uff0c\u5b58\u653e\u5728\u5168\u5c40\u53d8\u91cfSO_DIR\u4e2d file(GLOB SO_DIR ${LINK_DIR}/*.so) #\u627e\u5230\u6240\u6709\u7684\u6e90\u6587\u4ef6\uff0c\u5b58\u653e\u5728\u5168\u5c40\u53d8\u91cf\u4e2d #file(GLOB FFMPEG_DIR src/main/cpp/ffmpeg/*.c) #message(\"FFMPEG_DIR == ${FFMPEG_DIR}\") file(GLOB CPP_DIR src/main/cpp/*.cpp) file(GLOB FFMPEG_DIR src/main/cpp/include/*.c) # \u6dfb\u52a0\u81ea\u5df1\u5199\u7684 C/C++\u6e90\u6587\u4ef6 add_library(utils #so\u540d\u79f0 SHARED #\u52a8\u6001\u5e93 ${CPP_DIR} ${FFMPEG_DIR} ) # \u4f9d\u8d56 NDK\u4e2d\u81ea\u5e26\u7684log\u5e93 find_library(log-lib log) # \u94fe\u63a5\u5e93 target_link_libraries( utils ${SO_DIR} jnigraphics ${log-lib}) \u6211\u662f\u5c06ffmpeg\u7684\u6e90\u7801\u548c\u4e4b\u524d\u751f\u6210\u7684ffmpeg\u5934\u6587\u4ef6\u90fd\u653e\u5728\u4e86 cpp/include \u76ee\u5f55\u4e0b\uff0c\u8fd9\u6837\u5728CmakeList\u4e2d\u4f7f\u7528 include_directories \u5c31\u53ef\u4ee5\u76f4\u63a5\u627e\u5230\u6240\u6709\u7684\u5934\u6587\u4ef6\uff0c\u7136\u540e\u5c06ffmpeg\u7684\u6e90\u7801\u548c\u81ea\u5df1\u5199\u7684\u5de5\u5177\u7c7b\u6e90\u7801\u5173\u8054\u8d77\u6765\u5c31\u884c\u4e86\u3002","title":"\u7f16\u5199CmakeList"},{"location":"android/FFmpeg/%E7%BC%96%E8%AF%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E7%9A%84FFmpeg/#ffmpeg_1","text":"\u4fee\u6539 ffmpeg.c \u7684 main \u65b9\u6cd5\u540d\u79f0\u4e3a exe_cmd \uff0c\u5e76\u5728 ffmpeg.h \u5934\u6587\u4ef6\u52a0\u4e0a\u540c\u6837\u540d\u79f0\u7684\u65b9\u6cd5\u58f0\u660e\u3002 //ffmpeg.c int exe_cmd(int argc, char **argv) { ... } //ffmpeg.h int exe_cmd(int argc, char **argv); \u539f\u751f\u547d\u4ee4\u884c\u5de5\u5177\u5728\u6267\u884c\u5b8cFFmpeg\u547d\u4ee4\u540e\u90fd\u4f1a\u9000\u51fa\u7a0b\u5e8f\uff0c\u4f46\u662f\u5728Android\u91cc\u9762\u53ef\u4e0d\u80fd\u8fd9\u6837\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u4fee\u6539FFmpeg\u7ed3\u675f\u7a0b\u5e8f\u7684\u51fd\u6570\u3002 \u4fee\u6539 cmdutils.c \u548c cmdutils.h \uff0c\u6ce8\u91ca\u6389\u9000\u51fa\u7a0b\u5e8f\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u589e\u52a0\u4e00\u4e2aint\u7684\u8fd4\u56de\u503c\u3002 //cmdutils.c int exit_program(int ret) { // if (program_exit) // program_exit(ret); // exit(ret); return ret; } //cmdutils.h int exit_program(int ret); \u5e76\u4e14\u5728Android\u91cc\u9762\u6211\u4eec\u80af\u5b9a\u662f\u6267\u884c\u5b8c\u4e00\u6761\u547d\u4ee4\uff0c\u63a5\u7740\u8fd8\u4f1a\u7ee7\u7eed\u6267\u884c\u5176\u4ed6\u547d\u4ee4\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u91cd\u65b0\u521d\u59cb\u5316\u4e00\u4e9b\u5173\u952e\u53d8\u91cf\u7684\u503c\u3002 \u627e\u5230 ffmpeg.c \u4e2d\u7684 ffmpeg_cleanup \u51fd\u6570\uff0c\u5728\u672b\u5c3e\u5c06\u4e00\u4e9b\u5173\u952e\u53d8\u91cf\u91cd\u65b0\u521d\u59cb\u5316\u3002 //ffmpeg.c static void ffmpeg_cleanup(int ret) { ... nb_filtergraphs = 0; nb_output_files = 0; nb_output_streams = 0; nb_input_files = 0; nb_input_streams = 0; } \u6700\u540e\u5728 main \u51fd\u6570\u672b\u5c3e\u8c03\u7528 ffmpeg_cleanup \u51fd\u6570 int exe_cmd(int argc, char **argv) { ... // exit_program(received_nb_signals ? 255 : main_return_code); ffmpeg_cleanup(0); }","title":"\u4fee\u6539FFmpeg\u7684\u6e90\u7801"},{"location":"android/FFmpeg/%E7%BC%96%E8%AF%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E7%9A%84FFmpeg/#ffmpeg_2","text":"\u5728 ffmpeg.c \u4e2d\u627e\u5230 log_callback_null \u7684\u51fd\u6570\uff0c\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff0c\u539f\u4ee3\u7801\u5757\u662f\u7a7a\u5b9e\u73b0\u3002 #include \"android/log.h\" #define logDebug(...) __android_log_print(ANDROID_LOG_DEBUG,\"MainActivity\",__VA_ARGS__) static void log_callback_null(void *ptr, int level, const char *fmt, va_list vl) { static int print_prefix = 1; static int count; static char prev[1024]; char line[1024]; static int is_atty; av_log_format_line(ptr, level, fmt, vl, line, sizeof(line), &print_prefix); strcpy(prev, line); logDebug(\"ffmpeg log ----- %s\", line); } \u5728 main \u51fd\u6570\u4e2d\u8c03\u7528 log_callback_null \u51fd\u6570 int exe_cmd(int argc, char **argv) { av_log_set_callback(log_callback_null); int i, ret; ... }","title":"\u589e\u52a0FFmpeg\u65e5\u5fd7\u8f93\u51fa"},{"location":"android/FFmpeg/%E7%BC%96%E8%AF%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E7%9A%84FFmpeg/#_2","text":"\u5728 MainActivity \u4e2d\u589e\u52a0 exeCmd(String[] cmd) \u65b9\u6cd5 public static native int exeCmd(String[] cmd); \u5728 ffmpeg_utils.cpp \u589e\u52a0jni\u65b9\u6cd5 JNIEXPORT jint JNICALL Java_demo_simple_example_1ffmpeg_MainActivity_exeCmd(JNIEnv *env, jclass clazz, jobjectArray cmd) { int argc = env->GetArrayLength(cmd); logDebug(\"argc == %d\", argc); char *argv[argc]; for (int i = 0; i < argc; ++i) { jstring str = (jstring) env->GetObjectArrayElement(cmd, i); argv[i] = (char *) env->GetStringUTFChars(str, JNI_FALSE); logDebug(\"%s \", argv[i]); } return exe_cmd(argc, argv); // return 1; } \u6267\u884c\u547d\u4ee4 private void exeCmd() { String path = Environment.getExternalStorageDirectory().getAbsolutePath() + File.separator + \"get_cover1.mp4\"; String outPath = Environment.getExternalStorageDirectory().getAbsolutePath() + File.separator + \"video.flv\"; File outFile = new File(outPath); if (outFile.exists()) { outFile.delete(); } //\u88c1\u526a\u4e2a1s\u89c6\u9891 String cmd = \"ffmpeg -ss 00:00:00 -t 00:00:10 -i \" + path + \" -vcodec copy -acodec copy \" + outPath; String[] cmdArr = cmd.split(\" \"); int result = exeCmd(cmdArr); Log.d(TAG, \"exe cmd result == \" + result); } \u67e5\u770b\u65e5\u5fd7\u8f93\u51fa demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- Total: 331 packets (1993540 bytes) demuxed demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- Output file #0 (/storage/emulated/0/video.flv): demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- Output stream #0:0 (video): demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- 129 packets muxed (1822580 bytes); demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- Output stream #0:1 (audio): demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- 202 packets muxed (170960 bytes); demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- Total: 331 packets (1993540 bytes) muxed demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- 0 frames successfully decoded, 0 decoding errors demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- [AVIOContext @ 0xda2ea480] Statistics: 2 seeks, 10 writeouts demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- [AVIOContext @ 0xda2ea3c0] Statistics: 2161643 bytes read, 1 seeks demo.simple.example_ffmpeg D/MainActivity: ffmpeg log ----- demo.simple.example_ffmpeg D/MainActivity: exe cmd result == 0 \u6267\u884c\u547d\u4ee4\u7684\u8fd4\u56de\u503c ==0 \uff0c\u5e76\u4e14\u4e5f\u770b\u5230\u786e\u5b9e\u6587\u4ef6\u5df2\u7ecf\u751f\u6210\u51fa\u6765\u4e86\uff0c\u6211\u4eec adb pull \u628a\u6587\u4ef6\u5bfc\u51fa\u5230\u684c\u9762\u7528 ffprobe \u6216 ffplay \u770b\u770b\u3002 ffprobe video.flv ffprobe version 4.0.4 Copyright (c) 2007-2019 the FFmpeg developers built with Apple LLVM version 10.0.0 (clang-1000.10.44.4) configuration: libavutil 56. 14.100 / 56. 14.100 libavcodec 58. 18.100 / 58. 18.100 libavformat 58. 12.100 / 58. 12.100 libavdevice 58. 3.100 / 58. 3.100 libavfilter 7. 16.100 / 7. 16.100 libswscale 5. 1.100 / 5. 1.100 libswresample 3. 1.100 / 3. 1.100 Input #0, flv, from 'video.flv': Metadata: major_brand : mp42 minor_version : 0 compatible_brands: mp42mp41 encoder : Lavf58.45.100 Duration: 00:00:01.07, start: 0.033000, bitrate: 3130 kb/s Stream #0:0: Video: h264 (Main), yuv420p(tv, bt709, progressive), 1080x1920, 3390 kb/s, 30 fps, 30 tbr, 1k tbn, 60 tbc Stream #0:1: Audio: aac (LC), 48000 Hz, stereo, fltp, 317 kb/s \u53ef\u4ee5\u770b\u5230\u786e\u5b9e\u88c1\u526a\u751f\u6210\u4e86\u4e00\u4e2a1\u79d2\u7684\u89c6\u9891\uff0c\u867d\u7136\u540e\u7f00\u540d\u6211\u4eec\u7528\u7684 .flv \uff0c\u4f46\u662f\u5176\u5b9e\u6211\u4eec\u662f\u62f7\u8d1d\u7684\u89c6\u9891\u7f16\u7801\uff0c\u6240\u4ee5\u8fd8\u662f mp4 \u7684\u5c01\u88c5\u683c\u5f0f\u3002 \u6e90\u7801","title":"\u7f16\u5199\u5de5\u5177\u7c7b\u65b9\u6cd5"},{"location":"android/FFmpeg/%E7%BC%96%E8%AF%91%E5%8F%AF%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E7%9A%84FFmpeg/#_3","text":"\u4e0a\u9762\u7684\u4f8b\u5b50\u5e76\u4e0d\u662f\u4e00\u4e2a\u5b8c\u5584\u7684\u5de5\u5177\u7c7b\uff0c\u6bd4\u5982\u7f3a\u5c11Native\u5c42\u7684\u7ebf\u7a0b\u652f\u6301\uff0c\u51fa\u73b0\u9519\u8bef\u5c31\u4f1a\u76f4\u63a5\u95ea\u9000\uff0c\u7f3a\u5c11\u8fdb\u5ea6\u56de\u8c03\u7b49\uff0c\u6240\u4ee5\u8fd8\u662f\u76f4\u63a5\u4f7f\u7528\u73b0\u6210\u7684\u8f6e\u5b50\u6bd4\u8f83\u9760\u8c31\uff0c\u53ea\u662f\u6211\u4eec\u9700\u8981\u77e5\u9053\u8f6e\u5b50\u5927\u6982\u662f\u600e\u4e48\u9020\u51fa\u6765\u7684\u5c31\u884c\u4e86\u3002 \u8fd9\u91cc\u6211\u63a8\u8350\u4f7f\u7528 mobile-ffmpeg \u8fd9\u4e2a\u5f00\u6e90\u5e93\uff0c1.8k\u7684star\u8db3\u4ee5\u8bc1\u660e\u5176\u54c1\u8d28\u8fd8\u884c\uff0c\u76f4\u63a5\u5bfc\u5165\u7f16\u8bd1\u597d\u7684 aar \u5c31\u53ef\u4ee5\u6267\u884c\u547d\u4ee4\u884c\u5de5\u5177\u94fe\uff0c\u800c\u4e14\u53ef\u4ee5\u81ea\u884c\u7f16\u8bd1\u94fe\u63a5\u5f88\u591a\u6709\u7528\u7684\u7b2c\u4e09\u65b9library\uff0c\u6bd4\u5982 x264 \u3001 libwebp \u7b49\u3002 \u52a8\u624b\u80fd\u529b\u5f3a\u6216\u6709\u7279\u6b8a\u9700\u6c42\u7684\u53ef\u4ee5\u4f7f\u7528 android.sh \u81ea\u884c\u7f16\u8bd1\u51faFFmpeg\u5934\u6587\u4ef6\u548c\u52a8\u6001\u5e93\uff0c\u4ee5\u53caAndroid\u5de5\u5177\u94fe\u7684aar\u3002 \u6bd4\u5982\u8bf4\u6211\u73b0\u5728\u53ea\u9700\u8981\u4e00\u4e2a\u652f\u6301 arm64-v8a \u548c api16 \u53ca\u4ee5\u4e0a\u7684\u52a8\u6001\u5e93\uff0c\u90a3\u4e48\u6211\u5c31\u81ea\u5df1\u65b0\u5efa\u4e86\u4e00\u4e2ashell\u811a\u672c\u6587\u4ef6\uff1a #!/bin/bash export ANDROID_HOME=\"/Users/chenpeng/Library/Android/sdk/\" export ANDROID_NDK_ROOT=\"/Users/chenpeng/Desktop/work_space/ndk/android-ndk-r21b/\" build() { ./android.sh \\ --lts \\ --disable-arm-v7a \\ --disable-arm-v7a-neon \\ --disable-x86 \\ --disable-x86-64 } build \u6267\u884c\u5b8c\u8fd9\u4e2ashell\u540e\uff0c\u5c31\u4f1a\u5728 prebuilt \u76ee\u5f55\u4e0b\u751f\u4ea7\u5bf9\u5e94\u7684\u5934\u6587\u4ef6\uff0c\u52a8\u6001\u5e93\uff0c\u4ee5\u53caaar\u6587\u4ef6\uff0c\u76f4\u63a5\u62ff\u6765\u7528\u5c31\u53ef\u4ee5\u4e86\u3002","title":"\u4f7f\u7528\u5df2\u6709\u7684\u8f6e\u5b50"},{"location":"android/FFmpeg/%E7%BC%96%E8%AF%91%E6%88%90%E5%8A%A8%E6%80%81%E5%BA%93/","text":"\u7f16\u8bd1\u6210\u52a8\u6001\u5e93 \u73af\u5883 macOS High Sierra FFmpeg 4.3 android-ndk-r21b \u7f16\u8bd1so\u5e93 \u4e0b\u8f7dFFmpeg4.3\u6e90\u4ee3\u7801\uff0c\u8fdb\u5165\u6e90\u7801\u76ee\u5f55\u521b\u5efa build_android.sh \u811a\u672c\uff0cffmpeg\u4ece4.0\u8d77\u65b0\u589e\u4e86 target-os=android \uff0c\u6240\u4ee5\u4e0d\u7528\u518d\u4fee\u6539 configure \u6587\u4ef6\u3002 \u6ce8\u610f\uff1a ndk-17 \u4ee5\u524d\u5185\u7f6e\u7684\u7f16\u8bd1\u5668\u662f gcc \uff0c\u800c\u65b0\u7248\u7684ndk\u5df2\u7ecf\u7528 clang \u66ff\u4ee3\u4e86 gcc \u7f16\u8bd1\u5668\uff0c\u6240\u4ee5\u4f7f\u7528 -cc \u548c -cxx \u6307\u4ee4\u65f6\u8981\u7279\u522b\u6ce8\u610f\u81ea\u5df1\u8981\u4f7f\u7528\u7684\u7f16\u8bd1\u5668\u662f gcc \u8fd8\u662f clang \u3002 \u8fd8\u6709\u4e2a\u6211\u9047\u5230\u7684\u95ee\u9898\u5c31\u662f\u5728 ndk-r17c \u548c ndk-18b \u4e2d\u7684 toolchains/llvm/prebuilt/darwin-x86_64/bin \u4e2d\u6ca1\u6709 clang \u7f16\u8bd1\u5de5\u5177\u96c6\uff0c\u800c\u662f\u5728\u4e0a\u5c42\u76ee\u5f55\u4e2d\u3002 \u53ea\u6709 armv7-a \u7684\u6267\u884c\u6587\u4ef6\u4e2d\u95f4\u6709 eabi \u7ed3\u5c3e\uff0c\u5176\u4ed6\u6ca1\u6709\u3002\u4f8b\uff1a armv7a-linux-androideabi21-clang \uff0c x86_64-linux-android21-clang \u3002\u5982\u679c\u62a5\u9519 not found xxx file \u7684\u9519\u8bef\uff0c\u5c31\u81ea\u884c\u5230\u76f8\u5e94\u76ee\u5f55\u67e5\u770b\u3002 #!/bin/bash # ndk\u8def\u5f84 NDK=/Users/chenpeng/Desktop/work_space/ndk/android-ndk-r21b # \u7f16\u8bd1\u5de5\u5177\u94fe\u76ee\u5f55\uff0cndk17\u7248\u672c\u4ee5\u4e0a\u7528\u7684\u662fclang\uff0c\u4ee5\u4e0b\u662fgcc TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/darwin-x86_64 # \u7248\u672c\u53f7 API=21 # \u4ea4\u53c9\u7f16\u8bd1\u6811\u7684\u6839\u76ee\u5f55(\u67e5\u627e\u76f8\u5e94\u5934\u6587\u4ef6\u548c\u5e93\u7528) SYSROOT=\"${TOOLCHAIN}/sysroot\" # armv7-a OUTPUT_FOLDER=\"armeabi-v7a\" ARCH=\"arm\" CPU=\"armv7-a\" TOOL_CPU_NAME=armv7a TOOL_PREFIX=\"$TOOLCHAIN/bin/${TOOL_CPU_NAME}-linux-androideabi\" OPTIMIZE_CFLAGS=\"-march=$CPU\" # arm64-v8a\uff0c\u8fd9\u4e2a\u6307\u4ee4\u96c6\u6700\u4f4e\u652f\u6301api21 # OUTPUT_FOLDER=\"arm64-v8a\" # ARCH=\"aarch64\" # CPU=\"armv8-a\" # TOOL_CPU_NAME=aarch64 # TOOL_PREFIX=\"$TOOLCHAIN/bin/${TOOL_CPU_NAME}-linux-android\" # OPTIMIZE_CFLAGS=\"-march=$CPU\" # x86 # OUTPUT_FOLDER=\"x86\" # ARCH=\"x86\" # CPU=\"x86\" # TOOL_CPU_NAME=\"i686\" # TOOL_PREFIX=\"$TOOLCHAIN/bin/${TOOL_CPU_NAME}-linux-android\" # OPTIMIZE_CFLAGS=\"-march=i686 -mtune=intel -mssse3 -mfpmath=sse -m32\" # x86_64\uff0c\u8fd9\u4e2a\u6307\u4ee4\u96c6\u6700\u4f4e\u652f\u6301api21 # OUTPUT_FOLDER=\"x86_64\" # ARCH=\"x86_64\" # CPU=\"x86_64\" # TOOL_CPU_NAME=\"x86_64\" # TOOL_PREFIX=\"$TOOLCHAIN/bin/${TOOL_CPU_NAME}-linux-android\" # OPTIMIZE_CFLAGS=\"-march=$CPU\" # \u8f93\u51fa\u76ee\u5f55 PREFIX=\"${PWD}/android/$OUTPUT_FOLDER\" # so\u7684\u8f93\u51fa\u76ee\u5f55\uff0c --libdir=$LIB_DIR \u53ef\u4ee5\u4e0d\u7528\u6307\u5b9a\uff0c\u9ed8\u8ba4\u4f1a\u751f\u6210\u5728$PREFIX/lib\u76ee\u5f55\u4e2d #LIB_DIR=\"${PWD}/android/libs/$OUTPUT_FOLDER\" # \u7f16\u8bd1\u5668 CC=\"${TOOL_PREFIX}${API}-clang\" CXX=\"${TOOL_PREFIX}${API}-clang++\" # \u5b9a\u4e49\u6267\u884cconfigure\u7684shell\u65b9\u6cd5 function build_android() { ./configure \\ --prefix=$PREFIX \\ --enable-shared \\ --disable-static \\ --enable-jni \\ --disable-doc \\ --disable-programs \\ --disable-symver \\ --target-os=android \\ --arch=$ARCH \\ --cpu=$CPU \\ --cc=$CC \\ --cxx=$CXX \\ --enable-cross-compile \\ --sysroot=$SYSROOT \\ --extra-cflags=\"-Os -fpic $OPTIMIZE_CFLAGS\" \\ --extra-ldflags=\"\" \\ --disable-asm \\ $COMMON_FF_CFG_FLAGS make clean make -j8 make install } build_android \u66f4\u591a\u6784\u5efa\u53c2\u6570\u53ef\u4ee5\u4f7f\u7528 ./configure -h \u53c2\u770b shell\u811a\u672c\u8bed\u8a00\u4e0d\u719f\u7684\u53ef\u4ee5\u67e5\u770b\u6211\u7684 shell\u5b66\u4e60\u7b14\u8bb0 \u6267\u884c build_android.sh \u811a\u672c\uff0c\u7b49\u5f85\u811a\u672c\u6267\u884c\u5b8c\u6210\uff0c\u6267\u884c\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u9047\u5230\u7f3a\u5c11\u7ec4\u4ef6\u7684\u95ee\u9898\uff0c\u6309\u9700\u89e3\u51b3\u3002 # \u5982\u9047\u5230permission denied\uff0c\u8bf7chmod 777 xx.sh sh build_android.sh \u751f\u6210\u6587\u4ef6\u76ee\u5f55\u5982\u4e0b\uff1a \u521b\u5efa\u4e00\u4e2a\u65b0\u7684Android Cmake\u9879\u76ee \u5c06\u52a8\u6001\u5e93\u653e\u5165 libs/armeabi-v7a \u6587\u4ef6\u5939\uff0c\u5c06\u5934\u6587\u4ef6\u65b9\u6cd5 cpp \u76ee\u5f55 \u65b0\u589e ffmpeg_utils.cpp \u7c7b\uff0c\u914d\u7f6e build.gradle \uff0c\u914d\u7f6e CMakeLists.txt #include <jni.h> //\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e2ac++\u6587\u4ef6\uff0c\u5fc5\u987b\u628a\u5934\u6587\u4ef6\u5f15\u7528\u653e\u5230extern \"C\"\u4e2d //\u4e0d\u7136\u4e00\u76f4\u62a5undefined\u7684\u9519\u8bef\uff0c\u5751\u4e86\u5f88\u4e45\uff0c\u4ee5\u524d\u6211\u90fd\u662f\u5199c extern \"C\" { #include <libavutil/avutil.h> JNIEXPORT jstring JNICALL Java_demo_simple_example_1ffmpeg_MainActivity_getVersion(JNIEnv *env, jclass clazz) { const char *version = av_version_info(); return env->NewStringUTF(version); } } android { compileSdkVersion 29 buildToolsVersion \"30.0.0\" defaultConfig { applicationId \"demo.simple.example_ffmpeg\" minSdkVersion 21 targetSdkVersion 29 versionCode 1 versionName \"1.0\" testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\" //ndk so\u67b6\u6784\u7684\u9009\u62e9 externalNativeBuild { ndk { abiFilters 'armeabi-v7a' } } //so\u67e5\u627e\u8def\u5f84 sourceSets { main { jniLibs.srcDirs = ['libs'] } } } //cmake\u6587\u4ef6\u7684\u67e5\u627e\u8def\u5f84 externalNativeBuild { cmake { path file('CMakeLists.txt') } } } # \u8bbe\u7f6e\u6784\u5efa\u672c\u673a\u5e93\u6587\u4ef6\u6240\u9700\u7684 CMake\u7684\u6700\u5c0f\u7248\u672c cmake_minimum_required(VERSION 3.4.1) #\u6dfb\u52a0\u5934\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84 include_directories(src/main/cpp/include/) # \u6dfb\u52a0\u81ea\u5df1\u5199\u7684 C/C++\u6e90\u6587\u4ef6 add_library(utils #so\u540d\u79f0 SHARED #\u52a8\u6001\u5e93 src/main/cpp/ffmpeg_utils.cpp ) # \u6dfb\u52a0\u5916\u90e8\u7684\u5e93(\u53ef\u4ee5\u662f\u52a8\u6001\u5e93\u6216\u9759\u6001\u5e93)\uff0c\u8fd9\u91cc\u53ea\u5f15\u5165\u4e86avutil set(LIBS_DIR ${CMAKE_SOURCE_DIR}/libs/${ANDROID_ABI}) add_library( avutil SHARED IMPORTED) set_target_properties( avutil PROPERTIES IMPORTED_LOCATION ${LIBS_DIR}/libavutil.so) # \u4f9d\u8d56 NDK\u4e2d\u81ea\u5e26\u7684log\u5e93 find_library(log-lib log) # \u94fe\u63a5\u5e93 target_link_libraries( utils avutil ${log-lib}) \u52a0\u8f7d\u52a8\u6001\u5e93\uff0c\u83b7\u53d6FFmpeg\u7684\u7248\u672c\u53f7 public class MainActivity extends AppCompatActivity { private static final String TAG = \"MainActivity\"; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); TextView tvVersion = findViewById(R.id.tvVersion); String version = String.format(\"ffmpeg version == %s\", getVersion()); tvVersion.setText(version); Log.d(TAG, version); } static { System.loadLibrary(\"utils\"); System.loadLibrary(\"avutil\"); } public static native String getVersion(); } \u8f93\u51fa\u7ed3\u679c\uff1a ffmpeg version == 4.3 \u7b80\u5199\u5bfc\u5165\u52a8\u6001\u5e93\u7684cmake\u8bed\u53e5 \u4e0a\u9762 CmakeList \u5f15\u5165 avutil \u4f7f\u7528\u4e86 add_library \u548c set_target_properties \uff0c\u5982\u679c\u540c\u65f6\u5f15\u7528\u5f88\u591a\u52a8\u6001\u5e93\uff0c\u90a3\u5c31\u8981\u5199\u5f88\u591a\u7684\u91cd\u590d\u914d\u7f6e\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u7b80\u5199\u914d\u7f6e\u3002\u6216\u8005\u4e5f\u53ef\u4ee5\u5c06\u6240\u6709\u52a8\u6001\u5e93\u5408\u5e76\u6210\u4e00\u4e2a\u52a8\u6001\u5e93\u3002 # \u53bb\u6389`add_library`\u548c`set_target_properties`\u7684\u76f8\u5173\u914d\u7f6e #\u8bbe\u7f6e\u67e5\u627e\u52a8\u6001\u5e93\u4f4d\u7f6e set(LINK_DIR ${CMAKE_SOURCE_DIR}/libs/${CMAKE_ANDROID_ARCH_ABI}) link_directories(${LINK_DIR}) #\u627e\u5230\u6240\u6709\u7684so\u5e93\uff0c\u5b58\u653e\u5728\u5168\u5c40\u53d8\u91cfSO_DIR\u4e2d file(GLOB SO_DIR ${LINK_DIR}/*.so) # \u94fe\u63a5\u5e93 target_link_libraries( utils ${SO_DIR} ${log-lib}) \u6e90\u7801\u5730\u5740 example_ffmpeg","title":"\u7f16\u8bd1\u6210\u52a8\u6001\u5e93"},{"location":"android/FFmpeg/%E7%BC%96%E8%AF%91%E6%88%90%E5%8A%A8%E6%80%81%E5%BA%93/#_1","text":"","title":"\u7f16\u8bd1\u6210\u52a8\u6001\u5e93"},{"location":"android/FFmpeg/%E7%BC%96%E8%AF%91%E6%88%90%E5%8A%A8%E6%80%81%E5%BA%93/#_2","text":"macOS High Sierra FFmpeg 4.3 android-ndk-r21b","title":"\u73af\u5883"},{"location":"android/FFmpeg/%E7%BC%96%E8%AF%91%E6%88%90%E5%8A%A8%E6%80%81%E5%BA%93/#so","text":"\u4e0b\u8f7dFFmpeg4.3\u6e90\u4ee3\u7801\uff0c\u8fdb\u5165\u6e90\u7801\u76ee\u5f55\u521b\u5efa build_android.sh \u811a\u672c\uff0cffmpeg\u4ece4.0\u8d77\u65b0\u589e\u4e86 target-os=android \uff0c\u6240\u4ee5\u4e0d\u7528\u518d\u4fee\u6539 configure \u6587\u4ef6\u3002 \u6ce8\u610f\uff1a ndk-17 \u4ee5\u524d\u5185\u7f6e\u7684\u7f16\u8bd1\u5668\u662f gcc \uff0c\u800c\u65b0\u7248\u7684ndk\u5df2\u7ecf\u7528 clang \u66ff\u4ee3\u4e86 gcc \u7f16\u8bd1\u5668\uff0c\u6240\u4ee5\u4f7f\u7528 -cc \u548c -cxx \u6307\u4ee4\u65f6\u8981\u7279\u522b\u6ce8\u610f\u81ea\u5df1\u8981\u4f7f\u7528\u7684\u7f16\u8bd1\u5668\u662f gcc \u8fd8\u662f clang \u3002 \u8fd8\u6709\u4e2a\u6211\u9047\u5230\u7684\u95ee\u9898\u5c31\u662f\u5728 ndk-r17c \u548c ndk-18b \u4e2d\u7684 toolchains/llvm/prebuilt/darwin-x86_64/bin \u4e2d\u6ca1\u6709 clang \u7f16\u8bd1\u5de5\u5177\u96c6\uff0c\u800c\u662f\u5728\u4e0a\u5c42\u76ee\u5f55\u4e2d\u3002 \u53ea\u6709 armv7-a \u7684\u6267\u884c\u6587\u4ef6\u4e2d\u95f4\u6709 eabi \u7ed3\u5c3e\uff0c\u5176\u4ed6\u6ca1\u6709\u3002\u4f8b\uff1a armv7a-linux-androideabi21-clang \uff0c x86_64-linux-android21-clang \u3002\u5982\u679c\u62a5\u9519 not found xxx file \u7684\u9519\u8bef\uff0c\u5c31\u81ea\u884c\u5230\u76f8\u5e94\u76ee\u5f55\u67e5\u770b\u3002 #!/bin/bash # ndk\u8def\u5f84 NDK=/Users/chenpeng/Desktop/work_space/ndk/android-ndk-r21b # \u7f16\u8bd1\u5de5\u5177\u94fe\u76ee\u5f55\uff0cndk17\u7248\u672c\u4ee5\u4e0a\u7528\u7684\u662fclang\uff0c\u4ee5\u4e0b\u662fgcc TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/darwin-x86_64 # \u7248\u672c\u53f7 API=21 # \u4ea4\u53c9\u7f16\u8bd1\u6811\u7684\u6839\u76ee\u5f55(\u67e5\u627e\u76f8\u5e94\u5934\u6587\u4ef6\u548c\u5e93\u7528) SYSROOT=\"${TOOLCHAIN}/sysroot\" # armv7-a OUTPUT_FOLDER=\"armeabi-v7a\" ARCH=\"arm\" CPU=\"armv7-a\" TOOL_CPU_NAME=armv7a TOOL_PREFIX=\"$TOOLCHAIN/bin/${TOOL_CPU_NAME}-linux-androideabi\" OPTIMIZE_CFLAGS=\"-march=$CPU\" # arm64-v8a\uff0c\u8fd9\u4e2a\u6307\u4ee4\u96c6\u6700\u4f4e\u652f\u6301api21 # OUTPUT_FOLDER=\"arm64-v8a\" # ARCH=\"aarch64\" # CPU=\"armv8-a\" # TOOL_CPU_NAME=aarch64 # TOOL_PREFIX=\"$TOOLCHAIN/bin/${TOOL_CPU_NAME}-linux-android\" # OPTIMIZE_CFLAGS=\"-march=$CPU\" # x86 # OUTPUT_FOLDER=\"x86\" # ARCH=\"x86\" # CPU=\"x86\" # TOOL_CPU_NAME=\"i686\" # TOOL_PREFIX=\"$TOOLCHAIN/bin/${TOOL_CPU_NAME}-linux-android\" # OPTIMIZE_CFLAGS=\"-march=i686 -mtune=intel -mssse3 -mfpmath=sse -m32\" # x86_64\uff0c\u8fd9\u4e2a\u6307\u4ee4\u96c6\u6700\u4f4e\u652f\u6301api21 # OUTPUT_FOLDER=\"x86_64\" # ARCH=\"x86_64\" # CPU=\"x86_64\" # TOOL_CPU_NAME=\"x86_64\" # TOOL_PREFIX=\"$TOOLCHAIN/bin/${TOOL_CPU_NAME}-linux-android\" # OPTIMIZE_CFLAGS=\"-march=$CPU\" # \u8f93\u51fa\u76ee\u5f55 PREFIX=\"${PWD}/android/$OUTPUT_FOLDER\" # so\u7684\u8f93\u51fa\u76ee\u5f55\uff0c --libdir=$LIB_DIR \u53ef\u4ee5\u4e0d\u7528\u6307\u5b9a\uff0c\u9ed8\u8ba4\u4f1a\u751f\u6210\u5728$PREFIX/lib\u76ee\u5f55\u4e2d #LIB_DIR=\"${PWD}/android/libs/$OUTPUT_FOLDER\" # \u7f16\u8bd1\u5668 CC=\"${TOOL_PREFIX}${API}-clang\" CXX=\"${TOOL_PREFIX}${API}-clang++\" # \u5b9a\u4e49\u6267\u884cconfigure\u7684shell\u65b9\u6cd5 function build_android() { ./configure \\ --prefix=$PREFIX \\ --enable-shared \\ --disable-static \\ --enable-jni \\ --disable-doc \\ --disable-programs \\ --disable-symver \\ --target-os=android \\ --arch=$ARCH \\ --cpu=$CPU \\ --cc=$CC \\ --cxx=$CXX \\ --enable-cross-compile \\ --sysroot=$SYSROOT \\ --extra-cflags=\"-Os -fpic $OPTIMIZE_CFLAGS\" \\ --extra-ldflags=\"\" \\ --disable-asm \\ $COMMON_FF_CFG_FLAGS make clean make -j8 make install } build_android \u66f4\u591a\u6784\u5efa\u53c2\u6570\u53ef\u4ee5\u4f7f\u7528 ./configure -h \u53c2\u770b shell\u811a\u672c\u8bed\u8a00\u4e0d\u719f\u7684\u53ef\u4ee5\u67e5\u770b\u6211\u7684 shell\u5b66\u4e60\u7b14\u8bb0 \u6267\u884c build_android.sh \u811a\u672c\uff0c\u7b49\u5f85\u811a\u672c\u6267\u884c\u5b8c\u6210\uff0c\u6267\u884c\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u9047\u5230\u7f3a\u5c11\u7ec4\u4ef6\u7684\u95ee\u9898\uff0c\u6309\u9700\u89e3\u51b3\u3002 # \u5982\u9047\u5230permission denied\uff0c\u8bf7chmod 777 xx.sh sh build_android.sh \u751f\u6210\u6587\u4ef6\u76ee\u5f55\u5982\u4e0b\uff1a","title":"\u7f16\u8bd1so\u5e93"},{"location":"android/FFmpeg/%E7%BC%96%E8%AF%91%E6%88%90%E5%8A%A8%E6%80%81%E5%BA%93/#android-cmake","text":"\u5c06\u52a8\u6001\u5e93\u653e\u5165 libs/armeabi-v7a \u6587\u4ef6\u5939\uff0c\u5c06\u5934\u6587\u4ef6\u65b9\u6cd5 cpp \u76ee\u5f55 \u65b0\u589e ffmpeg_utils.cpp \u7c7b\uff0c\u914d\u7f6e build.gradle \uff0c\u914d\u7f6e CMakeLists.txt #include <jni.h> //\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e2ac++\u6587\u4ef6\uff0c\u5fc5\u987b\u628a\u5934\u6587\u4ef6\u5f15\u7528\u653e\u5230extern \"C\"\u4e2d //\u4e0d\u7136\u4e00\u76f4\u62a5undefined\u7684\u9519\u8bef\uff0c\u5751\u4e86\u5f88\u4e45\uff0c\u4ee5\u524d\u6211\u90fd\u662f\u5199c extern \"C\" { #include <libavutil/avutil.h> JNIEXPORT jstring JNICALL Java_demo_simple_example_1ffmpeg_MainActivity_getVersion(JNIEnv *env, jclass clazz) { const char *version = av_version_info(); return env->NewStringUTF(version); } } android { compileSdkVersion 29 buildToolsVersion \"30.0.0\" defaultConfig { applicationId \"demo.simple.example_ffmpeg\" minSdkVersion 21 targetSdkVersion 29 versionCode 1 versionName \"1.0\" testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\" //ndk so\u67b6\u6784\u7684\u9009\u62e9 externalNativeBuild { ndk { abiFilters 'armeabi-v7a' } } //so\u67e5\u627e\u8def\u5f84 sourceSets { main { jniLibs.srcDirs = ['libs'] } } } //cmake\u6587\u4ef6\u7684\u67e5\u627e\u8def\u5f84 externalNativeBuild { cmake { path file('CMakeLists.txt') } } } # \u8bbe\u7f6e\u6784\u5efa\u672c\u673a\u5e93\u6587\u4ef6\u6240\u9700\u7684 CMake\u7684\u6700\u5c0f\u7248\u672c cmake_minimum_required(VERSION 3.4.1) #\u6dfb\u52a0\u5934\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84 include_directories(src/main/cpp/include/) # \u6dfb\u52a0\u81ea\u5df1\u5199\u7684 C/C++\u6e90\u6587\u4ef6 add_library(utils #so\u540d\u79f0 SHARED #\u52a8\u6001\u5e93 src/main/cpp/ffmpeg_utils.cpp ) # \u6dfb\u52a0\u5916\u90e8\u7684\u5e93(\u53ef\u4ee5\u662f\u52a8\u6001\u5e93\u6216\u9759\u6001\u5e93)\uff0c\u8fd9\u91cc\u53ea\u5f15\u5165\u4e86avutil set(LIBS_DIR ${CMAKE_SOURCE_DIR}/libs/${ANDROID_ABI}) add_library( avutil SHARED IMPORTED) set_target_properties( avutil PROPERTIES IMPORTED_LOCATION ${LIBS_DIR}/libavutil.so) # \u4f9d\u8d56 NDK\u4e2d\u81ea\u5e26\u7684log\u5e93 find_library(log-lib log) # \u94fe\u63a5\u5e93 target_link_libraries( utils avutil ${log-lib})","title":"\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Android Cmake\u9879\u76ee"},{"location":"android/FFmpeg/%E7%BC%96%E8%AF%91%E6%88%90%E5%8A%A8%E6%80%81%E5%BA%93/#ffmpeg","text":"public class MainActivity extends AppCompatActivity { private static final String TAG = \"MainActivity\"; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); TextView tvVersion = findViewById(R.id.tvVersion); String version = String.format(\"ffmpeg version == %s\", getVersion()); tvVersion.setText(version); Log.d(TAG, version); } static { System.loadLibrary(\"utils\"); System.loadLibrary(\"avutil\"); } public static native String getVersion(); } \u8f93\u51fa\u7ed3\u679c\uff1a ffmpeg version == 4.3","title":"\u52a0\u8f7d\u52a8\u6001\u5e93\uff0c\u83b7\u53d6FFmpeg\u7684\u7248\u672c\u53f7"},{"location":"android/FFmpeg/%E7%BC%96%E8%AF%91%E6%88%90%E5%8A%A8%E6%80%81%E5%BA%93/#cmake","text":"\u4e0a\u9762 CmakeList \u5f15\u5165 avutil \u4f7f\u7528\u4e86 add_library \u548c set_target_properties \uff0c\u5982\u679c\u540c\u65f6\u5f15\u7528\u5f88\u591a\u52a8\u6001\u5e93\uff0c\u90a3\u5c31\u8981\u5199\u5f88\u591a\u7684\u91cd\u590d\u914d\u7f6e\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u7b80\u5199\u914d\u7f6e\u3002\u6216\u8005\u4e5f\u53ef\u4ee5\u5c06\u6240\u6709\u52a8\u6001\u5e93\u5408\u5e76\u6210\u4e00\u4e2a\u52a8\u6001\u5e93\u3002 # \u53bb\u6389`add_library`\u548c`set_target_properties`\u7684\u76f8\u5173\u914d\u7f6e #\u8bbe\u7f6e\u67e5\u627e\u52a8\u6001\u5e93\u4f4d\u7f6e set(LINK_DIR ${CMAKE_SOURCE_DIR}/libs/${CMAKE_ANDROID_ARCH_ABI}) link_directories(${LINK_DIR}) #\u627e\u5230\u6240\u6709\u7684so\u5e93\uff0c\u5b58\u653e\u5728\u5168\u5c40\u53d8\u91cfSO_DIR\u4e2d file(GLOB SO_DIR ${LINK_DIR}/*.so) # \u94fe\u63a5\u5e93 target_link_libraries( utils ${SO_DIR} ${log-lib})","title":"\u7b80\u5199\u5bfc\u5165\u52a8\u6001\u5e93\u7684cmake\u8bed\u53e5"},{"location":"android/FFmpeg/%E7%BC%96%E8%AF%91%E6%88%90%E5%8A%A8%E6%80%81%E5%BA%93/#_3","text":"example_ffmpeg","title":"\u6e90\u7801\u5730\u5740"},{"location":"android/FFmpeg/%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E9%A6%96%E5%B8%A7%E8%BD%ACBitmap%E5%B0%81%E9%9D%A2%E5%9B%BE/","text":"\u83b7\u53d6\u89c6\u9891\u9996\u5e27\u8f6cBitmap\u5c01\u9762\u56fe \u8fd9\u662f\u5b66\u4e60ffmpeg\u7684\u7b2c\u4e8c\u7bc7\u535a\u5ba2\uff0c\u4e3b\u8981\u662f\u4f7f\u7528ffmpeg\u83b7\u53d6\u672c\u5730\u89c6\u9891\u6587\u4ef6\u7684\u7b2c\u4e00\u5e27\u6570\u636e\u8f6c\u6362\u4e3aBitmap\uff0c\u7136\u540e\u629b\u7ed9\u4e0a\u5c42ImageView\u663e\u793a\u3002 \u5927\u81f4\u6d41\u7a0b\u53ef\u4ee5\u5206\u4e3a\uff1a \u4f20\u5165\u89c6\u9891\u6587\u4ef6\u8def\u5f84\uff0c\u89e3\u5c01\u88c5 \u627e\u5230\u89c6\u9891\u6d41\uff0c\u4ece\u6d41\u4e2d\u627e\u5230\u89e3\u7801\u5668 \u6253\u5f00\u89e3\u7801\u5668\uff0c\u8bfb\u53d6\u7b2c\u4e00\u4e2a\u5b8c\u6574\u7684AVFrame\u5e27 \u521b\u5efabitmap\uff0c\u4f7f\u7528libyuv\u5c06yuv\u8f6c\u4e3aargb\u5173\u8054\u7ed9bitmap\u663e\u793a \u91ca\u653e\u8d44\u6e90 \u5148\u5b9a\u4e49jni\u51fd\u6570 public static native Bitmap getCover(String path); JNIEXPORT jobject JNICALL Java_demo_simple_example_1ffmpeg_MainActivity_getCover(JNIEnv *env, jclass clazz, jstring path) { const char *_path = env->GetStringUTFChars(path, JNI_FALSE); int ret = -1; } \u6253\u5f00\u89c6\u9891\u6587\u4ef6\uff0c\u89e3\u5c01\u88c5 //\u5c01\u88c5\u683c\u5f0f\u4e0a\u4e0b\u6587 AVFormatContext *ifmt_ctx = NULL; //\u6253\u5f00\u8f93\u5165\u6e90 ret = avformat_open_input(&ifmt_ctx, _path, 0, 0); if (ret < 0) { logDebug(\"\u89e3\u5c01\u88c5\u5931\u8d25 -- %s\", av_err2str(ret)); return nullptr; } \u4f7f\u7528 avformat_open_input() \u51fd\u6570\u4ece\u8f93\u5165\u6587\u4ef6\u4e2d\u627e\u5230\u683c\u5f0f\u5316I/O\u4e0a\u4e0b\u6587 AVFormatContext \u7ed3\u6784\u4f53\uff0c\u5982\u679c\u662f\u7f16\u7801\u8981\u65b0\u5efa AVFormatContext \u8981\u4f7f\u7528 avformat_alloc_context() \u51fd\u6570\u3002 \u4f7f\u7528 avformat_open_input() \u52a1\u5fc5\u8bb0\u5f97\u5728\u7a0b\u5e8f\u6267\u884c\u5b8c\u6210\u540e\u8c03\u7528 avformat_close_input() \u91ca\u653e\u8d44\u6e90\uff0c\u5e76\u4e14\u8be5\u65b9\u6cd5\u6709\u4e00\u4e2a int \u7684\u8fd4\u56de\u503c\uff0c 0 \u8868\u793a\u6267\u884c\u6210\u529f\uff0c \u8d1f\u6570 \u8868\u793a\u6267\u884c\u5931\u8d25\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528 av_err2str() \u51fd\u6570\u83b7\u53d6\u6267\u884c\u51fd\u6570\u5931\u8d25\u7684\u8be6\u7ec6\u65e5\u5fd7\uff0c\u8be5\u51fd\u6570\u5b9a\u4e49\u5728 libavutil/error.h \u5934\u6587\u4ef6\u4e2d\u3002 \u8fd9\u91cc\u6709\u4e2a\u5c0f\u6280\u5de7\uff0cffmpeg\u5927\u591a\u6709\u8fd4\u56de\u503c\u51fd\u6570\uff0c \u5927\u4e8e\u7b49\u4e8e0 \u90fd\u4e3a\u6210\u529f\uff0c\u5c0f\u4e8e0\u90fd\u4e3a\u6267\u884c\u5931\u8d25\u3002 \u627e\u5230\u6d41\uff0c\u4ece\u6d41\u7684\u6570\u7ec4\u4e2d\u627e\u5230\u89c6\u9891\u6d41 ret = avformat_find_stream_info(ifmt_ctx, 0); int video_stream_index = -1; AVStream *pStream = NULL; AVCodecParameters *codecpar = NULL; //\u627e\u51fa\u89c6\u9891\u6d41 for (int i = 0; i < ifmt_ctx->nb_streams; ++i) { pStream = ifmt_ctx->streams[i]; if (pStream->codecpar->codec_type == AVMEDIA_TYPE_VIDEO) { codecpar = pStream->codecpar; video_stream_index = i; } } avformat_find_stream_info() \u51fd\u6570\u4ece\u5a92\u4f53\u6587\u4ef6\u7684\u6570\u636e\u5305\u4e2d\u83b7\u53d6\u6d41\u4fe1\u606f\u8d4b\u503c\u7ed9 AVFormatContext \u3002 AVFormatContext \u7ed3\u6784\u4f53\u4e2d\u7684 streams \u5b57\u6bb5\u5305\u542b\u4e86\u5a92\u4f53\u6587\u4ef6\u4e2d\u6240\u4ee5\u7684\u6d41\u4fe1\u606f\uff0c\u5305\u542b \u89c6\u9891\u6d41 \uff0c \u97f3\u9891\u6d41 \uff0c \u5b57\u5e55\u6d41 \u7b49\u3002 AVCodecParameters \u7ed3\u6784\u4f53\u63cf\u8ff0\u4e86\u88ab\u7f16\u7801\u540e\u7684\u6d41\u7684\u5c5e\u6027\u3002 \u8c22\u8c22\u5927\u4f6c\u63d0\u70b9\uff0c\u8fd9\u91cc\u627e\u6d41\u7684index\u5176\u5b9e\u53ef\u4ee5\u4f7f\u7528 av_find_best_stream() \u51fd\u6570\u76f4\u63a5\u627e\u5230\u6700\u5408\u9002\u7684\u90a3\u4e2a\u6d41index\u3002 //\u627e\u5230\u6700\u5408\u9002\u7684\u6d41 int stream_index = av_find_best_stream(ifmt_ctx, AVMEDIA_TYPE_VIDEO, -1, -1, NULL, 0); \u627e\u5230\u89e3\u7801\u5668\uff0c\u7533\u8bf7\u7f16\u89e3\u7801\u5668\u4e0a\u4e0b\u6587 logDebug(\"\u89e3\u7801\u5668 == %s\", avcodec_get_name(codecpar->codec_id)); AVCodec *codec = avcodec_find_decoder(codecpar->codec_id); //\u7533\u8bf7\u7f16\u89e3\u7801\u5668\u4e0a\u4e0b\u6587 AVCodecContext *codec_ctx = avcodec_alloc_context3(codec); \u6253\u5f00\u7f16\u89e3\u7801\u5668\uff0c\u83b7\u53d6\u9996\u5e27 //\u62f7\u8d1dparameters \u5230 \u7f16\u89e3\u7801\u5668\u7684context ret = avcodec_parameters_to_context(codec_ctx, codecpar); //\u6253\u5f00\u7f16\u89e3\u7801\u5668 ret = avcodec_open2(codec_ctx, codec, NULL); //\u7533\u8bf7\u4e00\u4e2a\u5e27\u7ed3\u6784\u4f53 AVFrame *pFrame = av_frame_alloc(); int frameFinished; while (av_read_frame(ifmt_ctx, &pkg) >= 0) { if (pkg.stream_index != video_stream_index) { continue; } ret = avcodec_decode_video2(codec_ctx, pFrame, &frameFinished, &pkg); if (!frameFinished) continue; } av_read_frame() \u51fd\u6570\u8bfb\u53d6\u89c6\u9891\u6d41\u4fe1\u606f\uff0c\u5e76\u5c06\u5176\u5b58\u653e\u5230 AVPacket \u7ed3\u6784\u7684 pkt \u53d8\u91cf\u4e2d\uff0c\u8fd9\u91cc\u6211\u4eec\u53ea\u9700\u5206\u914d AVPacket \u7ed3\u6784\u4f53\u7684\u5185\u5b58\uff0c\u6570\u636e \uff08pkt->data\uff09 \u7684\u6570\u636e\u5219\u7531 FFmpeg \u5728\u5176\u5185\u90e8\u81ea\u52a8\u5206\u914d\uff0c\u4e0d\u8fc7\u4f7f\u7528\u5b8c\u6bd5\u540e\uff0c\u8981\u8c03\u7528 av_packet_unref() \u51fd\u6570\u91ca\u653e\u3002 av_read_frame() \u51fd\u6570\u7684\u8fd4\u56de\u503c\u5982\u679c \u5c0f\u4e8e0 \u4ee3\u8868\u53d1\u751f\u4e86\u9519\u8bef\u6216\u8005\u662f\u8bfb\u5230\u4e86\u6587\u4ef6\u7684\u672b\u5c3e\u3002 avcodec_decode_video() \u51fd\u6570\u53ef\u4ee5\u5c06 packet \u8f6c\u6362\u6210 frame\uff0c\u4e0d\u8fc7\uff0c\u89e3\u7801\u4e00\u4e2a packet \u4e0d\u4e00\u5b9a\u80fd\u591f\u83b7\u5f97 frame \u7684\u5168\u90e8\u4fe1\u606f\uff0c\u6240\u4ee5\u9700\u8981\u501f\u52a9 frameFinished \u6807\u5fd7\u4f4d\u7528\u4e8e\u5224\u65ad\u8fd9\u4e00\u8fc7\u7a0b\u3002\u5176\u5b9e\u65b0\u7248\u5df2\u7ecf\u4f7f\u7528 avcodec_send_packet() \u548c avcodec_receive_frame() \u4ee3\u66ff\u4e86\u8fd9\u4e2a\u51fd\u6570\uff0c\u4f46\u662f\u8fd9\u91cc\u7528\u4e0b\u4e5f\u6ca1\u5173\u7cfb\u3002 frameFinished \u53c2\u6570 =0 \u65f6\u8868\u793a\u6ca1\u6709\u5e27\u53ef\u4ee5\u89e3\u538b\u7f29\u4e86\uff0c\u53cd\u4e4b\u4e0d\u4e3a0\u65f6\u5c31\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u89e3\u538b\u7f29\u3002 \u521b\u5efaBitmap jobject createBitmap(JNIEnv *env, int width, int height) { jclass bitmapCls = env->FindClass(\"android/graphics/Bitmap\"); jmethodID createBitmapFunction = env->GetStaticMethodID(bitmapCls, \"createBitmap\", \"(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;\"); jstring configName = env->NewStringUTF(\"ARGB_8888\"); jclass bitmapConfigClass = env->FindClass(\"android/graphics/Bitmap$Config\"); jmethodID valueOfBitmapConfigFunction = env->GetStaticMethodID(bitmapConfigClass, \"valueOf\", \"(Ljava/lang/String;)Landroid/graphics/Bitmap$Config;\"); jobject bitmapConfig = env->CallStaticObjectMethod(bitmapConfigClass, valueOfBitmapConfigFunction, configName); jobject newBitmap = env->CallStaticObjectMethod(bitmapCls, createBitmapFunction, width, height, bitmapConfig); return newBitmap; } \u5e38\u89c4\u64cd\u4f5c\uff0c\u5728native\u5c42\u8c03\u7528java\u5c42\u7684\u65b9\u6cd5\uff0cjni\u4e0d\u719f\u7684\u53ef\u4ee5\u67e5\u770b \u6211\u7684JNI\u5b66\u4e60\u7b14\u8bb0 \u4f7f\u7528libyuv\u5199\u5165rgb\u50cf\u7d20\u4fe1\u606f \u5148\u4f7f\u7528 bitmap.h \u5934\u6587\u4ef6\u4e2d AndroidBitmap_lockPixels() \u7684\u51fd\u6570\u7ed1\u5b9a\u50cf\u7d20\u6307\u9488\u7684\u5730\u5740\uff0c\u4f7f\u7528libyuv\u4e2d\u7684 I420ToABGR() \u51fd\u6570\u5c06 yuv420p \u8f6c\u6362\u4e3a argb \uff0c\u8bb0\u5f97\u6700\u540e\u4f7f\u7528 AndroidBitmap_unlockPixels() \u51fd\u6570\u56de\u6536Bitmap\u3002 jobject bmp; bmp = createBitmap(env, codec_ctx->width, codec_ctx->height); void *addr_pixels; ret = AndroidBitmap_lockPixels(env, bmp, &addr_pixels); //yuv420p to argb int linesize = pFrame->width * 4; libyuv::I420ToABGR(pFrame->data[0], pFrame->linesize[0], // Y pFrame->data[1], pFrame->linesize[1], // U pFrame->data[2], pFrame->linesize[2], // V (uint8_t *) addr_pixels, linesize, // RGBA pFrame->width, pFrame->height); \u4e0a\u9762\u7684 lineSize \u8ba1\u7b97\u89c4\u5219\u4e3a\uff1a\u4e00\u4e2a\u50cf\u7d20\u70b9\u67094\u4e2a\u5b57\u8282\uff0c\u6240\u4ee5\u8981\u5bbd\u5ea6x4 Yuv420p\u8f6cARGB\u7684\u51fd\u6570\u540d\u662f I420ToABGR \uff0c\u5e76\u4e0d\u662f I420ToARGB \u3002\u6211\u5751\uff0c\u4e4b\u524d\u624b\u6253\u4ee3\u7801\u8fc7\u5feb\uff0c\u5bfc\u81f4\u751f\u6210\u7684Bitmap\u989c\u8272\u663e\u793a\u4e00\u76f4\u90fd\u4e0d\u5bf9\uff0c\u627e\u4e86\u597d\u4e45\u90fd\u6ca1\u53d1\u73b0\u9519\u8bef\u5728\u54ea\u91cc\uff0c\u8fd8\u662f\u767e\u5ea6\u5230\u4e86\u4e00\u7bc7\u535a\u4e3b\u4e5f\u662f\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u8fd9\u5c31\u662f\u4eba\u7684\u56fa\u5316\u601d\u7ef4\u554a\uff01 \u91ca\u653e\u8d44\u6e90 av_packet_unref(&pkg); AndroidBitmap_unlockPixels(env, bmp); av_free(pFrame); avcodec_close(codec_ctx); avformat_close_input(&ifmt_ctx); env->ReleaseStringUTFChars(path, _path); Activity\u4e2d\u7684\u4ee3\u7801 String path = Environment.getExternalStorageDirectory().getAbsolutePath() + File.separator + \"get_cover.mp4\"; Bitmap bitmap = getCover(path); Log.d(TAG, \"bitmap width == \" + bitmap.getWidth()); Log.d(TAG, \"bitmap height == \" + bitmap.getHeight()); Log.d(TAG, \"bitmap config == \" + bitmap.getConfig().name()); Log.d(TAG, \"bitmap byteCount == \" + bitmap.getByteCount()); ImageView ivCover = findViewById(R.id.ivCover); ivCover.setImageBitmap(bitmap); Log\u8f93\u51fa\u548c\u754c\u9762\u663e\u793a demo.simple.example_ffmpeg D/MainActivity: bitmap width == 1080 demo.simple.example_ffmpeg D/MainActivity: bitmap height == 1920 demo.simple.example_ffmpeg D/MainActivity: bitmap config == ARGB_8888 demo.simple.example_ffmpeg D/MainActivity: bitmap byteCount == 8294400 \u5b8c\u6574\u4ee3\u7801 example_ffmpeg","title":"\u83b7\u53d6\u89c6\u9891\u9996\u5e27\u8f6cBitmap\u5c01\u9762\u56fe"},{"location":"android/FFmpeg/%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E9%A6%96%E5%B8%A7%E8%BD%ACBitmap%E5%B0%81%E9%9D%A2%E5%9B%BE/#bitmap","text":"\u8fd9\u662f\u5b66\u4e60ffmpeg\u7684\u7b2c\u4e8c\u7bc7\u535a\u5ba2\uff0c\u4e3b\u8981\u662f\u4f7f\u7528ffmpeg\u83b7\u53d6\u672c\u5730\u89c6\u9891\u6587\u4ef6\u7684\u7b2c\u4e00\u5e27\u6570\u636e\u8f6c\u6362\u4e3aBitmap\uff0c\u7136\u540e\u629b\u7ed9\u4e0a\u5c42ImageView\u663e\u793a\u3002 \u5927\u81f4\u6d41\u7a0b\u53ef\u4ee5\u5206\u4e3a\uff1a \u4f20\u5165\u89c6\u9891\u6587\u4ef6\u8def\u5f84\uff0c\u89e3\u5c01\u88c5 \u627e\u5230\u89c6\u9891\u6d41\uff0c\u4ece\u6d41\u4e2d\u627e\u5230\u89e3\u7801\u5668 \u6253\u5f00\u89e3\u7801\u5668\uff0c\u8bfb\u53d6\u7b2c\u4e00\u4e2a\u5b8c\u6574\u7684AVFrame\u5e27 \u521b\u5efabitmap\uff0c\u4f7f\u7528libyuv\u5c06yuv\u8f6c\u4e3aargb\u5173\u8054\u7ed9bitmap\u663e\u793a \u91ca\u653e\u8d44\u6e90","title":"\u83b7\u53d6\u89c6\u9891\u9996\u5e27\u8f6cBitmap\u5c01\u9762\u56fe"},{"location":"android/FFmpeg/%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E9%A6%96%E5%B8%A7%E8%BD%ACBitmap%E5%B0%81%E9%9D%A2%E5%9B%BE/#jni","text":"public static native Bitmap getCover(String path); JNIEXPORT jobject JNICALL Java_demo_simple_example_1ffmpeg_MainActivity_getCover(JNIEnv *env, jclass clazz, jstring path) { const char *_path = env->GetStringUTFChars(path, JNI_FALSE); int ret = -1; }","title":"\u5148\u5b9a\u4e49jni\u51fd\u6570"},{"location":"android/FFmpeg/%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E9%A6%96%E5%B8%A7%E8%BD%ACBitmap%E5%B0%81%E9%9D%A2%E5%9B%BE/#_1","text":"//\u5c01\u88c5\u683c\u5f0f\u4e0a\u4e0b\u6587 AVFormatContext *ifmt_ctx = NULL; //\u6253\u5f00\u8f93\u5165\u6e90 ret = avformat_open_input(&ifmt_ctx, _path, 0, 0); if (ret < 0) { logDebug(\"\u89e3\u5c01\u88c5\u5931\u8d25 -- %s\", av_err2str(ret)); return nullptr; } \u4f7f\u7528 avformat_open_input() \u51fd\u6570\u4ece\u8f93\u5165\u6587\u4ef6\u4e2d\u627e\u5230\u683c\u5f0f\u5316I/O\u4e0a\u4e0b\u6587 AVFormatContext \u7ed3\u6784\u4f53\uff0c\u5982\u679c\u662f\u7f16\u7801\u8981\u65b0\u5efa AVFormatContext \u8981\u4f7f\u7528 avformat_alloc_context() \u51fd\u6570\u3002 \u4f7f\u7528 avformat_open_input() \u52a1\u5fc5\u8bb0\u5f97\u5728\u7a0b\u5e8f\u6267\u884c\u5b8c\u6210\u540e\u8c03\u7528 avformat_close_input() \u91ca\u653e\u8d44\u6e90\uff0c\u5e76\u4e14\u8be5\u65b9\u6cd5\u6709\u4e00\u4e2a int \u7684\u8fd4\u56de\u503c\uff0c 0 \u8868\u793a\u6267\u884c\u6210\u529f\uff0c \u8d1f\u6570 \u8868\u793a\u6267\u884c\u5931\u8d25\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528 av_err2str() \u51fd\u6570\u83b7\u53d6\u6267\u884c\u51fd\u6570\u5931\u8d25\u7684\u8be6\u7ec6\u65e5\u5fd7\uff0c\u8be5\u51fd\u6570\u5b9a\u4e49\u5728 libavutil/error.h \u5934\u6587\u4ef6\u4e2d\u3002 \u8fd9\u91cc\u6709\u4e2a\u5c0f\u6280\u5de7\uff0cffmpeg\u5927\u591a\u6709\u8fd4\u56de\u503c\u51fd\u6570\uff0c \u5927\u4e8e\u7b49\u4e8e0 \u90fd\u4e3a\u6210\u529f\uff0c\u5c0f\u4e8e0\u90fd\u4e3a\u6267\u884c\u5931\u8d25\u3002","title":"\u6253\u5f00\u89c6\u9891\u6587\u4ef6\uff0c\u89e3\u5c01\u88c5"},{"location":"android/FFmpeg/%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E9%A6%96%E5%B8%A7%E8%BD%ACBitmap%E5%B0%81%E9%9D%A2%E5%9B%BE/#_2","text":"ret = avformat_find_stream_info(ifmt_ctx, 0); int video_stream_index = -1; AVStream *pStream = NULL; AVCodecParameters *codecpar = NULL; //\u627e\u51fa\u89c6\u9891\u6d41 for (int i = 0; i < ifmt_ctx->nb_streams; ++i) { pStream = ifmt_ctx->streams[i]; if (pStream->codecpar->codec_type == AVMEDIA_TYPE_VIDEO) { codecpar = pStream->codecpar; video_stream_index = i; } } avformat_find_stream_info() \u51fd\u6570\u4ece\u5a92\u4f53\u6587\u4ef6\u7684\u6570\u636e\u5305\u4e2d\u83b7\u53d6\u6d41\u4fe1\u606f\u8d4b\u503c\u7ed9 AVFormatContext \u3002 AVFormatContext \u7ed3\u6784\u4f53\u4e2d\u7684 streams \u5b57\u6bb5\u5305\u542b\u4e86\u5a92\u4f53\u6587\u4ef6\u4e2d\u6240\u4ee5\u7684\u6d41\u4fe1\u606f\uff0c\u5305\u542b \u89c6\u9891\u6d41 \uff0c \u97f3\u9891\u6d41 \uff0c \u5b57\u5e55\u6d41 \u7b49\u3002 AVCodecParameters \u7ed3\u6784\u4f53\u63cf\u8ff0\u4e86\u88ab\u7f16\u7801\u540e\u7684\u6d41\u7684\u5c5e\u6027\u3002 \u8c22\u8c22\u5927\u4f6c\u63d0\u70b9\uff0c\u8fd9\u91cc\u627e\u6d41\u7684index\u5176\u5b9e\u53ef\u4ee5\u4f7f\u7528 av_find_best_stream() \u51fd\u6570\u76f4\u63a5\u627e\u5230\u6700\u5408\u9002\u7684\u90a3\u4e2a\u6d41index\u3002 //\u627e\u5230\u6700\u5408\u9002\u7684\u6d41 int stream_index = av_find_best_stream(ifmt_ctx, AVMEDIA_TYPE_VIDEO, -1, -1, NULL, 0);","title":"\u627e\u5230\u6d41\uff0c\u4ece\u6d41\u7684\u6570\u7ec4\u4e2d\u627e\u5230\u89c6\u9891\u6d41"},{"location":"android/FFmpeg/%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E9%A6%96%E5%B8%A7%E8%BD%ACBitmap%E5%B0%81%E9%9D%A2%E5%9B%BE/#_3","text":"logDebug(\"\u89e3\u7801\u5668 == %s\", avcodec_get_name(codecpar->codec_id)); AVCodec *codec = avcodec_find_decoder(codecpar->codec_id); //\u7533\u8bf7\u7f16\u89e3\u7801\u5668\u4e0a\u4e0b\u6587 AVCodecContext *codec_ctx = avcodec_alloc_context3(codec);","title":"\u627e\u5230\u89e3\u7801\u5668\uff0c\u7533\u8bf7\u7f16\u89e3\u7801\u5668\u4e0a\u4e0b\u6587"},{"location":"android/FFmpeg/%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E9%A6%96%E5%B8%A7%E8%BD%ACBitmap%E5%B0%81%E9%9D%A2%E5%9B%BE/#_4","text":"//\u62f7\u8d1dparameters \u5230 \u7f16\u89e3\u7801\u5668\u7684context ret = avcodec_parameters_to_context(codec_ctx, codecpar); //\u6253\u5f00\u7f16\u89e3\u7801\u5668 ret = avcodec_open2(codec_ctx, codec, NULL); //\u7533\u8bf7\u4e00\u4e2a\u5e27\u7ed3\u6784\u4f53 AVFrame *pFrame = av_frame_alloc(); int frameFinished; while (av_read_frame(ifmt_ctx, &pkg) >= 0) { if (pkg.stream_index != video_stream_index) { continue; } ret = avcodec_decode_video2(codec_ctx, pFrame, &frameFinished, &pkg); if (!frameFinished) continue; } av_read_frame() \u51fd\u6570\u8bfb\u53d6\u89c6\u9891\u6d41\u4fe1\u606f\uff0c\u5e76\u5c06\u5176\u5b58\u653e\u5230 AVPacket \u7ed3\u6784\u7684 pkt \u53d8\u91cf\u4e2d\uff0c\u8fd9\u91cc\u6211\u4eec\u53ea\u9700\u5206\u914d AVPacket \u7ed3\u6784\u4f53\u7684\u5185\u5b58\uff0c\u6570\u636e \uff08pkt->data\uff09 \u7684\u6570\u636e\u5219\u7531 FFmpeg \u5728\u5176\u5185\u90e8\u81ea\u52a8\u5206\u914d\uff0c\u4e0d\u8fc7\u4f7f\u7528\u5b8c\u6bd5\u540e\uff0c\u8981\u8c03\u7528 av_packet_unref() \u51fd\u6570\u91ca\u653e\u3002 av_read_frame() \u51fd\u6570\u7684\u8fd4\u56de\u503c\u5982\u679c \u5c0f\u4e8e0 \u4ee3\u8868\u53d1\u751f\u4e86\u9519\u8bef\u6216\u8005\u662f\u8bfb\u5230\u4e86\u6587\u4ef6\u7684\u672b\u5c3e\u3002 avcodec_decode_video() \u51fd\u6570\u53ef\u4ee5\u5c06 packet \u8f6c\u6362\u6210 frame\uff0c\u4e0d\u8fc7\uff0c\u89e3\u7801\u4e00\u4e2a packet \u4e0d\u4e00\u5b9a\u80fd\u591f\u83b7\u5f97 frame \u7684\u5168\u90e8\u4fe1\u606f\uff0c\u6240\u4ee5\u9700\u8981\u501f\u52a9 frameFinished \u6807\u5fd7\u4f4d\u7528\u4e8e\u5224\u65ad\u8fd9\u4e00\u8fc7\u7a0b\u3002\u5176\u5b9e\u65b0\u7248\u5df2\u7ecf\u4f7f\u7528 avcodec_send_packet() \u548c avcodec_receive_frame() \u4ee3\u66ff\u4e86\u8fd9\u4e2a\u51fd\u6570\uff0c\u4f46\u662f\u8fd9\u91cc\u7528\u4e0b\u4e5f\u6ca1\u5173\u7cfb\u3002 frameFinished \u53c2\u6570 =0 \u65f6\u8868\u793a\u6ca1\u6709\u5e27\u53ef\u4ee5\u89e3\u538b\u7f29\u4e86\uff0c\u53cd\u4e4b\u4e0d\u4e3a0\u65f6\u5c31\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u89e3\u538b\u7f29\u3002","title":"\u6253\u5f00\u7f16\u89e3\u7801\u5668\uff0c\u83b7\u53d6\u9996\u5e27"},{"location":"android/FFmpeg/%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E9%A6%96%E5%B8%A7%E8%BD%ACBitmap%E5%B0%81%E9%9D%A2%E5%9B%BE/#bitmap_1","text":"jobject createBitmap(JNIEnv *env, int width, int height) { jclass bitmapCls = env->FindClass(\"android/graphics/Bitmap\"); jmethodID createBitmapFunction = env->GetStaticMethodID(bitmapCls, \"createBitmap\", \"(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;\"); jstring configName = env->NewStringUTF(\"ARGB_8888\"); jclass bitmapConfigClass = env->FindClass(\"android/graphics/Bitmap$Config\"); jmethodID valueOfBitmapConfigFunction = env->GetStaticMethodID(bitmapConfigClass, \"valueOf\", \"(Ljava/lang/String;)Landroid/graphics/Bitmap$Config;\"); jobject bitmapConfig = env->CallStaticObjectMethod(bitmapConfigClass, valueOfBitmapConfigFunction, configName); jobject newBitmap = env->CallStaticObjectMethod(bitmapCls, createBitmapFunction, width, height, bitmapConfig); return newBitmap; } \u5e38\u89c4\u64cd\u4f5c\uff0c\u5728native\u5c42\u8c03\u7528java\u5c42\u7684\u65b9\u6cd5\uff0cjni\u4e0d\u719f\u7684\u53ef\u4ee5\u67e5\u770b \u6211\u7684JNI\u5b66\u4e60\u7b14\u8bb0","title":"\u521b\u5efaBitmap"},{"location":"android/FFmpeg/%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E9%A6%96%E5%B8%A7%E8%BD%ACBitmap%E5%B0%81%E9%9D%A2%E5%9B%BE/#libyuvrgb","text":"\u5148\u4f7f\u7528 bitmap.h \u5934\u6587\u4ef6\u4e2d AndroidBitmap_lockPixels() \u7684\u51fd\u6570\u7ed1\u5b9a\u50cf\u7d20\u6307\u9488\u7684\u5730\u5740\uff0c\u4f7f\u7528libyuv\u4e2d\u7684 I420ToABGR() \u51fd\u6570\u5c06 yuv420p \u8f6c\u6362\u4e3a argb \uff0c\u8bb0\u5f97\u6700\u540e\u4f7f\u7528 AndroidBitmap_unlockPixels() \u51fd\u6570\u56de\u6536Bitmap\u3002 jobject bmp; bmp = createBitmap(env, codec_ctx->width, codec_ctx->height); void *addr_pixels; ret = AndroidBitmap_lockPixels(env, bmp, &addr_pixels); //yuv420p to argb int linesize = pFrame->width * 4; libyuv::I420ToABGR(pFrame->data[0], pFrame->linesize[0], // Y pFrame->data[1], pFrame->linesize[1], // U pFrame->data[2], pFrame->linesize[2], // V (uint8_t *) addr_pixels, linesize, // RGBA pFrame->width, pFrame->height); \u4e0a\u9762\u7684 lineSize \u8ba1\u7b97\u89c4\u5219\u4e3a\uff1a\u4e00\u4e2a\u50cf\u7d20\u70b9\u67094\u4e2a\u5b57\u8282\uff0c\u6240\u4ee5\u8981\u5bbd\u5ea6x4 Yuv420p\u8f6cARGB\u7684\u51fd\u6570\u540d\u662f I420ToABGR \uff0c\u5e76\u4e0d\u662f I420ToARGB \u3002\u6211\u5751\uff0c\u4e4b\u524d\u624b\u6253\u4ee3\u7801\u8fc7\u5feb\uff0c\u5bfc\u81f4\u751f\u6210\u7684Bitmap\u989c\u8272\u663e\u793a\u4e00\u76f4\u90fd\u4e0d\u5bf9\uff0c\u627e\u4e86\u597d\u4e45\u90fd\u6ca1\u53d1\u73b0\u9519\u8bef\u5728\u54ea\u91cc\uff0c\u8fd8\u662f\u767e\u5ea6\u5230\u4e86\u4e00\u7bc7\u535a\u4e3b\u4e5f\u662f\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u8fd9\u5c31\u662f\u4eba\u7684\u56fa\u5316\u601d\u7ef4\u554a\uff01","title":"\u4f7f\u7528libyuv\u5199\u5165rgb\u50cf\u7d20\u4fe1\u606f"},{"location":"android/FFmpeg/%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E9%A6%96%E5%B8%A7%E8%BD%ACBitmap%E5%B0%81%E9%9D%A2%E5%9B%BE/#_5","text":"av_packet_unref(&pkg); AndroidBitmap_unlockPixels(env, bmp); av_free(pFrame); avcodec_close(codec_ctx); avformat_close_input(&ifmt_ctx); env->ReleaseStringUTFChars(path, _path);","title":"\u91ca\u653e\u8d44\u6e90"},{"location":"android/FFmpeg/%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E9%A6%96%E5%B8%A7%E8%BD%ACBitmap%E5%B0%81%E9%9D%A2%E5%9B%BE/#activity","text":"String path = Environment.getExternalStorageDirectory().getAbsolutePath() + File.separator + \"get_cover.mp4\"; Bitmap bitmap = getCover(path); Log.d(TAG, \"bitmap width == \" + bitmap.getWidth()); Log.d(TAG, \"bitmap height == \" + bitmap.getHeight()); Log.d(TAG, \"bitmap config == \" + bitmap.getConfig().name()); Log.d(TAG, \"bitmap byteCount == \" + bitmap.getByteCount()); ImageView ivCover = findViewById(R.id.ivCover); ivCover.setImageBitmap(bitmap);","title":"Activity\u4e2d\u7684\u4ee3\u7801"},{"location":"android/FFmpeg/%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E9%A6%96%E5%B8%A7%E8%BD%ACBitmap%E5%B0%81%E9%9D%A2%E5%9B%BE/#log","text":"demo.simple.example_ffmpeg D/MainActivity: bitmap width == 1080 demo.simple.example_ffmpeg D/MainActivity: bitmap height == 1920 demo.simple.example_ffmpeg D/MainActivity: bitmap config == ARGB_8888 demo.simple.example_ffmpeg D/MainActivity: bitmap byteCount == 8294400","title":"Log\u8f93\u51fa\u548c\u754c\u9762\u663e\u793a"},{"location":"android/FFmpeg/%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E9%A6%96%E5%B8%A7%E8%BD%ACBitmap%E5%B0%81%E9%9D%A2%E5%9B%BE/#_6","text":"example_ffmpeg","title":"\u5b8c\u6574\u4ee3\u7801"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94LiveData/","text":"Android\u67b6\u6784\u7ec4\u4ef6-LiveData \u524d\u8a00 LiveData \u662f\u4e00\u4e2a\u53ef\u4ee5\u4fdd\u5b58\u6570\u636e\u548c\u89c2\u5bdf\u6570\u636e\u53d8\u5316\u7684\u7ec4\u4ef6\u3002\u4ed6\u662f\u88ab\u8bbe\u8ba1\u7528\u6765\u5728 ViewModel\u4e2d \u4fdd\u5b58\u6570\u636e\uff0c \u4f46\u662f\u540c\u6837\u4e5f\u53ef\u4ee5\u5728\u5e94\u7528\u7684\u5176\u4ed6\u5730\u65b9\u4f7f\u7528\u3002 LiveData\u4f7f\u7528\u89c2\u5bdf\u8005\u6a21\u5f0f\u76d1\u542c\u6570\u636e\u7684\u6539\u53d8\u3002\u8fd9\u4e0eRxJava\u7684Observable\u975e\u5e38\u7c7b\u4f3c\uff0c\u4f46\u662fLiveData\u4e0d\u6b62\u4e8e\u6b64\uff0cLiveData\u662f\u5177\u6709\u751f\u547d\u5468\u671f\u611f\u77e5\u80fd\u529b\u7684\u3002 \u7b80\u5355\u7684\u8bf4\uff0cLiveData\u53ea\u662f\u4e00\u4e2a\u666e\u901a\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4f46\u662f\u5f53\u6570\u636e\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u5b83\u80fd\u591f\u901a\u77e5\u5176\u89c2\u5bdf\u8005\u3002 \u6dfb\u52a0LiveData \u6dfb\u52a0google maven\u4ed3\u5e93 allprojects { repositories { jcenter() google() } } \u6dfb\u52a0\u4f9d\u8d56 dependencies { // ViewModel and LiveData implementation \"android.arch.lifecycle:extensions:1.1.1\" // alternatively, just ViewModel implementation \"android.arch.lifecycle:viewmodel:1.1.1\" // alternatively, just LiveData implementation \"android.arch.lifecycle:livedata:1.1.1\" annotationProcessor \"android.arch.lifecycle:compiler:1.1.1\" } Java8\u652f\u6301 dependencies { // Java8 support for Lifecycles implementation \"android.arch.lifecycle:common-java8:1.1.1\" } \u521b\u5efaLiveData\u5bf9\u8c61 \u53ef\u4ee5\u628aLiveData\u60f3\u8c61\u6210\u4e00\u4e2a\u53ef\u4ee5\u4e0e\u4efb\u4f55\u6570\u636e\u4e00\u8d77\u4f7f\u7528\u7684\u5305\u88c5\u5668\uff0c\u5305\u62ec\u96c6\u5408\u5bf9\u8c61\uff0c\u5217\u5982\uff1aList\u3002LiveData\u5bf9\u8c61\u901a\u5e38\u5b58\u50a8\u5728ViewModel\u5bf9\u8c61\u4e2d\uff0c\u5e76\u901a\u8fc7getter\u65b9\u6cd5\u8bbf\u95ee\u3002 public class NameViewModel extends ViewModel { // \u521b\u5efa\u4e00\u4e2a\u5305\u542bString\u7684LiveData private MutableLiveData<String> mCurrentName; public MutableLiveData<String> getCurrentName() { if (mCurrentName == null) { mCurrentName = new MutableLiveData<String>(); } return mCurrentName; } } \u4e0a\u9762\u4ee3\u7801\u5e76\u6ca1\u6709\u7ed9LiveDta\u8bbe\u7f6eValue\uff0cValue\u7684\u6765\u6e90\u53ef\u4ee5\u662fWebService\u6216\u8005\u672c\u5730\u6570\u636e\u5e93\u3002 \u4f7f\u7528LiveData\u5bf9\u8c61 public class NameActivity extends AppCompatActivity { private NameViewModel mModel; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); // \u83b7\u53d6ViewModel\u5b9e\u4f8b mModel = ViewModelProviders.of(this).get(NameViewModel.class); // \u521b\u5efa\u66f4\u65b0UI\u7684\u89c2\u5bdf\u8005 final Observer<String> nameObserver = new Observer<String>() { @Override public void onChanged(@Nullable final String newName) { // \u66f4\u65b0UI mNameTextView.setText(newName); } }; // \u89c2\u5bdfLiveData mModel.getCurrentName().observe(this, nameObserver); } } \u4e0a\u9762\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u679c\u76d1\u542c\u4e00\u4e2aLiveData\u5bf9\u8c61\uff0c\u5e76\u5207\u5982\u679cLiveDta\u6ca1\u6709\u8c03\u7528 setValue \u65b9\u6cd5\uff0c\u90a3\u4e48 onChanged \u65b9\u6cd5\u4e5f\u4e0d\u4f1a\u56de\u8c03\u3002 \u6269\u5c55LiveData \u5982\u679c\u89c2\u5bdf\u8005\u7684\u751f\u547d\u5468\u671f\u5904\u4e8e STARTED \u6216 RESUMED \u72b6\u6001\uff0c\u5219LiveData\u4f1a\u8ba4\u4e3a\u89c2\u5bdf\u8005\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u3002 public class StockLiveData extends LiveData<BigDecimal> { private StockManager mStockManager; private SimplePriceListener mListener = new SimplePriceListener() { @Override public void onPriceChanged(BigDecimal price) { setValue(price); } }; public StockLiveData(String symbol) { mStockManager = new StockManager(symbol); } @Override protected void onActive() { mStockManager.requestPriceUpdates(mListener); } @Override protected void onInactive() { mStockManager.removeUpdates(mListener); } } \u4e0a\u9762\u4f8b\u5b50\u4e2d\u5305\u542b3\u4e2a\u91cd\u8981\u7684\u65b9\u6cd5\uff1a onActive() \uff1a\u5f53LiveData\u4f9d\u9644\u5728observer\u4e0a\u65f6\u8c03\u7528 onInactive() \uff1a\u5f53LiveData\u4e0d\u5728\u4f9d\u9644\u5728observer\u4e0a\u65f6\u8c03\u7528 setValue(T) \uff1a\u66f4\u65b0LiveData\u5b9e\u4f8b\u7684\u503c\u5e76\u901a\u77e5\u89c2\u5bdf\u8005 \u8f6c\u6362LiveData \u60a8\u53ef\u80fd\u60f3\u5bf9\u5b58\u50a8\u5728LiveData\u5bf9\u8c61\u4e2d\u7684\u503c\u8fdb\u884c\u66f4\u6539\u540e\u518d\u5206\u914d\u7ed9\u89c2\u5bdf\u8005\uff0c\u6216\u8005\u60a8\u53ef\u80fd\u9700\u8981\u6839\u636e\u53e6\u4e00\u4e2aLiveData\u5b9e\u4f8b\u8fd4\u56de\u4e0d\u540c\u7684LiveData\u5b9e\u4f8b\u3002Lifecycle\u8f6f\u4ef6\u5305\u63d0\u4f9bTransformations\u7c7b\uff0c\u5176\u4e2d\u5c31\u5305\u62ec\u652f\u6301\u8fd9\u4e9b\u573a\u666f\u7684\u65b9\u6cd5\u3002 Transformations.map() \u5728LiveData\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u6539\u53d8\u5176\u4e0b\u6e38\u7684\u7ed3\u679c LiveData<User> userLiveData = ...; LiveData<String> userName = Transformations.map(userLiveData, user -> { user.name + \" \" + user.lastName }); Transformations.switchMap() \u7c7b\u4f3c\u4e8e map \uff0c\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\u540c\u6837\u53ef\u4ee5\u6539\u53d8\u4e0b\u6e38\u7684\u7ed3\u679c\uff0c\u4f20\u9012\u7ed9 switchMap() \u7684\u51fd\u6570\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2aLiveData\u5bf9\u8c61 private LiveData<User> getUser(String id) { ...; } LiveData<String> userId = ...; LiveData<User> user = Transformations.switchMap(userId, id -> getUser(id) ); \u53c2\u8003 https://developer.android.com/topic/libraries/architecture/livedata","title":"Android\u67b6\u6784\u7ec4\u4ef6-LiveData"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94LiveData/#android-livedata","text":"","title":"Android\u67b6\u6784\u7ec4\u4ef6-LiveData"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94LiveData/#_1","text":"LiveData \u662f\u4e00\u4e2a\u53ef\u4ee5\u4fdd\u5b58\u6570\u636e\u548c\u89c2\u5bdf\u6570\u636e\u53d8\u5316\u7684\u7ec4\u4ef6\u3002\u4ed6\u662f\u88ab\u8bbe\u8ba1\u7528\u6765\u5728 ViewModel\u4e2d \u4fdd\u5b58\u6570\u636e\uff0c \u4f46\u662f\u540c\u6837\u4e5f\u53ef\u4ee5\u5728\u5e94\u7528\u7684\u5176\u4ed6\u5730\u65b9\u4f7f\u7528\u3002 LiveData\u4f7f\u7528\u89c2\u5bdf\u8005\u6a21\u5f0f\u76d1\u542c\u6570\u636e\u7684\u6539\u53d8\u3002\u8fd9\u4e0eRxJava\u7684Observable\u975e\u5e38\u7c7b\u4f3c\uff0c\u4f46\u662fLiveData\u4e0d\u6b62\u4e8e\u6b64\uff0cLiveData\u662f\u5177\u6709\u751f\u547d\u5468\u671f\u611f\u77e5\u80fd\u529b\u7684\u3002 \u7b80\u5355\u7684\u8bf4\uff0cLiveData\u53ea\u662f\u4e00\u4e2a\u666e\u901a\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4f46\u662f\u5f53\u6570\u636e\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u5b83\u80fd\u591f\u901a\u77e5\u5176\u89c2\u5bdf\u8005\u3002","title":"\u524d\u8a00"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94LiveData/#livedata","text":"","title":"\u6dfb\u52a0LiveData"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94LiveData/#google-maven","text":"allprojects { repositories { jcenter() google() } }","title":"\u6dfb\u52a0google maven\u4ed3\u5e93"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94LiveData/#_2","text":"dependencies { // ViewModel and LiveData implementation \"android.arch.lifecycle:extensions:1.1.1\" // alternatively, just ViewModel implementation \"android.arch.lifecycle:viewmodel:1.1.1\" // alternatively, just LiveData implementation \"android.arch.lifecycle:livedata:1.1.1\" annotationProcessor \"android.arch.lifecycle:compiler:1.1.1\" }","title":"\u6dfb\u52a0\u4f9d\u8d56"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94LiveData/#java8","text":"dependencies { // Java8 support for Lifecycles implementation \"android.arch.lifecycle:common-java8:1.1.1\" }","title":"Java8\u652f\u6301"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94LiveData/#livedata_1","text":"\u53ef\u4ee5\u628aLiveData\u60f3\u8c61\u6210\u4e00\u4e2a\u53ef\u4ee5\u4e0e\u4efb\u4f55\u6570\u636e\u4e00\u8d77\u4f7f\u7528\u7684\u5305\u88c5\u5668\uff0c\u5305\u62ec\u96c6\u5408\u5bf9\u8c61\uff0c\u5217\u5982\uff1aList\u3002LiveData\u5bf9\u8c61\u901a\u5e38\u5b58\u50a8\u5728ViewModel\u5bf9\u8c61\u4e2d\uff0c\u5e76\u901a\u8fc7getter\u65b9\u6cd5\u8bbf\u95ee\u3002 public class NameViewModel extends ViewModel { // \u521b\u5efa\u4e00\u4e2a\u5305\u542bString\u7684LiveData private MutableLiveData<String> mCurrentName; public MutableLiveData<String> getCurrentName() { if (mCurrentName == null) { mCurrentName = new MutableLiveData<String>(); } return mCurrentName; } } \u4e0a\u9762\u4ee3\u7801\u5e76\u6ca1\u6709\u7ed9LiveDta\u8bbe\u7f6eValue\uff0cValue\u7684\u6765\u6e90\u53ef\u4ee5\u662fWebService\u6216\u8005\u672c\u5730\u6570\u636e\u5e93\u3002","title":"\u521b\u5efaLiveData\u5bf9\u8c61"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94LiveData/#livedata_2","text":"public class NameActivity extends AppCompatActivity { private NameViewModel mModel; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); // \u83b7\u53d6ViewModel\u5b9e\u4f8b mModel = ViewModelProviders.of(this).get(NameViewModel.class); // \u521b\u5efa\u66f4\u65b0UI\u7684\u89c2\u5bdf\u8005 final Observer<String> nameObserver = new Observer<String>() { @Override public void onChanged(@Nullable final String newName) { // \u66f4\u65b0UI mNameTextView.setText(newName); } }; // \u89c2\u5bdfLiveData mModel.getCurrentName().observe(this, nameObserver); } } \u4e0a\u9762\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u679c\u76d1\u542c\u4e00\u4e2aLiveData\u5bf9\u8c61\uff0c\u5e76\u5207\u5982\u679cLiveDta\u6ca1\u6709\u8c03\u7528 setValue \u65b9\u6cd5\uff0c\u90a3\u4e48 onChanged \u65b9\u6cd5\u4e5f\u4e0d\u4f1a\u56de\u8c03\u3002","title":"\u4f7f\u7528LiveData\u5bf9\u8c61"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94LiveData/#livedata_3","text":"\u5982\u679c\u89c2\u5bdf\u8005\u7684\u751f\u547d\u5468\u671f\u5904\u4e8e STARTED \u6216 RESUMED \u72b6\u6001\uff0c\u5219LiveData\u4f1a\u8ba4\u4e3a\u89c2\u5bdf\u8005\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u3002 public class StockLiveData extends LiveData<BigDecimal> { private StockManager mStockManager; private SimplePriceListener mListener = new SimplePriceListener() { @Override public void onPriceChanged(BigDecimal price) { setValue(price); } }; public StockLiveData(String symbol) { mStockManager = new StockManager(symbol); } @Override protected void onActive() { mStockManager.requestPriceUpdates(mListener); } @Override protected void onInactive() { mStockManager.removeUpdates(mListener); } } \u4e0a\u9762\u4f8b\u5b50\u4e2d\u5305\u542b3\u4e2a\u91cd\u8981\u7684\u65b9\u6cd5\uff1a onActive() \uff1a\u5f53LiveData\u4f9d\u9644\u5728observer\u4e0a\u65f6\u8c03\u7528 onInactive() \uff1a\u5f53LiveData\u4e0d\u5728\u4f9d\u9644\u5728observer\u4e0a\u65f6\u8c03\u7528 setValue(T) \uff1a\u66f4\u65b0LiveData\u5b9e\u4f8b\u7684\u503c\u5e76\u901a\u77e5\u89c2\u5bdf\u8005","title":"\u6269\u5c55LiveData"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94LiveData/#livedata_4","text":"\u60a8\u53ef\u80fd\u60f3\u5bf9\u5b58\u50a8\u5728LiveData\u5bf9\u8c61\u4e2d\u7684\u503c\u8fdb\u884c\u66f4\u6539\u540e\u518d\u5206\u914d\u7ed9\u89c2\u5bdf\u8005\uff0c\u6216\u8005\u60a8\u53ef\u80fd\u9700\u8981\u6839\u636e\u53e6\u4e00\u4e2aLiveData\u5b9e\u4f8b\u8fd4\u56de\u4e0d\u540c\u7684LiveData\u5b9e\u4f8b\u3002Lifecycle\u8f6f\u4ef6\u5305\u63d0\u4f9bTransformations\u7c7b\uff0c\u5176\u4e2d\u5c31\u5305\u62ec\u652f\u6301\u8fd9\u4e9b\u573a\u666f\u7684\u65b9\u6cd5\u3002 Transformations.map() \u5728LiveData\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u6539\u53d8\u5176\u4e0b\u6e38\u7684\u7ed3\u679c LiveData<User> userLiveData = ...; LiveData<String> userName = Transformations.map(userLiveData, user -> { user.name + \" \" + user.lastName }); Transformations.switchMap() \u7c7b\u4f3c\u4e8e map \uff0c\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\u540c\u6837\u53ef\u4ee5\u6539\u53d8\u4e0b\u6e38\u7684\u7ed3\u679c\uff0c\u4f20\u9012\u7ed9 switchMap() \u7684\u51fd\u6570\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2aLiveData\u5bf9\u8c61 private LiveData<User> getUser(String id) { ...; } LiveData<String> userId = ...; LiveData<User> user = Transformations.switchMap(userId, id -> getUser(id) );","title":"\u8f6c\u6362LiveData"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94LiveData/#_3","text":"https://developer.android.com/topic/libraries/architecture/livedata","title":"\u53c2\u8003"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/","text":"Android\u67b6\u6784\u7ec4\u4ef6-Room Room\u5176\u5b9e\u5c31\u662f\u4e00\u4e2aorm\uff0c\u62bd\u8c61\u4e86SQLite\u7684\u4f7f\u7528\uff0c\u4f46\u662f\u5b83\u4f5c\u4e3aAndroid\u7684\u4eb2\u513f\u5b50orm\uff0c\u5e76\u4e14\u539f\u751f\u652f\u6301LiveData\u548cRxjava\u5d4c\u5957\u4f7f\u7528\uff0c\u5b66\u4e60\u4e00\u4e0b\u8fd8\u662f\u4e0d\u9519\u7684\u3002 Room\u67093\u4e2a\u4e3b\u8981\u7ec4\u4ef6 Database \uff1a\u6570\u636e\u5e93 Entity : \u4ee3\u8868\u6570\u636e\u5e93\u4e00\u4e2a\u8868\u7ed3\u6784 Dao : \u5305\u542b\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u65b9\u6cd5 \u7b80\u5355\u4f7f\u7528 \u6dfb\u52a0Google Maven\u4ed3\u5e93 allprojects { repositories { jcenter() google() } } \u6dfb\u52a0\u4f9d\u8d56 dependencies { // Room implementation \"android.arch.persistence.room:runtime:1.0.0\" annotationProcessor \"android.arch.persistence.room:compiler:1.0.0\" } \u5b9a\u4e49\u6570\u636e\u8868\u5b9e\u4f53\u7c7b \u73ed\u7ea7\u8868 @Entity(tableName = \"tb_class\") public class ClassEntity { @PrimaryKey private long id; } \u5b66\u751f\u8868 //\u6307\u793a\u6570\u636e\u8868\u5b9e\u4f53\u7c7b @Entity(tableName = \"tb_student\",//\u5b9a\u4e49\u8868\u540d indices = @Index(value = {\"name\", \"sex\"}, unique = true),//\u5b9a\u4e49\u7d22\u5f15 foreignKeys = {@ForeignKey(entity = ClassEntity.class, parentColumns = \"id\", childColumns = \"class_id\")})//\u5b9a\u4e49\u5916\u952e public class StudentEntity { @PrimaryKey //\u5b9a\u4e49\u4e3b\u952e private long id; @ColumnInfo(name = \"name\")//\u5b9a\u4e49\u6570\u636e\u8868\u4e2d\u7684\u5b57\u6bb5\u540d private String name; @ColumnInfo(name = \"sex\") private int sex; @Ignore//\u6307\u793aRoom\u9700\u8981\u5ffd\u7565\u7684\u5b57\u6bb5\u6216\u65b9\u6cd5 private String ignoreText; @ColumnInfo(name = \"class_id\") private String class_id; //setter and getter } Entity\u6ce8\u89e3\u53ef\u9009\u53c2\u6570 public @interface Entity { //\u5b9a\u4e49\u8868\u540d String tableName() default \"\"; //\u5b9a\u4e49\u7d22\u5f15 Index[] indices() default {}; //\u8bbe\u4e3atrue\u5219\u7236\u7c7b\u7684\u7d22\u5f15\u4f1a\u81ea\u52a8\u88ab\u5f53\u524d\u7c7b\u7ee7\u627f boolean inheritSuperIndices() default false; //\u5b9a\u4e49\u4e3b\u952e String[] primaryKeys() default {}; //\u5b9a\u4e49\u5916\u952e ForeignKey[] foreignKeys() default {}; } Index\u7d22\u5f15\u6ce8\u89e3\u53ef\u9009\u53c2\u6570 public @interface Index { //\u5b9a\u4e49\u9700\u8981\u6dfb\u52a0\u7d22\u5f15\u7684\u5b57\u6bb5 String[] value(); //\u5b9a\u4e49\u7d22\u5f15\u7684\u540d\u79f0 String name() default \"\"; //true-\u8bbe\u7f6e\u552f\u4e00\u952e\uff0c\u6807\u8bc6value\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\u5b57\u6bb5\u5fc5\u987b\u662f\u552f\u4e00\u7684\uff0c\u4e0d\u53ef\u91cd\u590d boolean unique() default false; } ForeignKey\u5916\u952e\u6ce8\u89e3\u53ef\u9009\u53c2\u6570 public @interface ForeignKey { //\u5f15\u7528\u5916\u952e\u7684\u8868\u7684\u5b9e\u4f53 Class entity(); //\u8981\u5f15\u7528\u7684\u5916\u952e\u5217 String[] parentColumns(); //\u8981\u5173\u8054\u7684\u5217 String[] childColumns(); //\u5f53\u7236\u7c7b\u5b9e\u4f53(\u5173\u8054\u7684\u5916\u952e\u8868)\u4ece\u6570\u636e\u5e93\u4e2d\u5220\u9664\u65f6\u6267\u884c\u7684\u64cd\u4f5c @Action int onDelete() default NO_ACTION; //\u5f53\u7236\u7c7b\u5b9e\u4f53(\u5173\u8054\u7684\u5916\u952e\u8868)\u66f4\u65b0\u65f6\u6267\u884c\u7684\u64cd\u4f5c @Action int onUpdate() default NO_ACTION; //\u5728\u4e8b\u52a1\u5b8c\u6210\u4e4b\u524d\uff0c\u662f\u5426\u5e94\u8be5\u63a8\u8fdf\u5916\u952e\u7ea6\u675f boolean deferred() default false; //\u7ed9onDelete\uff0conUpdate\u5b9a\u4e49\u7684\u64cd\u4f5c int NO_ACTION = 1; int RESTRICT = 2; int SET_NULL = 3; int SET_DEFAULT = 4; int CASCADE = 5; @IntDef({NO_ACTION, RESTRICT, SET_NULL, SET_DEFAULT, CASCADE}) @interface Action { } } \u5b9a\u4e49Dao\u7c7b @Dao public interface StudentDao { @Query(\"SELECT * FROM StudentEntity\") List<StudentEntity> getAll(); @Query(\"SELECT * FROM StudentEntity WHERE id IN (:ids)\") List<StudentEntity> getAllByIds(long[] ids); @Insert void insert(StudentEntity... entities); @Delete void delete(StudentEntity entity); @Update void update(StudentEntity entity); } @insert\uff0c @Update\u90fd\u53ef\u4ee5\u6267\u884c\u4e8b\u52a1\u64cd\u4f5c\uff0c\u5b9a\u4e49\u5728OnConflictStrategy\u6ce8\u89e3\u7c7b\u4e2d public @interface Insert { //\u5b9a\u4e49\u5904\u7406\u51b2\u7a81\u7684\u64cd\u4f5c @OnConflictStrategy int onConflict() default OnConflictStrategy.ABORT; } public @interface OnConflictStrategy { //\u7b56\u7565\u51b2\u7a81\u5c31\u66ff\u6362\u65e7\u6570\u636e int REPLACE = 1; //\u7b56\u7565\u51b2\u7a81\u5c31\u56de\u6eda\u4e8b\u52a1 int ROLLBACK = 2; //\u7b56\u7565\u51b2\u7a81\u5c31\u9000\u51fa\u4e8b\u52a1 int ABORT = 3; //\u7b56\u7565\u51b2\u7a81\u5c31\u4f7f\u4e8b\u52a1\u5931\u8d25 int FAIL = 4; //\u5ffd\u7565\u51b2\u7a81 int IGNORE = 5; } \u5b9a\u4e49\u6570\u636e\u5e93 @Database(entities = {StudentEntity.class}, version = 1) public abstract class RoomDemoDatabase extends RoomDatabase { public abstract StudentDao studentDao(); } \u751f\u6210\u6570\u636e\u5e93\u5b9e\u4f8b RoomDemoDatabase database = Room.databaseBuilder(getApplicationContext(), RoomDemoDatabase.class, \"database_name\") .build(); \u751f\u6210\u6570\u636e\u5e93\u5b9e\u4f8b\u7684\u5176\u4ed6\u64cd\u4f5c Room.databaseBuilder(getApplicationContext(), RoomDemoDatabase.class, \"database_name\") .addCallback(new RoomDatabase.Callback() { //\u7b2c\u4e00\u6b21\u521b\u5efa\u6570\u636e\u5e93\u65f6\u8c03\u7528\uff0c\u4f46\u662f\u5728\u521b\u5efa\u6240\u6709\u8868\u4e4b\u540e\u8c03\u7528\u7684 @Override public void onCreate(@NonNull SupportSQLiteDatabase db) { super.onCreate(db); } //\u5f53\u6570\u636e\u5e93\u88ab\u6253\u5f00\u65f6\u8c03\u7528 @Override public void onOpen(@NonNull SupportSQLiteDatabase db) { super.onOpen(db); } }) .allowMainThreadQueries()//\u5141\u8bb8\u5728\u4e3b\u7ebf\u7a0b\u67e5\u8be2\u6570\u636e .addMigrations()//\u8fc1\u79fb\u6570\u636e\u5e93\u4f7f\u7528\uff0c\u4e0b\u9762\u4f1a\u5355\u72ec\u62ff\u51fa\u6765\u8bb2 .fallbackToDestructiveMigration()//\u8fc1\u79fb\u6570\u636e\u5e93\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u5c06\u4f1a\u91cd\u65b0\u521b\u5efa\u6570\u636e\u5e93\uff0c\u800c\u4e0d\u662f\u53d1\u751f\u5d29\u6e83 .build(); \u6570\u636e\u5e93\u8fc1\u79fb(\u5347\u7ea7) Room.databaseBuilder(getApplicationContext(), MyDb.class, \"database-name\") .addMigrations(MIGRATION_1_2, MIGRATION_2_3).build(); static final Migration MIGRATION_1_2 = new Migration(1, 2) { @Override public void migrate(SupportSQLiteDatabase database) { database.execSQL(\"CREATE TABLE `Fruit` (`id` INTEGER, \" + \"`name` TEXT, PRIMARY KEY(`id`))\"); } }; static final Migration MIGRATION_2_3 = new Migration(2, 3) { @Override public void migrate(SupportSQLiteDatabase database) { database.execSQL(\"ALTER TABLE Book \" + \" ADD COLUMN pub_year INTEGER\"); } }; \u521b\u5efa\u5d4c\u5957\u5bf9\u8c61 \u6709\u65f6\uff0c\u60a8\u5e0c\u671b\u5c06\u4e00\u4e2a\u5b9e\u4f53\u6216\u666e\u901a\u7684\u4ee5\u524d\u7684Java\u5bf9\u8c61(POJO)\u4f5c\u4e3a\u6570\u636e\u5e93\u903b\u8f91\u4e2d\u7684\u4e00\u4e2a\u5b8c\u6574\u7684\u6574\u4f53\u6765\u8868\u793a\uff0c\u5373\u4f7f\u8be5\u5bf9\u8c61\u5305\u542b\u51e0\u4e2a\u5b57\u6bb5\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528@Embedded\u6765\u8868\u793a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u60a8\u5e0c\u671b\u5c06\u5176\u5206\u89e3\u4e3a\u8868\u4e2d\u7684\u5b50\u5b57\u6bb5\u3002\u7136\u540e\u53ef\u4ee5\u50cf\u5bf9\u5176\u4ed6\u5355\u4e2a\u5217\u4e00\u6837\u67e5\u8be2\u5d4c\u5165\u5f0f\u5b57\u6bb5 class Address { public String street; public String state; public String city; @ColumnInfo(name = \"post_code\") public int postCode; } @Entity class User { @PrimaryKey public int id; public String firstName; @Embedded public Address address; } \u8fd9\u6837user\u8868\u4e2d\u7684\u5b57\u6bb5\u5c31\u5305\u542b\u4e86 id , firstName , street , state , city , \u548c post_code \u6ce8\u610f \uff1a\u5d4c\u5165\u5f0f\u5b57\u6bb5\u8fd8\u53ef\u4ee5\u5305\u542b\u5176\u4ed6\u5d4c\u5165\u5f0f\u5b57\u6bb5 \u5982\u679c\u4e00\u4e2a\u5b9e\u4f53\u5177\u6709\u76f8\u540c\u7c7b\u578b\u7684\u591a\u4e2a\u5185\u5d4c\u5b57\u6bb5\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u524d\u7f00\u5c5e\u6027(prefix)\u4f7f\u6bcf\u4e2a\u5217\u4fdd\u6301\u60df\u4e00\u3002\u7136\u540e\u5c06\u6240\u63d0\u4f9b\u7684\u503c\u6dfb\u52a0\u5230\u5d4c\u5165\u5bf9\u8c61\u4e2d\u6bcf\u4e2a\u5217\u540d\u7684\u5f00\u5934 @Embedded(prefix = \"foo_\") Coordinates coordinates; \u548c LiveData \u4e00\u8d77\u4f7f\u7528 \u6dfb\u52a0\u4f9d\u8d56 // ReactiveStreams support for LiveData implementation \"android.arch.lifecycle:reactivestreams:1.0.0\" \u4fee\u6539\u8fd4\u56de\u7c7b\u578b @Dao public interface MyDao { @Query(\"SELECT first_name, last_name FROM user WHERE region IN (:regions)\") public LiveData<List<User>> loadUsersFromRegionsSync(List<String> regions); } \u548cRxJava\u4e00\u8d77\u4f7f\u7528 \u6dfb\u52a0\u4f9d\u8d56 // RxJava support for Room implementation \"android.arch.persistence.room:rxjava2:1.0.0\" \u4fee\u6539\u8fd4\u56de\u7c7b\u578b @Dao public interface MyDao { @Query(\"SELECT * from user where id = :id LIMIT 1\") public Flowable<User> loadUserById(int id); } \u76f4\u63a5\u6e38\u6807\u8bbf\u95ee @Dao public interface MyDao { @Query(\"SELECT * FROM user WHERE age > :minAge LIMIT 5\") public Cursor loadRawUsersOlderThan(int minAge); } \u7c7b\u578b\u8f6c\u6362 \u5b9a\u4e49\u8f6c\u6362\u7c7b\uff0c@TypeConverter\u6ce8\u89e3\u5b9a\u4e49\u8f6c\u6362\u7684\u65b9\u6cd5 public class Converters { @TypeConverter public static Date fromTimestamp(Long value) { return value == null ? null : new Date(value); } @TypeConverter public static Long dateToTimestamp(Date date) { return date == null ? null : date.getTime(); } } @TypeConverters\u6ce8\u89e3\uff0c\u544a\u77e5\u6570\u636e\u5e93\u8981\u4f9d\u8d56\u54ea\u4e9b\u8f6c\u6362\u7c7b @Database(entities = {User.class}, version = 1) @TypeConverters({Converters.class}) public abstract class AppDatabase extends RoomDatabase { public abstract UserDao userDao(); } \u4f7f\u7528\u8fd9\u4e9b\u8f6c\u6362\u5668\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4ed6\u67e5\u8be2\u4e2d\u4f7f\u7528\u60a8\u7684\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u6b63\u5982\u60a8\u5c06\u4f7f\u7528\u57fa\u672c\u7c7b\u578b\u4e00\u6837\uff0c\u5982\u4e0b\u4ee3\u7801\u6240\u793a @Entity public class User { ... private Date birthday; } @Dao public interface UserDao { ... @Query(\"SELECT * FROM user WHERE birthday BETWEEN :from AND :to\") List<User> findUsersBornBetweenDates(Date from, Date to); } \u8f93\u51fa\u6a21\u5f0f \u5728\u7f16\u8bd1\u65f6\uff0c\u5c06\u6570\u636e\u5e93\u7684\u6a21\u5f0f\u4fe1\u606f\u5bfc\u51fa\u5230JSON\u6587\u4ef6\u4e2d\uff0c\u8fd9\u6837\u53ef\u6709\u5229\u4e8e\u6211\u4eec\u66f4\u597d\u7684\u8c03\u8bd5\u548c\u6392\u9519 build.gradle android { ... defaultConfig { ... javaCompileOptions { annotationProcessorOptions { arguments = [\"room.schemaLocation\": \"$projectDir/schemas\".toString()] } } } } \u60a8\u5e94\u8be5\u5c06\u5bfc\u51fa\u7684JSON\u6587\u4ef6(\u8868\u793a\u6570\u636e\u5e93\u7684\u6a21\u5f0f\u5386\u53f2\u8bb0\u5f55)\u5b58\u50a8\u5728\u60a8\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u4e2d\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u4e3a\u6d4b\u8bd5\u76ee\u7684\u521b\u5efa\u60a8\u7684\u6570\u636e\u5e93\u7684\u65e7\u7248\u672c \u53c2\u8003 https://developer.android.com/training/data-storage/room/","title":"Android\u67b6\u6784\u7ec4\u4ef6-Room"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/#android-room","text":"Room\u5176\u5b9e\u5c31\u662f\u4e00\u4e2aorm\uff0c\u62bd\u8c61\u4e86SQLite\u7684\u4f7f\u7528\uff0c\u4f46\u662f\u5b83\u4f5c\u4e3aAndroid\u7684\u4eb2\u513f\u5b50orm\uff0c\u5e76\u4e14\u539f\u751f\u652f\u6301LiveData\u548cRxjava\u5d4c\u5957\u4f7f\u7528\uff0c\u5b66\u4e60\u4e00\u4e0b\u8fd8\u662f\u4e0d\u9519\u7684\u3002 Room\u67093\u4e2a\u4e3b\u8981\u7ec4\u4ef6 Database \uff1a\u6570\u636e\u5e93 Entity : \u4ee3\u8868\u6570\u636e\u5e93\u4e00\u4e2a\u8868\u7ed3\u6784 Dao : \u5305\u542b\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u65b9\u6cd5","title":"Android\u67b6\u6784\u7ec4\u4ef6-Room"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/#_1","text":"","title":"\u7b80\u5355\u4f7f\u7528"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/#google-maven","text":"allprojects { repositories { jcenter() google() } }","title":"\u6dfb\u52a0Google Maven\u4ed3\u5e93"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/#_2","text":"dependencies { // Room implementation \"android.arch.persistence.room:runtime:1.0.0\" annotationProcessor \"android.arch.persistence.room:compiler:1.0.0\" }","title":"\u6dfb\u52a0\u4f9d\u8d56"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/#_3","text":"\u73ed\u7ea7\u8868 @Entity(tableName = \"tb_class\") public class ClassEntity { @PrimaryKey private long id; } \u5b66\u751f\u8868 //\u6307\u793a\u6570\u636e\u8868\u5b9e\u4f53\u7c7b @Entity(tableName = \"tb_student\",//\u5b9a\u4e49\u8868\u540d indices = @Index(value = {\"name\", \"sex\"}, unique = true),//\u5b9a\u4e49\u7d22\u5f15 foreignKeys = {@ForeignKey(entity = ClassEntity.class, parentColumns = \"id\", childColumns = \"class_id\")})//\u5b9a\u4e49\u5916\u952e public class StudentEntity { @PrimaryKey //\u5b9a\u4e49\u4e3b\u952e private long id; @ColumnInfo(name = \"name\")//\u5b9a\u4e49\u6570\u636e\u8868\u4e2d\u7684\u5b57\u6bb5\u540d private String name; @ColumnInfo(name = \"sex\") private int sex; @Ignore//\u6307\u793aRoom\u9700\u8981\u5ffd\u7565\u7684\u5b57\u6bb5\u6216\u65b9\u6cd5 private String ignoreText; @ColumnInfo(name = \"class_id\") private String class_id; //setter and getter }","title":"\u5b9a\u4e49\u6570\u636e\u8868\u5b9e\u4f53\u7c7b"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/#entity","text":"public @interface Entity { //\u5b9a\u4e49\u8868\u540d String tableName() default \"\"; //\u5b9a\u4e49\u7d22\u5f15 Index[] indices() default {}; //\u8bbe\u4e3atrue\u5219\u7236\u7c7b\u7684\u7d22\u5f15\u4f1a\u81ea\u52a8\u88ab\u5f53\u524d\u7c7b\u7ee7\u627f boolean inheritSuperIndices() default false; //\u5b9a\u4e49\u4e3b\u952e String[] primaryKeys() default {}; //\u5b9a\u4e49\u5916\u952e ForeignKey[] foreignKeys() default {}; }","title":"Entity\u6ce8\u89e3\u53ef\u9009\u53c2\u6570"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/#index","text":"public @interface Index { //\u5b9a\u4e49\u9700\u8981\u6dfb\u52a0\u7d22\u5f15\u7684\u5b57\u6bb5 String[] value(); //\u5b9a\u4e49\u7d22\u5f15\u7684\u540d\u79f0 String name() default \"\"; //true-\u8bbe\u7f6e\u552f\u4e00\u952e\uff0c\u6807\u8bc6value\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\u5b57\u6bb5\u5fc5\u987b\u662f\u552f\u4e00\u7684\uff0c\u4e0d\u53ef\u91cd\u590d boolean unique() default false; }","title":"Index\u7d22\u5f15\u6ce8\u89e3\u53ef\u9009\u53c2\u6570"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/#foreignkey","text":"public @interface ForeignKey { //\u5f15\u7528\u5916\u952e\u7684\u8868\u7684\u5b9e\u4f53 Class entity(); //\u8981\u5f15\u7528\u7684\u5916\u952e\u5217 String[] parentColumns(); //\u8981\u5173\u8054\u7684\u5217 String[] childColumns(); //\u5f53\u7236\u7c7b\u5b9e\u4f53(\u5173\u8054\u7684\u5916\u952e\u8868)\u4ece\u6570\u636e\u5e93\u4e2d\u5220\u9664\u65f6\u6267\u884c\u7684\u64cd\u4f5c @Action int onDelete() default NO_ACTION; //\u5f53\u7236\u7c7b\u5b9e\u4f53(\u5173\u8054\u7684\u5916\u952e\u8868)\u66f4\u65b0\u65f6\u6267\u884c\u7684\u64cd\u4f5c @Action int onUpdate() default NO_ACTION; //\u5728\u4e8b\u52a1\u5b8c\u6210\u4e4b\u524d\uff0c\u662f\u5426\u5e94\u8be5\u63a8\u8fdf\u5916\u952e\u7ea6\u675f boolean deferred() default false; //\u7ed9onDelete\uff0conUpdate\u5b9a\u4e49\u7684\u64cd\u4f5c int NO_ACTION = 1; int RESTRICT = 2; int SET_NULL = 3; int SET_DEFAULT = 4; int CASCADE = 5; @IntDef({NO_ACTION, RESTRICT, SET_NULL, SET_DEFAULT, CASCADE}) @interface Action { } }","title":"ForeignKey\u5916\u952e\u6ce8\u89e3\u53ef\u9009\u53c2\u6570"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/#dao","text":"@Dao public interface StudentDao { @Query(\"SELECT * FROM StudentEntity\") List<StudentEntity> getAll(); @Query(\"SELECT * FROM StudentEntity WHERE id IN (:ids)\") List<StudentEntity> getAllByIds(long[] ids); @Insert void insert(StudentEntity... entities); @Delete void delete(StudentEntity entity); @Update void update(StudentEntity entity); } @insert\uff0c @Update\u90fd\u53ef\u4ee5\u6267\u884c\u4e8b\u52a1\u64cd\u4f5c\uff0c\u5b9a\u4e49\u5728OnConflictStrategy\u6ce8\u89e3\u7c7b\u4e2d public @interface Insert { //\u5b9a\u4e49\u5904\u7406\u51b2\u7a81\u7684\u64cd\u4f5c @OnConflictStrategy int onConflict() default OnConflictStrategy.ABORT; } public @interface OnConflictStrategy { //\u7b56\u7565\u51b2\u7a81\u5c31\u66ff\u6362\u65e7\u6570\u636e int REPLACE = 1; //\u7b56\u7565\u51b2\u7a81\u5c31\u56de\u6eda\u4e8b\u52a1 int ROLLBACK = 2; //\u7b56\u7565\u51b2\u7a81\u5c31\u9000\u51fa\u4e8b\u52a1 int ABORT = 3; //\u7b56\u7565\u51b2\u7a81\u5c31\u4f7f\u4e8b\u52a1\u5931\u8d25 int FAIL = 4; //\u5ffd\u7565\u51b2\u7a81 int IGNORE = 5; }","title":"\u5b9a\u4e49Dao\u7c7b"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/#_4","text":"@Database(entities = {StudentEntity.class}, version = 1) public abstract class RoomDemoDatabase extends RoomDatabase { public abstract StudentDao studentDao(); }","title":"\u5b9a\u4e49\u6570\u636e\u5e93"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/#_5","text":"RoomDemoDatabase database = Room.databaseBuilder(getApplicationContext(), RoomDemoDatabase.class, \"database_name\") .build(); \u751f\u6210\u6570\u636e\u5e93\u5b9e\u4f8b\u7684\u5176\u4ed6\u64cd\u4f5c Room.databaseBuilder(getApplicationContext(), RoomDemoDatabase.class, \"database_name\") .addCallback(new RoomDatabase.Callback() { //\u7b2c\u4e00\u6b21\u521b\u5efa\u6570\u636e\u5e93\u65f6\u8c03\u7528\uff0c\u4f46\u662f\u5728\u521b\u5efa\u6240\u6709\u8868\u4e4b\u540e\u8c03\u7528\u7684 @Override public void onCreate(@NonNull SupportSQLiteDatabase db) { super.onCreate(db); } //\u5f53\u6570\u636e\u5e93\u88ab\u6253\u5f00\u65f6\u8c03\u7528 @Override public void onOpen(@NonNull SupportSQLiteDatabase db) { super.onOpen(db); } }) .allowMainThreadQueries()//\u5141\u8bb8\u5728\u4e3b\u7ebf\u7a0b\u67e5\u8be2\u6570\u636e .addMigrations()//\u8fc1\u79fb\u6570\u636e\u5e93\u4f7f\u7528\uff0c\u4e0b\u9762\u4f1a\u5355\u72ec\u62ff\u51fa\u6765\u8bb2 .fallbackToDestructiveMigration()//\u8fc1\u79fb\u6570\u636e\u5e93\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u5c06\u4f1a\u91cd\u65b0\u521b\u5efa\u6570\u636e\u5e93\uff0c\u800c\u4e0d\u662f\u53d1\u751f\u5d29\u6e83 .build();","title":"\u751f\u6210\u6570\u636e\u5e93\u5b9e\u4f8b"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/#_6","text":"Room.databaseBuilder(getApplicationContext(), MyDb.class, \"database-name\") .addMigrations(MIGRATION_1_2, MIGRATION_2_3).build(); static final Migration MIGRATION_1_2 = new Migration(1, 2) { @Override public void migrate(SupportSQLiteDatabase database) { database.execSQL(\"CREATE TABLE `Fruit` (`id` INTEGER, \" + \"`name` TEXT, PRIMARY KEY(`id`))\"); } }; static final Migration MIGRATION_2_3 = new Migration(2, 3) { @Override public void migrate(SupportSQLiteDatabase database) { database.execSQL(\"ALTER TABLE Book \" + \" ADD COLUMN pub_year INTEGER\"); } };","title":"\u6570\u636e\u5e93\u8fc1\u79fb(\u5347\u7ea7)"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/#_7","text":"\u6709\u65f6\uff0c\u60a8\u5e0c\u671b\u5c06\u4e00\u4e2a\u5b9e\u4f53\u6216\u666e\u901a\u7684\u4ee5\u524d\u7684Java\u5bf9\u8c61(POJO)\u4f5c\u4e3a\u6570\u636e\u5e93\u903b\u8f91\u4e2d\u7684\u4e00\u4e2a\u5b8c\u6574\u7684\u6574\u4f53\u6765\u8868\u793a\uff0c\u5373\u4f7f\u8be5\u5bf9\u8c61\u5305\u542b\u51e0\u4e2a\u5b57\u6bb5\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528@Embedded\u6765\u8868\u793a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u60a8\u5e0c\u671b\u5c06\u5176\u5206\u89e3\u4e3a\u8868\u4e2d\u7684\u5b50\u5b57\u6bb5\u3002\u7136\u540e\u53ef\u4ee5\u50cf\u5bf9\u5176\u4ed6\u5355\u4e2a\u5217\u4e00\u6837\u67e5\u8be2\u5d4c\u5165\u5f0f\u5b57\u6bb5 class Address { public String street; public String state; public String city; @ColumnInfo(name = \"post_code\") public int postCode; } @Entity class User { @PrimaryKey public int id; public String firstName; @Embedded public Address address; } \u8fd9\u6837user\u8868\u4e2d\u7684\u5b57\u6bb5\u5c31\u5305\u542b\u4e86 id , firstName , street , state , city , \u548c post_code \u6ce8\u610f \uff1a\u5d4c\u5165\u5f0f\u5b57\u6bb5\u8fd8\u53ef\u4ee5\u5305\u542b\u5176\u4ed6\u5d4c\u5165\u5f0f\u5b57\u6bb5 \u5982\u679c\u4e00\u4e2a\u5b9e\u4f53\u5177\u6709\u76f8\u540c\u7c7b\u578b\u7684\u591a\u4e2a\u5185\u5d4c\u5b57\u6bb5\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u524d\u7f00\u5c5e\u6027(prefix)\u4f7f\u6bcf\u4e2a\u5217\u4fdd\u6301\u60df\u4e00\u3002\u7136\u540e\u5c06\u6240\u63d0\u4f9b\u7684\u503c\u6dfb\u52a0\u5230\u5d4c\u5165\u5bf9\u8c61\u4e2d\u6bcf\u4e2a\u5217\u540d\u7684\u5f00\u5934 @Embedded(prefix = \"foo_\") Coordinates coordinates;","title":"\u521b\u5efa\u5d4c\u5957\u5bf9\u8c61"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/#livedata","text":"\u6dfb\u52a0\u4f9d\u8d56 // ReactiveStreams support for LiveData implementation \"android.arch.lifecycle:reactivestreams:1.0.0\" \u4fee\u6539\u8fd4\u56de\u7c7b\u578b @Dao public interface MyDao { @Query(\"SELECT first_name, last_name FROM user WHERE region IN (:regions)\") public LiveData<List<User>> loadUsersFromRegionsSync(List<String> regions); }","title":"\u548cLiveData\u4e00\u8d77\u4f7f\u7528"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/#rxjava","text":"\u6dfb\u52a0\u4f9d\u8d56 // RxJava support for Room implementation \"android.arch.persistence.room:rxjava2:1.0.0\" \u4fee\u6539\u8fd4\u56de\u7c7b\u578b @Dao public interface MyDao { @Query(\"SELECT * from user where id = :id LIMIT 1\") public Flowable<User> loadUserById(int id); }","title":"\u548cRxJava\u4e00\u8d77\u4f7f\u7528"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/#_8","text":"@Dao public interface MyDao { @Query(\"SELECT * FROM user WHERE age > :minAge LIMIT 5\") public Cursor loadRawUsersOlderThan(int minAge); }","title":"\u76f4\u63a5\u6e38\u6807\u8bbf\u95ee"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/#_9","text":"\u5b9a\u4e49\u8f6c\u6362\u7c7b\uff0c@TypeConverter\u6ce8\u89e3\u5b9a\u4e49\u8f6c\u6362\u7684\u65b9\u6cd5 public class Converters { @TypeConverter public static Date fromTimestamp(Long value) { return value == null ? null : new Date(value); } @TypeConverter public static Long dateToTimestamp(Date date) { return date == null ? null : date.getTime(); } } @TypeConverters\u6ce8\u89e3\uff0c\u544a\u77e5\u6570\u636e\u5e93\u8981\u4f9d\u8d56\u54ea\u4e9b\u8f6c\u6362\u7c7b @Database(entities = {User.class}, version = 1) @TypeConverters({Converters.class}) public abstract class AppDatabase extends RoomDatabase { public abstract UserDao userDao(); } \u4f7f\u7528\u8fd9\u4e9b\u8f6c\u6362\u5668\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4ed6\u67e5\u8be2\u4e2d\u4f7f\u7528\u60a8\u7684\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u6b63\u5982\u60a8\u5c06\u4f7f\u7528\u57fa\u672c\u7c7b\u578b\u4e00\u6837\uff0c\u5982\u4e0b\u4ee3\u7801\u6240\u793a @Entity public class User { ... private Date birthday; } @Dao public interface UserDao { ... @Query(\"SELECT * FROM user WHERE birthday BETWEEN :from AND :to\") List<User> findUsersBornBetweenDates(Date from, Date to); }","title":"\u7c7b\u578b\u8f6c\u6362"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/#_10","text":"\u5728\u7f16\u8bd1\u65f6\uff0c\u5c06\u6570\u636e\u5e93\u7684\u6a21\u5f0f\u4fe1\u606f\u5bfc\u51fa\u5230JSON\u6587\u4ef6\u4e2d\uff0c\u8fd9\u6837\u53ef\u6709\u5229\u4e8e\u6211\u4eec\u66f4\u597d\u7684\u8c03\u8bd5\u548c\u6392\u9519 build.gradle android { ... defaultConfig { ... javaCompileOptions { annotationProcessorOptions { arguments = [\"room.schemaLocation\": \"$projectDir/schemas\".toString()] } } } } \u60a8\u5e94\u8be5\u5c06\u5bfc\u51fa\u7684JSON\u6587\u4ef6(\u8868\u793a\u6570\u636e\u5e93\u7684\u6a21\u5f0f\u5386\u53f2\u8bb0\u5f55)\u5b58\u50a8\u5728\u60a8\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u4e2d\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u4e3a\u6d4b\u8bd5\u76ee\u7684\u521b\u5efa\u60a8\u7684\u6570\u636e\u5e93\u7684\u65e7\u7248\u672c","title":"\u8f93\u51fa\u6a21\u5f0f"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94Room/#_11","text":"https://developer.android.com/training/data-storage/room/","title":"\u53c2\u8003"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94ViewModel/","text":"Android\u67b6\u6784\u7ec4\u4ef6\u2014ViewModel \u524d\u8a00 \u6211\u4eec\u4e2d\u7684\u5927\u591a\u6570\u4eba\u90fd\u9047\u5230\u8fc7\u65cb\u8f6c\u624b\u673a\u5e76\u4e14\u5e94\u7528\u7a0b\u5e8f\u5d29\u6e83\u6216UI\u5931\u53bb\u72b6\u6001\u7684\u95ee\u9898\u3002 \u89e3\u51b3\u5b83\u6700\u7b80\u5355\u7684\u529e\u6cd5\u5c31\u662f\u914d\u7f6e Activity \u4e3a potrait \u6a21\u5f0f\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u5f88\u7cdf\u7cd5\u7684\u505a\u6cd5\u3002 \u5e78\u8fd0\u7684\u662f\uff0cAndroid\u56e2\u961f\u57282017\u5e74Google I / O\u671f\u95f4\u53d1\u5e03\u4e86ViewModel\u3002 \u8be5ViewModel\u7c7b\u88ab\u8bbe\u8ba1\u7528\u6765\u4fdd\u5b58\u4e0eUI\u76f8\u5173\u7684\u6570\u636e\u5e76\u4e14\u5b83\u662f\u53ef\u4ee5\u611f\u77e5\u751f\u547d\u5468\u671f\u53d8\u5316\u7684\uff0c\u8fd9\u4f7f\u5f97\u5b83\u80fd\u591f\u81ea\u52a8\u5e94\u5bf9\u914d\u7f6e\u53d8\u5316\uff08\u4f8b\u5982\u5c4f\u5e55\u65cb\u8f6c\uff09\u5e26\u6765\u7684\u5f71\u54cd\u3002 \u5b83\u6709\u4ee5\u4e0b\u804c\u8d23\uff1a \u4e3b\u8981\u804c\u8d23\u662f\u7ba1\u7406UI\u7684\u6570\u636e \u5904\u7406 Activity / Fragment \u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u5176\u4f59\u90e8\u5206\u4e4b\u95f4\u7684\u901a\u4fe1 \u5728\u914d\u7f6e\u66f4\u6539\u671f\u95f4\u4fdd\u7559\u6570\u636e \u6ce8\u610f\uff1a\u5b83 \u6c38\u8fdc \u5e94\u8be5\u4e0d\u80fd\u8bbf\u95ee\u60a8\u7684\u89c6\u56fe\u5c42\u6b21\u7ed3\u6784\u6216\u4fdd\u7559Activity\u6216Fragment\u7684\u5f15\u7528\u3002 \u6dfb\u52a0\u7ec4\u4ef6\u5230\u9879\u76ee\u4e2d \u6dfb\u52a0goolge maven\u4ed3\u5e93 \u5728project\u7ea7\u522b\u4e0b\u7684 build.gradle \u4e2d\u6dfb\u52a0 allprojects { repositories { jcenter() google() } } \u5728app\u4e0b\u7684 build.gradle \u6dfb\u52a0 def lifecycle_version = \"1.1.1\" // ViewModel and LiveData implementation \"android.arch.lifecycle:extensions:$lifecycle_version\" // alternatively - just ViewModel implementation \"android.arch.lifecycle:viewmodel:$lifecycle_version\" // use -ktx for Kotlin // alternatively - just LiveData implementation \"android.arch.lifecycle:livedata:$lifecycle_version\" // alternatively - Lifecycles only (no ViewModel or LiveData). // Support library depends on this lightweight import implementation \"android.arch.lifecycle:runtime:$lifecycle_version\" annotationProcessor \"android.arch.lifecycle:compiler:$lifecycle_version\" // alternately - if using Java8, use the following instead of compiler implementation \"android.arch.lifecycle:common-java8:$lifecycle_version\" // optional - ReactiveStreams support for LiveData implementation \"android.arch.lifecycle:reactivestreams:$lifecycle_version\" // optional - Test helpers for LiveData testImplementation \"android.arch.core:core-testing:$lifecycle_version\" \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684ViewModel public class MyViewModel extends ViewModel { private MutableLiveData<List<User>> users; public LiveData<List<User>> getUsers() { if (users == null) { users = new MutableLiveData<List<User>>(); loadUsers(); } return users; } private void loadUsers() { // \u6267\u884c\u4e00\u6b65\u64cd\u4f5c\u83b7\u53d6users\u6570\u636e } } \u7136\u540e\u5728Activity\u6216\u8005Fragment\u4e2d\u83b7\u53d6\u6570\u636e public class MyActivity extends AppCompatActivity { public void onCreate(Bundle savedInstanceState) { // \u5728\u7cfb\u7edf\u7b2c\u4e00\u6b21\u8c03\u7528onCreate()\u65b9\u6cd5\u65f6\u521b\u5efa\u4e00\u4e2aViewModel // \u91cd\u65b0\u521b\u5efa MyViewModel model = ViewModelProviders.of(this).get(MyViewModel.class); model.getUsers().observe(this, users -> { // \u66f4\u65b0UI }); } } \u5982\u679cViewModel\u7684\u5bbf\u4e3bActivity\u88ab\u91cd\u65b0\u521b\u5efa\uff0c\u90a3\u4e48\u8be5Activity\u53ef\u4ee5\u6536\u5230\u81ea\u5df1\u7b2c\u4e00\u6b21\u521b\u5efa\u65f6\u4e00\u4e2a\u540c\u6837\u7684ViewModel\u3002\u5f53\u5bbf\u4e3bActivity\u88ab finished \u6389\u7684\u65f6\u5019\uff0c\u6846\u67b6\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u8c03\u7528ViewModel\u5bf9\u8c61\u7684 onCleard \u65b9\u6cd5\u5e2e\u52a9\u6211\u4eec\u6e05\u7406\u8d44\u6e90\u3002 \u6ce8\u610f \uff1a\u4e00\u4e2aViewMode\u7c7bl\u4e00\u5b9a\u4e0d\u8981\u6301\u6709view,\u751f\u547d\u5468\u671f\u7684\u5f15\u7528\u6216\u4efb\u4f55\u53ef\u80fd\u6301\u6709\u5bf9Activity\u4e0a\u4e0b\u6587\u7684\u5f15\u7528\u7684\u7c7b ViewModel\u5bf9\u8c61\u53ef\u4ee5\u5305\u542b LifecycleObservers \uff0c\u6bd4\u5982 LiveData \u3002 \u5982\u679c ViewModel\u9700\u8981 Application \u4e0a\u4e0b\u6587\uff0c\u4f8b\u5982\u67e5\u627e\u7cfb\u7edf\u670d\u52a1\uff0c\u5219\u53ef\u4ee5\u6269\u5c55 AndroidViewModel \u8be5\u7c7b\u5e76\u5728\u6784\u9020\u51fd\u6570\u4e2d\u63a5\u6536 Application \u6784\u9020\u51fd\u6570\uff0c\u56e0\u4e3a Application \u7c7b\u4f1a\u6269\u5c55 Context \u3002 ViewModel\u7684\u751f\u547d\u5468\u671f ViewModel\u5bf9\u8c61\u88ab\u9650\u5b9a\u5728\u901a\u8fc7 ViewModelProvider \u83b7\u5f97ViewModel\u7684\u751f\u547d\u5468\u671f\u91cc\u3002ViewModel\u4fdd\u7559\u5728\u5185\u5b58\u4e2d\uff0c\u76f4\u5230\u5176\u751f\u547d\u5468\u671f\u7ed3\u675f\uff1a\u5728Activity\u4e0b\u662f\u5728 finishes \u7684\u65f6\u5019\uff0c\u5728Fragment\u4e0b\u662f detached \u7684\u65f6\u5019\u3002 ViewModelProvider \u6211\u4eec\u901a\u5e38\u4f1a\u5728Activity\u7684 onCreate \u65b9\u6cd5\u4e2d\u8bf7\u6c42\u521b\u5efaViewModel\u5bf9\u8c61\uff0c\u4f46\u662f\u7cfb\u7edf\u53ef\u80fd\u5728Activity\u7684\u751f\u547d\u5468\u671f\u5185\u591a\u6b21\u8c03\u7528 onCreate \u65b9\u6cd5\uff0c\u6bd4\u5982 \u5c4f\u5e55\u65cb\u8f6c\u3002\u4f46\u662fViewModel\u5bf9\u8c61\u4f1a\u4e00\u76f4\u5b58\u5728\u4e8e\u4ece\u7b2c\u4e00\u6b21\u83b7\u53d6ViewMode\u5bf9\u8c61\u76f4\u5230Activity\u7684 finished \u548c destroyed \u3002 \u5728Fragment\u4e4b\u95f4\u5171\u4eab\u6570\u636e Activity\u4e2d\u4e24\u4e2a\u6216\u591a\u4e2aFragment\u4e4b\u95f4\u9700\u8981\u901a\u4fe1\u662f\u5f88\u5e38\u89c1\u7684\u3002\u8fd9\u4e9bFragment\u53ef\u4ee5\u4f7f\u7528\u540c\u4e00\u4e2aActivity\u4f5c\u7528\u8303\u56f4\u4e0b\u7684ViewModel\u6765\u5904\u7406\u901a\u4fe1\u3002 public class SharedViewModel extends ViewModel { private final MutableLiveData<Item> selected = new MutableLiveData<Item>(); public void select(Item item) { selected.setValue(item); } public LiveData<Item> getSelected() { return selected; } } public class MasterFragment extends Fragment { private SharedViewModel model; public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); model = ViewModelProviders.of(getActivity()).get(SharedViewModel.class); itemSelector.setOnClickListener(item -> { model.select(item); }); } } public class DetailFragment extends Fragment { public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); SharedViewModel model = ViewModelProviders.of(getActivity()).get(SharedViewModel.class); model.getSelected().observe(this, { item -> // Update the UI. }); } } \u6ce8\u610f\u8fd9\u4e24\u4e2aFragment\u5728\u4f7f\u7528ViewModelProvider\u83b7\u53d6ViewModel\u65f6\u662f\u7528\u7684 getActivity() \u3002\u56e0\u6b64\uff0c\u8fd9\u4e24\u4e2aFragment\u90fd\u4f1a\u6536\u5230\u76f8\u540c\u7684 SharedViewModel \u5b9e\u4f8b\uff0c\u8fd9\u4e2a\u5b9e\u4f8b\u4f5c\u7528\u57df\u662fActivity\u3002 \u8fd9\u79cd\u65b9\u6cd5\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u597d\u5904\uff1a \u8fd9\u4e2aActivity\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u4e5f\u4e0d\u9700\u8981\u4e86\u89e3\u6709\u5173\u6b64\u901a\u4fe1\u7684\u4efb\u4f55\u4fe1\u606f Fragment\u4e4b\u95f4\u4e0d\u9700\u8981\u4e86\u89e3\u5f7c\u6b64\uff0c\u9664\u4e86SharedViewModel\u7684\u8054\u7cfb\u3002\u5982\u679c\u4e00\u4e2afragment\u6d88\u5931\u4e86\uff0c\u5176\u4ed6fragment\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u6b63\u5e38\u5de5\u4f5c \u6bcf\u4e2aFragment\u90fd\u6709\u5176\u81ea\u5df1\u7684\u751f\u547d\u5468\u671f\uff0c\u5e76\u4e14\u4e0d\u53d7\u5176\u4ed6\u751f\u547d\u5468\u671f\u7684\u5f71\u54cd\u3002\u5982\u679c\u4e00\u4e2aFragment\u66ff\u6362\u53e6\u4e00\u4e2aFragment\uff0cUI\u5c06\u7ee7\u7eed\u5de5\u4f5c\u800c\u4e0d\u4f1a\u51fa\u73b0\u4efb\u4f55\u95ee\u9898 \u521d\u63a2ViewModel\u539f\u7406 MyViewModel model = ViewModelProviders.of(this).get(MyViewModel.class); ViewModelProviders \u5176\u5b9e\u662f ViewModelStore \u7684\u4e00\u4e2a\u5b9e\u7528\u7c7b\uff0c\u5b83\u5728\u5185\u90e8\u5f15\u7528ViewModelStore\u8fd4\u56deViewModel\u5b9e\u4f8b\uff08\u5982\u679c\u5b58\u5728\uff0c\u5426\u5219\u5c31\u521b\u5efa\u4e00\u4e2a\u5e76\u4fdd\u5b58\u4e0b\u6765\uff09\u3002 ViewModelStore\u5185\u90e8\u4f7f\u7528 HashMap \u8ddf\u8e2aViewModel\u3002 public class ViewModelStore { private final HashMap<String, ViewModel> mMap = new HashMap(); public ViewModelStore() {} final void put(String key, ViewModel viewModel) { ViewModel oldViewModel = (ViewModel)this.mMap.get(key); if(oldViewModel != null) { oldViewModel.onCleared(); } this.mMap.put(key, viewModel); } final ViewModel get(String key) { return (ViewModel)this.mMap.get(key); } public final void clear() { Iterator var1 = this.mMap.values().iterator(); while(var1.hasNext()) { ViewModel vm = (ViewModel)var1.next(); vm.onCleared(); } this.mMap.clear(); } } \u7ed3\u8bba ViewModels\u5bf9\u4e8e\u4ece\u7528\u6237\u754c\u9762 \u5206\u79bb\u6570\u636e \u975e\u5e38\u6709\u7528\uff0c\u8fd9\u4e9b \u6570\u636e \u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\u53d7\u76ca\uff0c\u5e76\u4e14\u914d\u7f6e\u66f4\u6539\u4ecd\u7136\u5b58\u5728\uff0c\u8fd9\u662f\u5728\u60a8\u7684\u5e94\u7528\u4e2d\u4f7f\u7528ViewModel\u7ec4\u4ef6\u7684\u4e00\u4e2a\u91cd\u8981 \u7406\u7531 \u3002\u5b83\u751a\u81f3\u53ef\u4ee5\u81ea\u5df1\u6e05\u9664\u8d44\u6e90\u662f\u53e6\u4e00\u4e2a\u91cd\u8981\u56e0\u7d20\u3002 \u6700\u540e\uff0c\u5b83\u4f7f\u5f97\u5728Fragment\u4e4b\u95f4\u901a\u4fe1\u66f4\u5bb9\u6613\u3002 \u5229\u7528ViewModels\uff0c\u60a8\u65e0\u9700\u62c5\u5fc3\u5728\u5c4f\u5e55\u65cb\u8f6c\u6216\u5176\u4ed6\u914d\u7f6e\u66f4\u6539\u671f\u95f4\u5e94\u7528\u7a0b\u5e8f\u5d29\u6e83\u6216\u4e22\u5931UI\u72b6\u6001 \u53c2\u8003 https://developer.android.com/topic/libraries/architecture/viewmodel","title":"Android\u67b6\u6784\u7ec4\u4ef6\u2014ViewModel"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94ViewModel/#androidviewmodel","text":"","title":"Android\u67b6\u6784\u7ec4\u4ef6\u2014ViewModel"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94ViewModel/#_1","text":"\u6211\u4eec\u4e2d\u7684\u5927\u591a\u6570\u4eba\u90fd\u9047\u5230\u8fc7\u65cb\u8f6c\u624b\u673a\u5e76\u4e14\u5e94\u7528\u7a0b\u5e8f\u5d29\u6e83\u6216UI\u5931\u53bb\u72b6\u6001\u7684\u95ee\u9898\u3002 \u89e3\u51b3\u5b83\u6700\u7b80\u5355\u7684\u529e\u6cd5\u5c31\u662f\u914d\u7f6e Activity \u4e3a potrait \u6a21\u5f0f\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u5f88\u7cdf\u7cd5\u7684\u505a\u6cd5\u3002 \u5e78\u8fd0\u7684\u662f\uff0cAndroid\u56e2\u961f\u57282017\u5e74Google I / O\u671f\u95f4\u53d1\u5e03\u4e86ViewModel\u3002 \u8be5ViewModel\u7c7b\u88ab\u8bbe\u8ba1\u7528\u6765\u4fdd\u5b58\u4e0eUI\u76f8\u5173\u7684\u6570\u636e\u5e76\u4e14\u5b83\u662f\u53ef\u4ee5\u611f\u77e5\u751f\u547d\u5468\u671f\u53d8\u5316\u7684\uff0c\u8fd9\u4f7f\u5f97\u5b83\u80fd\u591f\u81ea\u52a8\u5e94\u5bf9\u914d\u7f6e\u53d8\u5316\uff08\u4f8b\u5982\u5c4f\u5e55\u65cb\u8f6c\uff09\u5e26\u6765\u7684\u5f71\u54cd\u3002 \u5b83\u6709\u4ee5\u4e0b\u804c\u8d23\uff1a \u4e3b\u8981\u804c\u8d23\u662f\u7ba1\u7406UI\u7684\u6570\u636e \u5904\u7406 Activity / Fragment \u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u5176\u4f59\u90e8\u5206\u4e4b\u95f4\u7684\u901a\u4fe1 \u5728\u914d\u7f6e\u66f4\u6539\u671f\u95f4\u4fdd\u7559\u6570\u636e \u6ce8\u610f\uff1a\u5b83 \u6c38\u8fdc \u5e94\u8be5\u4e0d\u80fd\u8bbf\u95ee\u60a8\u7684\u89c6\u56fe\u5c42\u6b21\u7ed3\u6784\u6216\u4fdd\u7559Activity\u6216Fragment\u7684\u5f15\u7528\u3002","title":"\u524d\u8a00"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94ViewModel/#_2","text":"","title":"\u6dfb\u52a0\u7ec4\u4ef6\u5230\u9879\u76ee\u4e2d"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94ViewModel/#goolge-maven","text":"\u5728project\u7ea7\u522b\u4e0b\u7684 build.gradle \u4e2d\u6dfb\u52a0 allprojects { repositories { jcenter() google() } } \u5728app\u4e0b\u7684 build.gradle \u6dfb\u52a0 def lifecycle_version = \"1.1.1\" // ViewModel and LiveData implementation \"android.arch.lifecycle:extensions:$lifecycle_version\" // alternatively - just ViewModel implementation \"android.arch.lifecycle:viewmodel:$lifecycle_version\" // use -ktx for Kotlin // alternatively - just LiveData implementation \"android.arch.lifecycle:livedata:$lifecycle_version\" // alternatively - Lifecycles only (no ViewModel or LiveData). // Support library depends on this lightweight import implementation \"android.arch.lifecycle:runtime:$lifecycle_version\" annotationProcessor \"android.arch.lifecycle:compiler:$lifecycle_version\" // alternately - if using Java8, use the following instead of compiler implementation \"android.arch.lifecycle:common-java8:$lifecycle_version\" // optional - ReactiveStreams support for LiveData implementation \"android.arch.lifecycle:reactivestreams:$lifecycle_version\" // optional - Test helpers for LiveData testImplementation \"android.arch.core:core-testing:$lifecycle_version\"","title":"\u6dfb\u52a0goolge maven\u4ed3\u5e93"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94ViewModel/#viewmodel","text":"public class MyViewModel extends ViewModel { private MutableLiveData<List<User>> users; public LiveData<List<User>> getUsers() { if (users == null) { users = new MutableLiveData<List<User>>(); loadUsers(); } return users; } private void loadUsers() { // \u6267\u884c\u4e00\u6b65\u64cd\u4f5c\u83b7\u53d6users\u6570\u636e } } \u7136\u540e\u5728Activity\u6216\u8005Fragment\u4e2d\u83b7\u53d6\u6570\u636e public class MyActivity extends AppCompatActivity { public void onCreate(Bundle savedInstanceState) { // \u5728\u7cfb\u7edf\u7b2c\u4e00\u6b21\u8c03\u7528onCreate()\u65b9\u6cd5\u65f6\u521b\u5efa\u4e00\u4e2aViewModel // \u91cd\u65b0\u521b\u5efa MyViewModel model = ViewModelProviders.of(this).get(MyViewModel.class); model.getUsers().observe(this, users -> { // \u66f4\u65b0UI }); } } \u5982\u679cViewModel\u7684\u5bbf\u4e3bActivity\u88ab\u91cd\u65b0\u521b\u5efa\uff0c\u90a3\u4e48\u8be5Activity\u53ef\u4ee5\u6536\u5230\u81ea\u5df1\u7b2c\u4e00\u6b21\u521b\u5efa\u65f6\u4e00\u4e2a\u540c\u6837\u7684ViewModel\u3002\u5f53\u5bbf\u4e3bActivity\u88ab finished \u6389\u7684\u65f6\u5019\uff0c\u6846\u67b6\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u8c03\u7528ViewModel\u5bf9\u8c61\u7684 onCleard \u65b9\u6cd5\u5e2e\u52a9\u6211\u4eec\u6e05\u7406\u8d44\u6e90\u3002 \u6ce8\u610f \uff1a\u4e00\u4e2aViewMode\u7c7bl\u4e00\u5b9a\u4e0d\u8981\u6301\u6709view,\u751f\u547d\u5468\u671f\u7684\u5f15\u7528\u6216\u4efb\u4f55\u53ef\u80fd\u6301\u6709\u5bf9Activity\u4e0a\u4e0b\u6587\u7684\u5f15\u7528\u7684\u7c7b ViewModel\u5bf9\u8c61\u53ef\u4ee5\u5305\u542b LifecycleObservers \uff0c\u6bd4\u5982 LiveData \u3002 \u5982\u679c ViewModel\u9700\u8981 Application \u4e0a\u4e0b\u6587\uff0c\u4f8b\u5982\u67e5\u627e\u7cfb\u7edf\u670d\u52a1\uff0c\u5219\u53ef\u4ee5\u6269\u5c55 AndroidViewModel \u8be5\u7c7b\u5e76\u5728\u6784\u9020\u51fd\u6570\u4e2d\u63a5\u6536 Application \u6784\u9020\u51fd\u6570\uff0c\u56e0\u4e3a Application \u7c7b\u4f1a\u6269\u5c55 Context \u3002","title":"\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684ViewModel"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94ViewModel/#viewmodel_1","text":"ViewModel\u5bf9\u8c61\u88ab\u9650\u5b9a\u5728\u901a\u8fc7 ViewModelProvider \u83b7\u5f97ViewModel\u7684\u751f\u547d\u5468\u671f\u91cc\u3002ViewModel\u4fdd\u7559\u5728\u5185\u5b58\u4e2d\uff0c\u76f4\u5230\u5176\u751f\u547d\u5468\u671f\u7ed3\u675f\uff1a\u5728Activity\u4e0b\u662f\u5728 finishes \u7684\u65f6\u5019\uff0c\u5728Fragment\u4e0b\u662f detached \u7684\u65f6\u5019\u3002 ViewModelProvider \u6211\u4eec\u901a\u5e38\u4f1a\u5728Activity\u7684 onCreate \u65b9\u6cd5\u4e2d\u8bf7\u6c42\u521b\u5efaViewModel\u5bf9\u8c61\uff0c\u4f46\u662f\u7cfb\u7edf\u53ef\u80fd\u5728Activity\u7684\u751f\u547d\u5468\u671f\u5185\u591a\u6b21\u8c03\u7528 onCreate \u65b9\u6cd5\uff0c\u6bd4\u5982 \u5c4f\u5e55\u65cb\u8f6c\u3002\u4f46\u662fViewModel\u5bf9\u8c61\u4f1a\u4e00\u76f4\u5b58\u5728\u4e8e\u4ece\u7b2c\u4e00\u6b21\u83b7\u53d6ViewMode\u5bf9\u8c61\u76f4\u5230Activity\u7684 finished \u548c destroyed \u3002","title":"ViewModel\u7684\u751f\u547d\u5468\u671f"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94ViewModel/#fragment","text":"Activity\u4e2d\u4e24\u4e2a\u6216\u591a\u4e2aFragment\u4e4b\u95f4\u9700\u8981\u901a\u4fe1\u662f\u5f88\u5e38\u89c1\u7684\u3002\u8fd9\u4e9bFragment\u53ef\u4ee5\u4f7f\u7528\u540c\u4e00\u4e2aActivity\u4f5c\u7528\u8303\u56f4\u4e0b\u7684ViewModel\u6765\u5904\u7406\u901a\u4fe1\u3002 public class SharedViewModel extends ViewModel { private final MutableLiveData<Item> selected = new MutableLiveData<Item>(); public void select(Item item) { selected.setValue(item); } public LiveData<Item> getSelected() { return selected; } } public class MasterFragment extends Fragment { private SharedViewModel model; public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); model = ViewModelProviders.of(getActivity()).get(SharedViewModel.class); itemSelector.setOnClickListener(item -> { model.select(item); }); } } public class DetailFragment extends Fragment { public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); SharedViewModel model = ViewModelProviders.of(getActivity()).get(SharedViewModel.class); model.getSelected().observe(this, { item -> // Update the UI. }); } } \u6ce8\u610f\u8fd9\u4e24\u4e2aFragment\u5728\u4f7f\u7528ViewModelProvider\u83b7\u53d6ViewModel\u65f6\u662f\u7528\u7684 getActivity() \u3002\u56e0\u6b64\uff0c\u8fd9\u4e24\u4e2aFragment\u90fd\u4f1a\u6536\u5230\u76f8\u540c\u7684 SharedViewModel \u5b9e\u4f8b\uff0c\u8fd9\u4e2a\u5b9e\u4f8b\u4f5c\u7528\u57df\u662fActivity\u3002 \u8fd9\u79cd\u65b9\u6cd5\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u597d\u5904\uff1a \u8fd9\u4e2aActivity\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u4e5f\u4e0d\u9700\u8981\u4e86\u89e3\u6709\u5173\u6b64\u901a\u4fe1\u7684\u4efb\u4f55\u4fe1\u606f Fragment\u4e4b\u95f4\u4e0d\u9700\u8981\u4e86\u89e3\u5f7c\u6b64\uff0c\u9664\u4e86SharedViewModel\u7684\u8054\u7cfb\u3002\u5982\u679c\u4e00\u4e2afragment\u6d88\u5931\u4e86\uff0c\u5176\u4ed6fragment\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u6b63\u5e38\u5de5\u4f5c \u6bcf\u4e2aFragment\u90fd\u6709\u5176\u81ea\u5df1\u7684\u751f\u547d\u5468\u671f\uff0c\u5e76\u4e14\u4e0d\u53d7\u5176\u4ed6\u751f\u547d\u5468\u671f\u7684\u5f71\u54cd\u3002\u5982\u679c\u4e00\u4e2aFragment\u66ff\u6362\u53e6\u4e00\u4e2aFragment\uff0cUI\u5c06\u7ee7\u7eed\u5de5\u4f5c\u800c\u4e0d\u4f1a\u51fa\u73b0\u4efb\u4f55\u95ee\u9898","title":"\u5728Fragment\u4e4b\u95f4\u5171\u4eab\u6570\u636e"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94ViewModel/#viewmodel_2","text":"MyViewModel model = ViewModelProviders.of(this).get(MyViewModel.class); ViewModelProviders \u5176\u5b9e\u662f ViewModelStore \u7684\u4e00\u4e2a\u5b9e\u7528\u7c7b\uff0c\u5b83\u5728\u5185\u90e8\u5f15\u7528ViewModelStore\u8fd4\u56deViewModel\u5b9e\u4f8b\uff08\u5982\u679c\u5b58\u5728\uff0c\u5426\u5219\u5c31\u521b\u5efa\u4e00\u4e2a\u5e76\u4fdd\u5b58\u4e0b\u6765\uff09\u3002 ViewModelStore\u5185\u90e8\u4f7f\u7528 HashMap \u8ddf\u8e2aViewModel\u3002 public class ViewModelStore { private final HashMap<String, ViewModel> mMap = new HashMap(); public ViewModelStore() {} final void put(String key, ViewModel viewModel) { ViewModel oldViewModel = (ViewModel)this.mMap.get(key); if(oldViewModel != null) { oldViewModel.onCleared(); } this.mMap.put(key, viewModel); } final ViewModel get(String key) { return (ViewModel)this.mMap.get(key); } public final void clear() { Iterator var1 = this.mMap.values().iterator(); while(var1.hasNext()) { ViewModel vm = (ViewModel)var1.next(); vm.onCleared(); } this.mMap.clear(); } }","title":"\u521d\u63a2ViewModel\u539f\u7406"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94ViewModel/#_3","text":"ViewModels\u5bf9\u4e8e\u4ece\u7528\u6237\u754c\u9762 \u5206\u79bb\u6570\u636e \u975e\u5e38\u6709\u7528\uff0c\u8fd9\u4e9b \u6570\u636e \u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\u53d7\u76ca\uff0c\u5e76\u4e14\u914d\u7f6e\u66f4\u6539\u4ecd\u7136\u5b58\u5728\uff0c\u8fd9\u662f\u5728\u60a8\u7684\u5e94\u7528\u4e2d\u4f7f\u7528ViewModel\u7ec4\u4ef6\u7684\u4e00\u4e2a\u91cd\u8981 \u7406\u7531 \u3002\u5b83\u751a\u81f3\u53ef\u4ee5\u81ea\u5df1\u6e05\u9664\u8d44\u6e90\u662f\u53e6\u4e00\u4e2a\u91cd\u8981\u56e0\u7d20\u3002 \u6700\u540e\uff0c\u5b83\u4f7f\u5f97\u5728Fragment\u4e4b\u95f4\u901a\u4fe1\u66f4\u5bb9\u6613\u3002 \u5229\u7528ViewModels\uff0c\u60a8\u65e0\u9700\u62c5\u5fc3\u5728\u5c4f\u5e55\u65cb\u8f6c\u6216\u5176\u4ed6\u914d\u7f6e\u66f4\u6539\u671f\u95f4\u5e94\u7528\u7a0b\u5e8f\u5d29\u6e83\u6216\u4e22\u5931UI\u72b6\u6001","title":"\u7ed3\u8bba"},{"location":"android/Jetpack/Android%E6%9E%B6%E6%9E%84%E7%BB%84%E4%BB%B6%E2%80%94ViewModel/#_4","text":"https://developer.android.com/topic/libraries/architecture/viewmodel","title":"\u53c2\u8003"},{"location":"android/Jetpack/Architecture%20Components%E4%BB%8B%E7%BB%8D/","text":"Architecture Components\u4ecb\u7ecd \u4e3a\u4ec0\u4e48\u9700\u8981\u67b6\u6784\u7ec4\u4ef6 \u4e4b\u524d\u6709\u591a\u5c11\u4eba\u662f\u628a\u6240\u6709\u4ee3\u7801\u90fd\u5199\u5728 Activity \u91cc\u9762\uff1f\u51e0\u4e4e\u6bcf\u4e2a\u4eba\u90fd\u5e72\u8fc7\u4e00\u6b21\uff0c\u5bf9\u5427\uff01 Android \u6846\u67b6\u5c42\u9762\u4e0a\u5141\u8bb8\u81ea\u7531\u7684\u505a\u5230\u4e0a\u9762\u8fd9\u70b9\uff0c\u4f46\u662f\u540e\u6765\u6211\u4eec\u610f\u8bc6\u5230\u4e86\u8fd9\u4e48\u505a\u4f1a\u5e26\u6765\u7684\u95ee\u9898\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u7684\u4ee3\u7801\u53d8\u5f97\u81c3\u80bf\u4e0d\u582a\uff0c\u96be\u4ee5\u7ef4\u62a4\u3002\u6240\u4ee5\u624d\u51fa\u73b0\u4e86\u50cfmvp\uff0cmvvm\u8fd9\u6837\u4e0d\u540c\u7684\u67b6\u6784\u6a21\u5f0f\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u66f4\u5065\u58ee\u7684\u548c\u53ef\u6d4b\u8bd5\u7684\u4ee3\u7801\u3002\u4f46\u662fAndroid Team\u5e76\u6ca1\u6709\u8fd9\u6837\u7684\u5b98\u65b9\u7ec4\u4ef6\u3002\u800c\u4e14\uff0c\u6211\u4eec\u4f5c\u4e3a\u5f00\u53d1\u8005\u66f4\u559c\u6b22\u4e89\u8bba\u54ea\u79cd\u67b6\u6784\u6a21\u5f0f\u66f4\u597d\u3002 \u76f4\u5230Android\u56e2\u961f\u610f\u8bc6\u5230\u4ed6\u4eec\u9700\u8981 \u660e\u786e\u8868\u6001 \u5e76\u544a\u8bc9\u6211\u4eec\u5e94\u5982\u4f55\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\uff0c\u5176\u7ed3\u679c\u5c31\u662f\u53d1\u5e03\u67b6\u6784\u7ec4\u4ef6\u548c\u76f8\u5173\u6307\u5357\u3002 \u67b6\u6784\u7ec4\u4ef6\u662f\u4ec0\u4e48 \u4e00\u4e2a\u65b0\u7684\u5e93\u96c6\u5408\uff0c\u53ef\u5e2e\u52a9\u60a8\u8bbe\u8ba1\u5065\u58ee\u7684\uff0c\u53ef\u6d4b\u8bd5\u7684\u548c\u53ef\u7ef4\u62a4\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u4ece\u7ba1\u7406UI\u7ec4\u4ef6\u751f\u547d\u5468\u671f\u548c\u5904\u7406\u6570\u636e\u6301\u4e45\u6027\u7c7b\u5f00\u59cb \u7b80\u800c\u8a00\u4e4b\uff0c\u8fd9\u4e9b\u5e93\u5c06\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\uff0c\u914d\u7f6e\u66f4\u6539\uff0c\u5185\u5b58\u6cc4\u6f0f\uff0c\u600e\u4e48\u7f16\u5199\u53ef\u6d4b\u8bd5\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u5e38\u89c1\u95ee\u9898\uff0c\u5728\u7ef4\u62a4\u67b6\u6784\u7684\u540c\u65f6\u51cf\u5c11\u6a21\u677f\u4ee3\u7801\u3002 Lifecycle Lifecycle\u63d0\u4f9b\u4e86\u7c7b\u548c\u63a5\u53e3\u8ba9\u60a8\u53ef\u4ee5\u6784\u5efa\u51fa\u5177\u6709\u611f\u77e5\u751f\u547d\u5468\u671f\u53d8\u5316\u7684\u7ec4\u4ef6\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u53ef\u4ee5\u6839\u636e Activity \u548c Fragment \u5f53\u524d\u7684\u751f\u547d\u5468\u671f\u81ea\u52a8\u8c03\u6574\u81ea\u5df1\u7684\u72b6\u6001\u3002 ViewModel \u5b83\u662f\u88ab\u8bbe\u8ba1\u7528\u6765\u50a8\u5b58\u548c\u7ba1\u7406\u4e0eUI\u76f8\u5173\u6570\u636e\u7684\u7ec4\u4ef6\uff0c\u4ee5\u4fbf\u6570\u636e\u80fd\u591f\u5728\u5c4f\u5e55\u65cb\u8f6c\u7b49\u914d\u7f6e\u53d8\u5316\u4e0b\u4fdd\u5b58\u4e0b\u6765\u3002\u5b83\u4e0d\u5e94\u8be5\u8bbf\u95ee\u60a8\u7684\u89c6\u56fe\u7ed3\u6784\u6216\u4fdd\u7559Activity\u6216Fragment\u7684\u5f15\u7528\u3002 \u5b83\u6709\u4ee5\u4e0b\u804c\u8d23\uff1a \u4e3b\u8981\u804c\u8d23\u5c31\u662f\u7ba1\u7406UI\u7684\u6570\u636e \u5b83\u5904\u7406 Activity / Fragment \u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u5176\u4ed6\u90e8\u5206\u4e4b\u95f4\u7684\u901a\u4fe1 \u5728\u914d\u7f6e\u66f4\u6539\u65f6\u4fdd\u5b58\u6570\u636e \u8fd9\u610f\u5473\u7740\u6211\u4eec\u7684 Activity \u6216 Fragment \u4e0d\u4f1a\u8d1f\u8d23\u4fdd\u5b58\u6570\u636e\uff0c\u53ea\u5305\u542b\u4e0eUI\u76f8\u5173\u7684\u4ee3\u7801\u3002 ViewModel\u662f\u5177\u6709\u751f\u547d\u611f\u77e5\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u62c5\u5fc3\u5185\u5b58\u6cc4\u9732\u95ee\u9898 LiveData LiveData\u662f\u4e00\u4e2a\u4fdd\u5b58\u503c\uff08\u6570\u636e\u6301\u6709\u8005\uff09\u5e76\u5141\u8bb8\u89c2\u5bdf\u503c\u53d8\u5316\u7684\u7ec4\u4ef6\u3002\u5b83\u88ab\u8bbe\u8ba1\u7528\u6765\u4fdd\u5b58ViewModel\u4e2d\u7684\u503c\uff0c\u4f46\u5b83\u4e5f\u53ef\u88ab\u7528\u4e8e\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5171\u4eab\u6570\u636e\u3002LiveData\u4e5f\u80fd\u611f\u77e5\u751f\u547d\u5468\u671f\u7684\u53d8\u5316\uff0c\u5b83\u80fd\u5728Activity\u8fd8\u5b58\u5728\u65f6\u5019\u63a5\u53d7\u6570\u636e\u7684\u6539\u53d8\u5e76\u5728\u4e0d\u5b58\u5728\u65f6\u9632\u6b62\u5d29\u6e83\u3002 LiveData\u7684\u4f18\u70b9\uff1a \u59cb\u7ec8\u4fdd\u6301\u6700\u65b0\u7684\u6570\u636e \u6b63\u786e\u7684\u5e94\u5bf9\u914d\u7f6e\u53d8\u5316 \u6ca1\u6709\u5185\u5b58\u6cc4\u6f0f Room Room\u63d0\u4f9b\u4e86\u4e00\u4e2aSQLite\u7684\u62bd\u8c61\u5c42\uff0c\u53ef\u4ee5\u5728\u5145\u5206\u5229\u7528SQLite\u7684\u540c\u65f6\u6d41\u7545\u8bbf\u95ee\u7684\u6570\u636e\u5e93\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u5b83\u5c31\u50cfSQLite\u6570\u636e\u5e93\u7684\u4e00\u4e2aORM\uff0c\u5b83\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u76f4\u63a5\u5c06\u5bf9\u8c61\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u5e76\u4e14Room\u4f1a\u5f88\u597d\u5730\u5c06\u5bf9\u8c61\u6b63\u786e\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d\u3002 Room\u7684\u4f18\u70b9\uff1a \u539f\u59cb\u7684SQL\u67e5\u8be2 \u6d88\u9664\u4e86\u5728SQL\u67e5\u8be2\u548cJava\u6570\u636e\u5bf9\u8c61\u4e4b\u95f4\u8f6c\u6362\u7684\u6837\u677f\u4ee3\u7801 \u4e0d\u9700\u8981\u5199Cursor\u6216Loader \u7ed3\u8bba \u6700\u540e\uff0c\u6211\u89c9\u5f97\u8fd9\u662f\u81ea\u6784\u5efaAndroid\u5e94\u7528\u7a0b\u5e8f\u4ee5\u6765\u7684\u6700\u597d\u65b9\u5f0f\u3002\u867d\u7136\u6709\u4e9b\u8fdf\u5230\uff0c\u4f46\u662f\u603b\u6bd4\u7f3a\u5e2d\u597d\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u4e9b\u7ec4\u4ef6\u6784\u5efa\u51fa\u4ee4\u4eba\u60ca\u8bb6\u7684\u5e94\u7528\u3002 \u53c2\u8003 https://developer.android.com/topic/libraries/architecture/","title":"Architecture Components\u4ecb\u7ecd"},{"location":"android/Jetpack/Architecture%20Components%E4%BB%8B%E7%BB%8D/#architecture-components","text":"","title":"Architecture Components\u4ecb\u7ecd"},{"location":"android/Jetpack/Architecture%20Components%E4%BB%8B%E7%BB%8D/#_1","text":"\u4e4b\u524d\u6709\u591a\u5c11\u4eba\u662f\u628a\u6240\u6709\u4ee3\u7801\u90fd\u5199\u5728 Activity \u91cc\u9762\uff1f\u51e0\u4e4e\u6bcf\u4e2a\u4eba\u90fd\u5e72\u8fc7\u4e00\u6b21\uff0c\u5bf9\u5427\uff01 Android \u6846\u67b6\u5c42\u9762\u4e0a\u5141\u8bb8\u81ea\u7531\u7684\u505a\u5230\u4e0a\u9762\u8fd9\u70b9\uff0c\u4f46\u662f\u540e\u6765\u6211\u4eec\u610f\u8bc6\u5230\u4e86\u8fd9\u4e48\u505a\u4f1a\u5e26\u6765\u7684\u95ee\u9898\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u7684\u4ee3\u7801\u53d8\u5f97\u81c3\u80bf\u4e0d\u582a\uff0c\u96be\u4ee5\u7ef4\u62a4\u3002\u6240\u4ee5\u624d\u51fa\u73b0\u4e86\u50cfmvp\uff0cmvvm\u8fd9\u6837\u4e0d\u540c\u7684\u67b6\u6784\u6a21\u5f0f\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u66f4\u5065\u58ee\u7684\u548c\u53ef\u6d4b\u8bd5\u7684\u4ee3\u7801\u3002\u4f46\u662fAndroid Team\u5e76\u6ca1\u6709\u8fd9\u6837\u7684\u5b98\u65b9\u7ec4\u4ef6\u3002\u800c\u4e14\uff0c\u6211\u4eec\u4f5c\u4e3a\u5f00\u53d1\u8005\u66f4\u559c\u6b22\u4e89\u8bba\u54ea\u79cd\u67b6\u6784\u6a21\u5f0f\u66f4\u597d\u3002 \u76f4\u5230Android\u56e2\u961f\u610f\u8bc6\u5230\u4ed6\u4eec\u9700\u8981 \u660e\u786e\u8868\u6001 \u5e76\u544a\u8bc9\u6211\u4eec\u5e94\u5982\u4f55\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\uff0c\u5176\u7ed3\u679c\u5c31\u662f\u53d1\u5e03\u67b6\u6784\u7ec4\u4ef6\u548c\u76f8\u5173\u6307\u5357\u3002","title":"\u4e3a\u4ec0\u4e48\u9700\u8981\u67b6\u6784\u7ec4\u4ef6"},{"location":"android/Jetpack/Architecture%20Components%E4%BB%8B%E7%BB%8D/#_2","text":"\u4e00\u4e2a\u65b0\u7684\u5e93\u96c6\u5408\uff0c\u53ef\u5e2e\u52a9\u60a8\u8bbe\u8ba1\u5065\u58ee\u7684\uff0c\u53ef\u6d4b\u8bd5\u7684\u548c\u53ef\u7ef4\u62a4\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u4ece\u7ba1\u7406UI\u7ec4\u4ef6\u751f\u547d\u5468\u671f\u548c\u5904\u7406\u6570\u636e\u6301\u4e45\u6027\u7c7b\u5f00\u59cb \u7b80\u800c\u8a00\u4e4b\uff0c\u8fd9\u4e9b\u5e93\u5c06\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\uff0c\u914d\u7f6e\u66f4\u6539\uff0c\u5185\u5b58\u6cc4\u6f0f\uff0c\u600e\u4e48\u7f16\u5199\u53ef\u6d4b\u8bd5\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u5e38\u89c1\u95ee\u9898\uff0c\u5728\u7ef4\u62a4\u67b6\u6784\u7684\u540c\u65f6\u51cf\u5c11\u6a21\u677f\u4ee3\u7801\u3002","title":"\u67b6\u6784\u7ec4\u4ef6\u662f\u4ec0\u4e48"},{"location":"android/Jetpack/Architecture%20Components%E4%BB%8B%E7%BB%8D/#lifecycle","text":"Lifecycle\u63d0\u4f9b\u4e86\u7c7b\u548c\u63a5\u53e3\u8ba9\u60a8\u53ef\u4ee5\u6784\u5efa\u51fa\u5177\u6709\u611f\u77e5\u751f\u547d\u5468\u671f\u53d8\u5316\u7684\u7ec4\u4ef6\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u53ef\u4ee5\u6839\u636e Activity \u548c Fragment \u5f53\u524d\u7684\u751f\u547d\u5468\u671f\u81ea\u52a8\u8c03\u6574\u81ea\u5df1\u7684\u72b6\u6001\u3002","title":"Lifecycle"},{"location":"android/Jetpack/Architecture%20Components%E4%BB%8B%E7%BB%8D/#viewmodel","text":"\u5b83\u662f\u88ab\u8bbe\u8ba1\u7528\u6765\u50a8\u5b58\u548c\u7ba1\u7406\u4e0eUI\u76f8\u5173\u6570\u636e\u7684\u7ec4\u4ef6\uff0c\u4ee5\u4fbf\u6570\u636e\u80fd\u591f\u5728\u5c4f\u5e55\u65cb\u8f6c\u7b49\u914d\u7f6e\u53d8\u5316\u4e0b\u4fdd\u5b58\u4e0b\u6765\u3002\u5b83\u4e0d\u5e94\u8be5\u8bbf\u95ee\u60a8\u7684\u89c6\u56fe\u7ed3\u6784\u6216\u4fdd\u7559Activity\u6216Fragment\u7684\u5f15\u7528\u3002 \u5b83\u6709\u4ee5\u4e0b\u804c\u8d23\uff1a \u4e3b\u8981\u804c\u8d23\u5c31\u662f\u7ba1\u7406UI\u7684\u6570\u636e \u5b83\u5904\u7406 Activity / Fragment \u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u5176\u4ed6\u90e8\u5206\u4e4b\u95f4\u7684\u901a\u4fe1 \u5728\u914d\u7f6e\u66f4\u6539\u65f6\u4fdd\u5b58\u6570\u636e \u8fd9\u610f\u5473\u7740\u6211\u4eec\u7684 Activity \u6216 Fragment \u4e0d\u4f1a\u8d1f\u8d23\u4fdd\u5b58\u6570\u636e\uff0c\u53ea\u5305\u542b\u4e0eUI\u76f8\u5173\u7684\u4ee3\u7801\u3002 ViewModel\u662f\u5177\u6709\u751f\u547d\u611f\u77e5\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u62c5\u5fc3\u5185\u5b58\u6cc4\u9732\u95ee\u9898","title":"ViewModel"},{"location":"android/Jetpack/Architecture%20Components%E4%BB%8B%E7%BB%8D/#livedata","text":"LiveData\u662f\u4e00\u4e2a\u4fdd\u5b58\u503c\uff08\u6570\u636e\u6301\u6709\u8005\uff09\u5e76\u5141\u8bb8\u89c2\u5bdf\u503c\u53d8\u5316\u7684\u7ec4\u4ef6\u3002\u5b83\u88ab\u8bbe\u8ba1\u7528\u6765\u4fdd\u5b58ViewModel\u4e2d\u7684\u503c\uff0c\u4f46\u5b83\u4e5f\u53ef\u88ab\u7528\u4e8e\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5171\u4eab\u6570\u636e\u3002LiveData\u4e5f\u80fd\u611f\u77e5\u751f\u547d\u5468\u671f\u7684\u53d8\u5316\uff0c\u5b83\u80fd\u5728Activity\u8fd8\u5b58\u5728\u65f6\u5019\u63a5\u53d7\u6570\u636e\u7684\u6539\u53d8\u5e76\u5728\u4e0d\u5b58\u5728\u65f6\u9632\u6b62\u5d29\u6e83\u3002 LiveData\u7684\u4f18\u70b9\uff1a \u59cb\u7ec8\u4fdd\u6301\u6700\u65b0\u7684\u6570\u636e \u6b63\u786e\u7684\u5e94\u5bf9\u914d\u7f6e\u53d8\u5316 \u6ca1\u6709\u5185\u5b58\u6cc4\u6f0f","title":"LiveData"},{"location":"android/Jetpack/Architecture%20Components%E4%BB%8B%E7%BB%8D/#room","text":"Room\u63d0\u4f9b\u4e86\u4e00\u4e2aSQLite\u7684\u62bd\u8c61\u5c42\uff0c\u53ef\u4ee5\u5728\u5145\u5206\u5229\u7528SQLite\u7684\u540c\u65f6\u6d41\u7545\u8bbf\u95ee\u7684\u6570\u636e\u5e93\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u5b83\u5c31\u50cfSQLite\u6570\u636e\u5e93\u7684\u4e00\u4e2aORM\uff0c\u5b83\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u76f4\u63a5\u5c06\u5bf9\u8c61\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u5e76\u4e14Room\u4f1a\u5f88\u597d\u5730\u5c06\u5bf9\u8c61\u6b63\u786e\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d\u3002 Room\u7684\u4f18\u70b9\uff1a \u539f\u59cb\u7684SQL\u67e5\u8be2 \u6d88\u9664\u4e86\u5728SQL\u67e5\u8be2\u548cJava\u6570\u636e\u5bf9\u8c61\u4e4b\u95f4\u8f6c\u6362\u7684\u6837\u677f\u4ee3\u7801 \u4e0d\u9700\u8981\u5199Cursor\u6216Loader","title":"Room"},{"location":"android/Jetpack/Architecture%20Components%E4%BB%8B%E7%BB%8D/#_3","text":"\u6700\u540e\uff0c\u6211\u89c9\u5f97\u8fd9\u662f\u81ea\u6784\u5efaAndroid\u5e94\u7528\u7a0b\u5e8f\u4ee5\u6765\u7684\u6700\u597d\u65b9\u5f0f\u3002\u867d\u7136\u6709\u4e9b\u8fdf\u5230\uff0c\u4f46\u662f\u603b\u6bd4\u7f3a\u5e2d\u597d\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u4e9b\u7ec4\u4ef6\u6784\u5efa\u51fa\u4ee4\u4eba\u60ca\u8bb6\u7684\u5e94\u7528\u3002","title":"\u7ed3\u8bba"},{"location":"android/Jetpack/Architecture%20Components%E4%BB%8B%E7%BB%8D/#_4","text":"https://developer.android.com/topic/libraries/architecture/","title":"\u53c2\u8003"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","text":"Cmake\u5b66\u4e60\u7b14\u8bb0 \u7b80\u4ecb \u5b98\u7f51 CMake \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\uff0c\u5f00\u6e90\u7684\u6784\u5efa\u7cfb\u7edf\uff08BuildSystem\uff09\u3002CMake \u53ef\u4ee5\u901a\u8fc7 CMakeLists.txt \u6587\u4ef6\u6765\u4ea7\u751f\u7279\u5b9a\u5e73\u53f0\u7684\u6807\u51c6\u7684\u6784\u5efa\u6587\u4ef6\uff0c\u4f8b\u5982\uff1a\u4e3a Unix \u5e73\u53f0\u751f\u6210makefiles\u6587\u4ef6\uff08\u4f7f\u7528GCC\u7f16\u8bd1\uff09\uff0c\u4e3a Windows MSVC \u751f\u6210 projects/workspaces\uff08\u4f7f\u7528VS IDE\u7f16\u8bd1\uff09\u6216Makefile\u6587\u4ef6\uff08\u4f7f\u7528nmake\u7f16\u8bd1\uff09 \u57fa\u672c\u8bed\u6cd5 \u6ce8\u91ca cmake\u4e2d\u4ee5 # \u5f00\u5934\u4e3a\u6ce8\u91ca cmake\u547d\u4ee4 \u547d\u4ee4\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff08\u53c2\u6570\u4f1a\u533a\u5206\u5927\u5c0f\u5199\uff09\uff0c\u547d\u4ee4\u7531\u547d\u4ee4\u3001\u53c2\u6570\u5217\u8868\u7ec4\u6210\uff0c\u53c2\u6570\u4e4b\u95f4\u4f7f\u7528\u7a7a\u683c\u8fdb\u884c\u5206\u9694\u3002 \u4f7f\u7528\u4e00\u5bf9\u53cc\u5f15\u53f7\u5305\u62ec\u7684\u5b57\u7b26\u4e32\u8ba4\u4e3a\u662f\u4e00\u4e2a\u53c2\u6570\u3002 \u547d\u4ee4\u53ef\u4ee5\u662f\u4e00\u4e2a\u5185\u7f6e\u547d\u4ee4\uff08\u4f8b\u5982\uff1aproject\uff0cadd_executable\u7b49\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u5b8f\uff08macro\uff09\u6216\u8005\u51fd\u6570\uff08function\uff09\u3002 \u53d8\u91cf CMake\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u662f\u5b57\u7b26\u4e32\uff0c\u4e00\u7ec4\u5b57\u7b26\u4e32\u5728\u4e00\u8d77\u79f0\u4e3a\u5217\u8868\uff08list\uff09 set \u547d\u4ee4\u8bbe\u7f6e\u4e00\u4e2a\u53d8\u91cf\uff0c ${var} \u53d6\u51fa\u53d8\u91cf\u7684\u503c\u3002 \u53d8\u91cf\u540d\u533a\u5206\u5927\u5c0f\u5199 \u5728\u5b57\u7b26\u4e32\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528 ${VariableName} \u6765\u8bbf\u95ee\u53d8\u91cf\u7684\u503c \u4f7f\u7528\u8bed\u6cd5 $ENV{VariableName} \u6765\u8bbf\u95ee\u73af\u5883\u53d8\u91cf\u7684\u503c \uff08ENV{VariableName} \u5219\u8868\u793a\u73af\u5883\u53d8\u91cf\u672c\u8eab\uff09 \u6761\u4ef6\u63a7\u5236 if(expression) #... elseif(expression2) #... else() #... endif() \u8868\u8fbe\u5f0f\u4e2d\u53ef\u4ee5\u5305\u542b\u64cd\u4f5c\u7b26\uff0c\u64cd\u4f5c\u7b26\u5305\u62ec\uff1a \u4e00\u5143\u64cd\u4f5c\u7b26\uff0c\u4f8b\u5982\uff1aEXISTS\u3001COMMAND\u3001DEFINED \u7b49 \u4e8c\u5143\u64cd\u4f5c\u7b26\uff0c\u4f8b\u5982\uff1aEQUAL\u3001LESS\u3001GREATER\u3001STRLESS\u3001STRGREATER \u7b49 NOT\uff08\u975e\u64cd\u4f5c\u7b26\uff09 AND\uff08\u4e0e\u64cd\u4f5c\u7b26\uff09\u3001OR\uff08\u6216\u64cd\u4f5c\u7b26\uff09 \u64cd\u4f5c\u7b26\u4f18\u5148\u7ea7\uff1a\u4e00\u5143\u64cd\u4f5c\u7b26 > \u4e8c\u5143\u64cd\u4f5c\u7b26 > NOT > AND\u3001OR \u5e38\u7528\u64cd\u4f5c\u7b26\u4ecb\u7ecd\uff1a # \u4e3a\u771f\u7684\u524d\u63d0\u662f expression \u4e3a\u5047 if(NOT expression) # \u4e3a\u771f\u7684\u524d\u63d0\u662f\u5b58\u5728 command-name \u547d\u4ee4\u3001\u5b8f\u6216\u51fd\u6570\u4e14\u80fd\u591f\u88ab\u8c03\u7528 if(COMMAND command-name) # \u4e3a\u771f\u7684\u524d\u63d0\u662f\u5b58\u5728 name \u7684\u6587\u4ef6\u6216\u8005\u76ee\u5f55\uff08\u5e94\u8be5\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\uff09 if(EXISTS name) # \u4e3a\u771f\u7684\u524d\u63d0\u662f file1 \u6bd4 file2 \u65b0\u6216\u8005 file1\u3001file2 \u4e2d\u6709\u4e00\u4e2a\u6587\u4ef6\u4e0d\u5b58\u5728\uff08\u5e94\u8be5\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\uff09 if(file1 IS_NEWER_THAN file2) # \u4e3a\u771f\u7684\u524d\u63d0\u662f directory-name \u8868\u793a\u7684\u662f\u4e00\u4e2a\u76ee\u5f55\uff08\u5e94\u8be5\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\uff09 if(IS_DIRECTORY directory-name) # \u4e3a\u771f\u7684\u524d\u63d0\u662f\u53d8\u91cf\u503c\u6216\u8005\u5b57\u7b26\u4e32\u5339\u914d regex \u6b63\u5219\u8868\u8fbe\u5f0f if(variable|string MATCHES regex) # \u4e3a\u771f\u7684\u524d\u63d0\u662f\u53d8\u91cf\u503c\u6216\u8005\u5b57\u7b26\u4e32\u4e3a\u6709\u6548\u7684\u6570\u5b57\u4e14\u6ee1\u8db3\u5c0f\u4e8e\uff08\u5927\u4e8e\u3001\u7b49\u4e8e\uff09\u7684\u6761\u4ef6 if(variable|string LESS variable|string) if(variable|string GREATER variable|string) if(variable|string EQUAL variable|string) # \u4e3a\u771f\u7684\u524d\u63d0\u662f\u53d8\u91cf\u503c\u6216\u8005\u5b57\u7b26\u4e32\u4ee5\u5b57\u5178\u5e8f\u6ee1\u8db3\u5c0f\u4e8e\uff08\u5927\u4e8e\u3001\u7b49\u4e8e\uff09\u7684\u6761\u4ef6 if(variable|string STRLESS variable|string) if(variable|string STRGREATERvariable|string) if(variable|string STREQUALvariable|string) # \u4e3a\u771f\u7684\u524d\u63d0\u662f variable \u8868\u793a\u7684\u53d8\u91cf\u88ab\u5b9a\u4e49\u4e86\u3002 if(DEFINED variable) \u5faa\u73af\u7ed3\u6784 set(VAR a b c) foreach(f ${VAR}) message(${f}) endforeach() set(VAR 5) while(${VAR} GREATER 0) message(${VAR}) math(EXPR VAR \"${VAR} - 1\") endwhile() \u51fd\u6570\u548c\u5b8f\u5b9a\u4e49 # \u5b9a\u4e49\u4e00\u4e2a\u5b8f hello macro(hello MESSAGE) message(${MESSAGE}) endmacro() # \u8c03\u7528\u5b8f hello hello(\"hello world\") # \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 hello function(hello MESSAGE) message(${MESSAGE}) endfunction() \u51fd\u6570\u548c\u5b8f\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4 return() \u8fd4\u56de\uff0c\u4f46\u662f\u51fd\u6570\u548c\u5b8f\u7684\u8fd4\u56de\u503c\u5fc5\u987b\u901a\u8fc7\u53c2\u6570\u4f20\u9012\u51fa\u53bb\u3002 cmake_minimum_required(VERSION 2.8) function(get_func RESULT) #RESULT \u7684\u503c\u4e3a\u5b9e\u53c2\u7684\u503c\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528 ${RESULT} #\u8fd9\u91cc\u4f7f\u7528 PARENT_SCOPE \u662f\u56e0\u4e3a\u51fd\u6570\u4f1a\u6784\u5efa\u4e00\u4e2a\u5c40\u90e8\u4f5c\u7528\u57df set(${RESULT} \"Hello Function\" PARENT_SCOPE) endfunction() macro(get_macro RESULT) set(${RESULT} \"Hello Macro\") endmacro() get_func(V1) # \u8f93\u51fa Hello Function message(${V1}) get_macro(V2) # \u8f93\u51fa Hello Macro message(${V2}) \u5b57\u7b26\u4e32 \u5b57\u7b26\u4e32\u53ef\u8de8\u884c\u4e14\u652f\u6301\u8f6c\u79fb\u5b57\u7b26 set(VAR \"hello world\") # \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a # ${VAR} = hello # world message(\"\\${VAR} = ${VAR}\") \u5e38\u7528\u547d\u4ee4 project project(<projectname> [languageName1 languageName2 \u2026 ] ) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u6307\u5b9a\u9879\u76ee\u7684\u540d\u79f0 \u4f7f\u7528\u8303\u4f8b\uff1aproject(Main) cmake_minimum_required cmake_minimum_required(VERSION major[.minor[.patch[.tweak]]][FATAL_ERROR]) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u6307\u5b9a\u9700\u8981\u7684 CMake \u7684\u6700\u4f4e\u7248\u672c \u4f7f\u7528\u8303\u4f8b\uff1acmake_minimum_required(VERSION 3.14) aux_source_directory aux_source_directory(<dir> <variable>) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u5c06 dir \u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6e90\u6587\u4ef6\u7684\u540d\u5b57\u4fdd\u5b58\u5728\u53d8\u91cf variable \u4e2d \u4f7f\u7528\u8303\u4f8b\uff1aaux_source_directory(. DIR_SRCS) add_executable add_executable(<name> [WIN32] [MACOSX_BUNDLE][EXCLUDE_FROM_ALL] source1 source2 \u2026 sourceN) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u6307\u5b9a\u4ece\u4e00\u7ec4\u6e90\u6587\u4ef6 source1 source2 \u2026 sourceN \u7f16\u8bd1\u51fa\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u4e14\u547d\u540d\u4e3a name \u4f7f\u7528\u8303\u4f8b\uff1aadd_executable(Main ${DIR_SRCS}) add_library add_library([STATIC | SHARED | MODULE] [EXCLUDE_FROM_ALL] source1 source2 \u2026 sourceN) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u6307\u5b9a\u4ece\u4e00\u7ec4\u6e90\u6587\u4ef6 source1 source2 \u2026 sourceN \u7f16\u8bd1\u51fa\u4e00\u4e2a\u5e93\u6587\u4ef6\u4e14\u547d\u540d\u4e3a name \u4f7f\u7528\u8303\u4f8b\uff1aadd_library(Lib ${DIR_SRCS}) add_library(native_lib shared hello.c world.c) add_dependencies add_dependencies(target-name depend-target1 depend-target2 \u2026) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u6307\u5b9a\u67d0\u4e2a\u76ee\u6807\uff08\u53ef\u6267\u884c\u6587\u4ef6\u6216\u8005\u5e93\u6587\u4ef6\uff09\u4f9d\u8d56\u4e8e\u5176\u4ed6\u7684\u76ee\u6807\u3002\u8fd9\u91cc\u7684\u76ee\u6807\u5fc5\u987b\u662f add_executable\u3001add_library\u3001add_custom_target \u547d\u4ee4\u521b\u5efa\u7684\u76ee\u6807 add_subdirectory add_subdirectory(source_dir [binary_dir] [EXCLUDE_FROM_ALL]) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u6dfb\u52a0\u4e00\u4e2a\u9700\u8981\u8fdb\u884c\u6784\u5efa\u7684\u5b50\u76ee\u5f55 \u4f7f\u7528\u8303\u4f8b\uff1aadd_subdirectory(Lib) target_link_libraries target_link_libraries(<target> [item1 [item2 [\u2026]]][[debug|optimized|general] ] \u2026) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u6307\u5b9a target \u9700\u8981\u94fe\u63a5 item1 item2 \u2026\u3002\u8fd9\u91cc target \u5fc5\u987b\u5df2\u7ecf\u88ab\u521b\u5efa\uff0c\u94fe\u63a5\u7684 item \u53ef\u4ee5\u662f\u5df2\u7ecf\u5b58\u5728\u7684 target\uff08\u4f9d\u8d56\u5173\u7cfb\u4f1a\u81ea\u52a8\u6dfb\u52a0\uff09 \u4f7f\u7528\u8303\u4f8b\uff1atarget_link_libraries(Main Lib) set set(<variable> <value> [[CACHE <type><docstring> [FORCE]] | PARENT_SCOPE]) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u8bbe\u5b9a\u53d8\u91cf variable \u7684\u503c\u4e3a value\u3002\u5982\u679c\u6307\u5b9a\u4e86 CACHE \u53d8\u91cf\u5c06\u88ab\u653e\u5165 Cache\uff08\u7f13\u5b58\uff09\u4e2d\u3002 \u4f7f\u7528\u8303\u4f8b\uff1aset(ProjectName Main) unset unset(<variable> [CACHE]) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u79fb\u9664\u53d8\u91cf variable\u3002\u5982\u679c\u6307\u5b9a\u4e86 CACHE \u53d8\u91cf\u5c06\u88ab\u4ece Cache \u4e2d\u79fb\u9664\u3002 \u4f7f\u7528\u8303\u4f8b\uff1aunset(VAR CACHE) message \u547d\u4ee4\u8bed\u6cd5\uff1amessage([STATUS|WARNING|AUTHOR_WARNING|FATAL_ERROR|SEND_ERROR] \u201cmessage todisplay\u201d\u2026) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u8f93\u51fa\u4fe1\u606f include_directories include_directories([AFTER|BEFORE] [SYSTEM] dir1 dir2 \u2026) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u8bbe\u5b9a\u76ee\u5f55\uff0c\u8fd9\u4e9b\u8bbe\u5b9a\u7684\u76ee\u5f55\u5c06\u88ab\u7f16\u8bd1\u5668\u7528\u6765\u67e5\u627e include \u7684\u6e90\u6587\u4ef6 \u4f7f\u7528\u8303\u4f8b\uff1ainclude_directories(${PROJECT_SOURCE_DIR}/lib) find_path find_path(<VAR> name1 [path1 path2 \u2026]) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u67e5\u627e\u5305\u542b\u6587\u4ef6 name1 \u7684\u8def\u5f84\uff0c\u5982\u679c\u627e\u5230\u5219\u5c06\u8def\u5f84\u4fdd\u5b58\u5728 VAR \u4e2d\uff08\u6b64\u8def\u5f84\u4e3a\u4e00\u4e2a\u7edd\u5bf9\u8def\u5f84\uff09\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u5219\u7ed3\u679c\u4e3a -NOTFOUND\u3002\u9ed8\u8ba4\u7684\u60c5\u51b5\u4e0b\uff0cVAR \u4f1a\u88ab\u4fdd\u5b58\u5728 Cache \u4e2d\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u9700\u8981\u6e05\u9664 VAR \u624d\u53ef\u4ee5\u8fdb\u884c\u4e0b\u4e00\u6b21\u67e5\u8be2\uff08\u4f7f\u7528 unset \u547d\u4ee4\uff09\u3002 \u4f7f\u7528\u8303\u4f8b\uff1a find_path(LUA_INCLUDE_PATH lua.h${LUA_INCLUDE_FIND_PATH}) if(NOT LUA_INCLUDE_PATH) message(SEND_ERROR \"Header file lua.h not found\") endif() find_library find_library(<VAR> name1 [path1 path2 \u2026]) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u67e5\u627e\u5e93\u6587\u4ef6 name1 \u7684\u8def\u5f84\uff0c\u5982\u679c\u627e\u5230\u5219\u5c06\u8def\u5f84\u4fdd\u5b58\u5728 VAR \u4e2d\uff08\u6b64\u8def\u5f84\u4e3a\u4e00\u4e2a\u7edd\u5bf9\u8def\u5f84\uff09\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u5219\u7ed3\u679c\u4e3a -NOTFOUND\u3002\u4e00\u4e2a\u7c7b\u4f3c\u7684\u547d\u4ee4 link_directories \u5df2\u7ecf\u4e0d\u592a\u5efa\u8bae\u4f7f\u7528\u4e86 add_definitions add_definitions(-DFOO -DBAR \u2026) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u6dfb\u52a0\u7f16\u8bd1\u5668\u547d\u4ee4\u884c\u6807\u5fd7\uff08\u9009\u9879\uff09\uff0c\u901a\u5e38\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u4f7f\u7528\u5176\u6765\u6dfb\u52a0\u9884\u5904\u7406\u5668\u5b9a\u4e49 \u4f7f\u7528\u8303\u4f8b\uff1aadd_definitions(-D_UNICODE -DUNICODE) execute_process execute_process(COMMAND <cmd1>[args1...]] [COMMAND <cmd2>[args2...] [...]] [WORKING_DIRECTORY<directory>] [TIMEOUT <seconds>] [RESULT_VARIABLE<variable>] [OUTPUT_VARIABLE<variable>] [ERROR_VARIABLE<variable>] [INPUT_FILE <file>] [OUTPUT_FILE <file>] [ERROR_FILE <file>] [OUTPUT_QUIET] [ERROR_QUIET] [OUTPUT_STRIP_TRAILING_WHITESPACE] [ERROR_STRIP_TRAILING_WHITESPACE]) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u6267\u884c\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5916\u90e8\u547d\u4ee4\u3002\u6bcf\u4e00\u4e2a\u547d\u4ee4\u7684\u6807\u51c6\u8f93\u51fa\u901a\u8fc7\u7ba1\u9053\u8f6c\u4e3a\u4e0b\u4e00\u4e2a\u547d\u4ee4\u7684\u6807\u51c6\u8f93\u5165\u3002WORKING_DIRECTORY \u7528\u4e8e\u6307\u5b9a\u5916\u90e8\u547d\u4ee4\u7684\u5de5\u4f5c\u76ee\u5f55\uff0cRESULT_VARIABLE \u7528\u4e8e\u6307\u5b9a\u4e00\u4e2a\u53d8\u91cf\u4fdd\u5b58\u5916\u90e8\u547d\u4ee4\u6267\u884c\u7684\u7ed3\u679c\uff0c\u8fd9\u4e2a\u7ed3\u679c\u53ef\u80fd\u662f\u6700\u540e\u4e00\u4e2a\u6267\u884c\u7684\u5916\u90e8\u547d\u4ee4\u7684\u9000\u51fa\u7801\u6216\u8005\u662f\u4e00\u4e2a\u63cf\u8ff0\u9519\u8bef\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\uff0cOUTPUT_VARIABLE \u6216\u8005 ERROR_VARIABLE \u7528\u4e8e\u6307\u5b9a\u4e00\u4e2a\u53d8\u91cf\u4fdd\u5b58\u6807\u51c6\u8f93\u51fa\u6216\u8005\u6807\u51c6\u9519\u8bef\uff0cOUTPUT_QUIET \u6216\u8005 ERROR_QUIET \u7528\u4e8e\u5ffd\u7565\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u3002 \u4f7f\u7528\u8303\u4f8b\uff1aexecute_process(COMMAND ls) file \u547d\u4ee4\u7b80\u8ff0\uff1a\u6b64\u547d\u4ee4\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u76f8\u5173\u64cd\u4f5c \u4f7f\u7528\u8303\u4f8b\uff1a \u76ee\u5f55\u7684\u904d\u5386 GLOB \u7528\u4e8e\u4ea7\u751f\u4e00\u4e2a\u6587\u4ef6\uff08\u76ee\u5f55\uff09\u8def\u5f84\u5217\u8868\u5e76\u4fdd\u5b58\u5728variable \u4e2d \u6587\u4ef6\u8def\u5f84\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u90fd\u80fd\u5339\u914dglobbing expressions\uff08\u975e\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4f46\u662f\u7c7b\u4f3c\uff09 \u5982\u679c\u6307\u5b9a\u4e86 RELATIVE \u8def\u5f84\uff0c\u90a3\u4e48\u8fd4\u56de\u7684\u6587\u4ef6\u8def\u5f84\u5217\u8868\u4e2d\u7684\u8def\u5f84\u4e3a\u76f8\u5bf9\u4e8e RELATIVE \u7684\u8def\u5f84 file(GLOB variable [RELATIVE path][globbing expressions]...) \u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u7684\u6587\u4ef6\uff08\u76ee\u5f55\uff09\u7684\u8def\u5f84\u5e76\u4fdd\u5b58\u5230 ALL_FILE_PATH \u53d8\u91cf\u4e2d file(GLOB ALL_FILE_PATH ./*) \u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 .h \u6587\u4ef6\u7684\u6587\u4ef6\u540d\u5e76\u4fdd\u5b58\u5230ALL_H_FILE \u53d8\u91cf\u4e2d \u8fd9\u91cc\u7684\u53d8\u91cfCMAKE_CURRENT_LIST_DIR \u8868\u793a\u6b63\u5728\u5904\u7406\u7684 CMakeLists.txt \u6587\u4ef6\u7684\u6240\u5728\u7684\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84\uff082.8.3 \u4ee5\u53ca\u4ee5\u540e\u7248\u672c\u624d\u652f\u6301\uff09 file(GLOB ALL_H_FILE RELATIVE${CMAKE_CURRENT_LIST_DIR} ${CMAKE_CURRENT_LIST_DIR}/*.h) Cmake\u914d\u5408AndroidStudio build.gradle android { compileSdkVersion 28 defaultConfig { externalNativeBuild { // \u4e3b\u8981\u662f\u914d\u7f6e\u4e86cmake\u7684\u547d\u4ee4\u53c2\u6570 cmake { cppFlags \"\" // \u8bbe\u7f6e\u7f16\u8bd1c/c++ \u6e90\u6587\u4ef6\u7684cpu\u7c7b\u578b // \u5982\u679c\u4e0d\u8bbe\u7f6e\uff0c\u8fde\u63a5\u4e0d\u540c\u7684\u8bbe\u5907\uff0cgralde\u4f1a\u81ea\u52a8\u6839\u636e\u8fde\u63a5\u7684\u8bbe\u5907\uff0c\u5982armeabi-v7a\u67b6\u6784\u7684\u624b\u673a\uff0c\u5219\u7f16\u8bd1\u51faarmeabi-v7a\uff0c\u5982\u6a21\u62df\u5668\uff0c\u5219\u7f16\u8bd1\u51fax86\u3002 // \u7531\u4e8e\u8003\u8651\u7f16\u8bd1\u51fa\u6765\u540e\u5305\u7684\u5927\u5c0f\uff0c\u4e00\u822c\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u90fd\u53ea\u662f\u7f16\u8bd1\u517c\u5bb9\u6027\u6700\u591a\u7684armeabi-v7a\u67b6\u6784 abiFilters 'armeabi-v7a' } } } externalNativeBuild { // \u4e3b\u8981\u5b9a\u4e49\u4e86CMake\u7684\u6784\u5efa\u811a\u672cCMakeLists.txt\u7684\u8def\u5f84 cmake { // \u5f53\u524d\u7684CMakeLists.txt\u4e0ebuild.gradle\u5728\u540c\u4e00\u4e2a\u76ee\u5f55\u4e0b // CMakeLists.txt\u4e5f\u53ef\u4ee5\u5728\u5176\u4ed6\u8def\u5f84\u4e0b\uff0c\u6bd4\u5982\u53ef\u4ee5\u5728cpp\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2aCMakeList.txt\u914d\u7f6ecpp\u76ee\u5f55\u4e0b\u7684\u6e90\u6587\u4ef6 path \"CMakeLists.txt\" } } } CMakeList.txt # \u8bbe\u7f6ecmake\u6700\u4f4e\u652f\u6301\u7248\u672c cmake_minimum_required(VERSION 3.4.1) # \u7f16\u8bd1library\u5e93 add_library( # \u8bbe\u7f6e\u7f16\u8bd1\u540e\u7684library\u540d\u79f0 native-lib # \u8bbe\u7f6elibrary\u6a21\u5f0f\uff0cSTATIC\u4e3a\u9759\u6001\u5e93\uff0c\u5982\u679c\u60f3\u7f16\u8bd1\u4e3a\u52a8\u6001\u5e93\uff0c\u5219\u4fee\u6539\u4e3aSHARED STATIC # \u8bbe\u7f6e\u7f16\u8bd1\u4f7f\u7528\u5230\u7684\u6e90\u4ee3\u7801\uff0c\u5982\u679c\u6dfb\u52a0\u4e86\u6e90\u4ee3\u7801\uff0c\u90fd\u9700\u8981\u4fee\u6539\u6b64\u5904\u6dfb\u52a0\u6e90\u4ee3\u7801\u7684\u8def\u5f84 src/main/cpp/native-lib.cpp ) # \u67e5\u627elibrary\uff0c\u56e0\u4e3aNDK\u4e2d\u5df2\u7ecf\u6709\u4e00\u90e8\u5206\u9884\u6784\u5efa\u5e93\uff0c\u5df2\u7ecf\u88ab\u914d\u7f6e\u4e3acmake\u641c\u7d22\u8def\u5f84\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\uff0c\u53ef\u4ee5\u76f4\u63a5\u6dfb\u52a0\u5e93\u7684\u540d\u79f0\u3002 find_library( # \u6b64\u5904\u4e3a\u67e5\u627e\u540d\u79f0\u4e3alog\u7684\u5e93\uff0c\u5c06\u7edd\u5bf9\u8def\u5f84\u8d4b\u503c\u5230\u53d8\u91cflog-lib log-lib log ) # \u94fe\u63a5library target_link_libraries( # \u94fe\u63a5\u81ea\u5df1\u7f16\u5199\u7684native-lib\u5e93\u548c\u4e0a\u9762\u67e5\u627e\u5230\u7684lib\u5e93 # \u4f4d\u7f6e\u4e0d\u80fd\u66f4\u6539\uff0cnative-lib\u4e3a\u76ee\u6807\u7684\u5e93\uff0c\u5fc5\u987b\u653e\u5728\u524d\u9762 native-lib ${log-lib} ) # \u8fd9\u6837\u591a\u7684\u8bdd\uff0c\u5199\u8fdb\u53bb\u5c31\u6bd4\u8f83\u9ebb\u70e6\uff0c\u5bfc\u5165\u53ea\u9700\u8981\u5199\u6e90\u6587\u4ef6\uff0c.h\u53ef\u4ee5\u4e0d\u5199 add_executable(Demo2 main.c hello.c) # \u67e5\u627e\u5f53\u524d\u76ee\u5f55\u6240\u6709\u6e90\u6587\u4ef6 \u5e76\u5c06\u540d\u79f0\u4fdd\u5b58\u5230 DIR_SRCS \u53d8\u91cf # \u6ce8\u610f\u8fd9\u6837\u4e0d\u80fd\u67e5\u627e\u5b50\u76ee\u5f55\uff0c\u4e5f\u4e0d\u4f1a\u81ea\u52a8\u5f80\u5b50\u76ee\u5f55\u627e aux_source_directory(. DIR_SRCS) # \u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5982\u679c\u901a\u914d\u7b26\u7684\u65b9\u5f0f\uff0c\u5f15\u5165\u6240\u6709.c\u6587\u4ef6\uff0c\u540c\u6837\u4fdd\u5b58\u5230 DIR_SRCS\u53d8\u91cf\u4e2d file(GLOB DIR_SRCS *.c) # $() \u4e3a\u5f15\u7528\u53d8\u91cfDIR_SRCS\u7684\u503c add_executable(Demo2 ${DIR_SRCS}) # \u5982\u679c\u4e0a\u9762\u4e0d\u9884\u5148\u4f7f\u7528find_library\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 target_link_libraries( native-lib log)","title":"Cmake\u5b66\u4e60\u7b14\u8bb0"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#cmake","text":"","title":"Cmake\u5b66\u4e60\u7b14\u8bb0"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_1","text":"\u5b98\u7f51 CMake \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\uff0c\u5f00\u6e90\u7684\u6784\u5efa\u7cfb\u7edf\uff08BuildSystem\uff09\u3002CMake \u53ef\u4ee5\u901a\u8fc7 CMakeLists.txt \u6587\u4ef6\u6765\u4ea7\u751f\u7279\u5b9a\u5e73\u53f0\u7684\u6807\u51c6\u7684\u6784\u5efa\u6587\u4ef6\uff0c\u4f8b\u5982\uff1a\u4e3a Unix \u5e73\u53f0\u751f\u6210makefiles\u6587\u4ef6\uff08\u4f7f\u7528GCC\u7f16\u8bd1\uff09\uff0c\u4e3a Windows MSVC \u751f\u6210 projects/workspaces\uff08\u4f7f\u7528VS IDE\u7f16\u8bd1\uff09\u6216Makefile\u6587\u4ef6\uff08\u4f7f\u7528nmake\u7f16\u8bd1\uff09","title":"\u7b80\u4ecb"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_2","text":"","title":"\u57fa\u672c\u8bed\u6cd5"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_3","text":"cmake\u4e2d\u4ee5 # \u5f00\u5934\u4e3a\u6ce8\u91ca","title":"\u6ce8\u91ca"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#cmake_1","text":"\u547d\u4ee4\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff08\u53c2\u6570\u4f1a\u533a\u5206\u5927\u5c0f\u5199\uff09\uff0c\u547d\u4ee4\u7531\u547d\u4ee4\u3001\u53c2\u6570\u5217\u8868\u7ec4\u6210\uff0c\u53c2\u6570\u4e4b\u95f4\u4f7f\u7528\u7a7a\u683c\u8fdb\u884c\u5206\u9694\u3002 \u4f7f\u7528\u4e00\u5bf9\u53cc\u5f15\u53f7\u5305\u62ec\u7684\u5b57\u7b26\u4e32\u8ba4\u4e3a\u662f\u4e00\u4e2a\u53c2\u6570\u3002 \u547d\u4ee4\u53ef\u4ee5\u662f\u4e00\u4e2a\u5185\u7f6e\u547d\u4ee4\uff08\u4f8b\u5982\uff1aproject\uff0cadd_executable\u7b49\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u5b8f\uff08macro\uff09\u6216\u8005\u51fd\u6570\uff08function\uff09\u3002","title":"cmake\u547d\u4ee4"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_4","text":"CMake\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u662f\u5b57\u7b26\u4e32\uff0c\u4e00\u7ec4\u5b57\u7b26\u4e32\u5728\u4e00\u8d77\u79f0\u4e3a\u5217\u8868\uff08list\uff09 set \u547d\u4ee4\u8bbe\u7f6e\u4e00\u4e2a\u53d8\u91cf\uff0c ${var} \u53d6\u51fa\u53d8\u91cf\u7684\u503c\u3002 \u53d8\u91cf\u540d\u533a\u5206\u5927\u5c0f\u5199 \u5728\u5b57\u7b26\u4e32\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528 ${VariableName} \u6765\u8bbf\u95ee\u53d8\u91cf\u7684\u503c \u4f7f\u7528\u8bed\u6cd5 $ENV{VariableName} \u6765\u8bbf\u95ee\u73af\u5883\u53d8\u91cf\u7684\u503c \uff08ENV{VariableName} \u5219\u8868\u793a\u73af\u5883\u53d8\u91cf\u672c\u8eab\uff09","title":"\u53d8\u91cf"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_5","text":"if(expression) #... elseif(expression2) #... else() #... endif() \u8868\u8fbe\u5f0f\u4e2d\u53ef\u4ee5\u5305\u542b\u64cd\u4f5c\u7b26\uff0c\u64cd\u4f5c\u7b26\u5305\u62ec\uff1a \u4e00\u5143\u64cd\u4f5c\u7b26\uff0c\u4f8b\u5982\uff1aEXISTS\u3001COMMAND\u3001DEFINED \u7b49 \u4e8c\u5143\u64cd\u4f5c\u7b26\uff0c\u4f8b\u5982\uff1aEQUAL\u3001LESS\u3001GREATER\u3001STRLESS\u3001STRGREATER \u7b49 NOT\uff08\u975e\u64cd\u4f5c\u7b26\uff09 AND\uff08\u4e0e\u64cd\u4f5c\u7b26\uff09\u3001OR\uff08\u6216\u64cd\u4f5c\u7b26\uff09 \u64cd\u4f5c\u7b26\u4f18\u5148\u7ea7\uff1a\u4e00\u5143\u64cd\u4f5c\u7b26 > \u4e8c\u5143\u64cd\u4f5c\u7b26 > NOT > AND\u3001OR \u5e38\u7528\u64cd\u4f5c\u7b26\u4ecb\u7ecd\uff1a # \u4e3a\u771f\u7684\u524d\u63d0\u662f expression \u4e3a\u5047 if(NOT expression) # \u4e3a\u771f\u7684\u524d\u63d0\u662f\u5b58\u5728 command-name \u547d\u4ee4\u3001\u5b8f\u6216\u51fd\u6570\u4e14\u80fd\u591f\u88ab\u8c03\u7528 if(COMMAND command-name) # \u4e3a\u771f\u7684\u524d\u63d0\u662f\u5b58\u5728 name \u7684\u6587\u4ef6\u6216\u8005\u76ee\u5f55\uff08\u5e94\u8be5\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\uff09 if(EXISTS name) # \u4e3a\u771f\u7684\u524d\u63d0\u662f file1 \u6bd4 file2 \u65b0\u6216\u8005 file1\u3001file2 \u4e2d\u6709\u4e00\u4e2a\u6587\u4ef6\u4e0d\u5b58\u5728\uff08\u5e94\u8be5\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\uff09 if(file1 IS_NEWER_THAN file2) # \u4e3a\u771f\u7684\u524d\u63d0\u662f directory-name \u8868\u793a\u7684\u662f\u4e00\u4e2a\u76ee\u5f55\uff08\u5e94\u8be5\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\uff09 if(IS_DIRECTORY directory-name) # \u4e3a\u771f\u7684\u524d\u63d0\u662f\u53d8\u91cf\u503c\u6216\u8005\u5b57\u7b26\u4e32\u5339\u914d regex \u6b63\u5219\u8868\u8fbe\u5f0f if(variable|string MATCHES regex) # \u4e3a\u771f\u7684\u524d\u63d0\u662f\u53d8\u91cf\u503c\u6216\u8005\u5b57\u7b26\u4e32\u4e3a\u6709\u6548\u7684\u6570\u5b57\u4e14\u6ee1\u8db3\u5c0f\u4e8e\uff08\u5927\u4e8e\u3001\u7b49\u4e8e\uff09\u7684\u6761\u4ef6 if(variable|string LESS variable|string) if(variable|string GREATER variable|string) if(variable|string EQUAL variable|string) # \u4e3a\u771f\u7684\u524d\u63d0\u662f\u53d8\u91cf\u503c\u6216\u8005\u5b57\u7b26\u4e32\u4ee5\u5b57\u5178\u5e8f\u6ee1\u8db3\u5c0f\u4e8e\uff08\u5927\u4e8e\u3001\u7b49\u4e8e\uff09\u7684\u6761\u4ef6 if(variable|string STRLESS variable|string) if(variable|string STRGREATERvariable|string) if(variable|string STREQUALvariable|string) # \u4e3a\u771f\u7684\u524d\u63d0\u662f variable \u8868\u793a\u7684\u53d8\u91cf\u88ab\u5b9a\u4e49\u4e86\u3002 if(DEFINED variable)","title":"\u6761\u4ef6\u63a7\u5236"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_6","text":"set(VAR a b c) foreach(f ${VAR}) message(${f}) endforeach() set(VAR 5) while(${VAR} GREATER 0) message(${VAR}) math(EXPR VAR \"${VAR} - 1\") endwhile()","title":"\u5faa\u73af\u7ed3\u6784"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_7","text":"# \u5b9a\u4e49\u4e00\u4e2a\u5b8f hello macro(hello MESSAGE) message(${MESSAGE}) endmacro() # \u8c03\u7528\u5b8f hello hello(\"hello world\") # \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 hello function(hello MESSAGE) message(${MESSAGE}) endfunction() \u51fd\u6570\u548c\u5b8f\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4 return() \u8fd4\u56de\uff0c\u4f46\u662f\u51fd\u6570\u548c\u5b8f\u7684\u8fd4\u56de\u503c\u5fc5\u987b\u901a\u8fc7\u53c2\u6570\u4f20\u9012\u51fa\u53bb\u3002 cmake_minimum_required(VERSION 2.8) function(get_func RESULT) #RESULT \u7684\u503c\u4e3a\u5b9e\u53c2\u7684\u503c\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528 ${RESULT} #\u8fd9\u91cc\u4f7f\u7528 PARENT_SCOPE \u662f\u56e0\u4e3a\u51fd\u6570\u4f1a\u6784\u5efa\u4e00\u4e2a\u5c40\u90e8\u4f5c\u7528\u57df set(${RESULT} \"Hello Function\" PARENT_SCOPE) endfunction() macro(get_macro RESULT) set(${RESULT} \"Hello Macro\") endmacro() get_func(V1) # \u8f93\u51fa Hello Function message(${V1}) get_macro(V2) # \u8f93\u51fa Hello Macro message(${V2})","title":"\u51fd\u6570\u548c\u5b8f\u5b9a\u4e49"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_8","text":"\u5b57\u7b26\u4e32\u53ef\u8de8\u884c\u4e14\u652f\u6301\u8f6c\u79fb\u5b57\u7b26 set(VAR \"hello world\") # \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a # ${VAR} = hello # world message(\"\\${VAR} = ${VAR}\")","title":"\u5b57\u7b26\u4e32"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_9","text":"","title":"\u5e38\u7528\u547d\u4ee4"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#project","text":"project(<projectname> [languageName1 languageName2 \u2026 ] ) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u6307\u5b9a\u9879\u76ee\u7684\u540d\u79f0 \u4f7f\u7528\u8303\u4f8b\uff1aproject(Main)","title":"project"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#cmake_minimum_required","text":"cmake_minimum_required(VERSION major[.minor[.patch[.tweak]]][FATAL_ERROR]) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u6307\u5b9a\u9700\u8981\u7684 CMake \u7684\u6700\u4f4e\u7248\u672c \u4f7f\u7528\u8303\u4f8b\uff1acmake_minimum_required(VERSION 3.14)","title":"cmake_minimum_required"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#aux_source_directory","text":"aux_source_directory(<dir> <variable>) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u5c06 dir \u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6e90\u6587\u4ef6\u7684\u540d\u5b57\u4fdd\u5b58\u5728\u53d8\u91cf variable \u4e2d \u4f7f\u7528\u8303\u4f8b\uff1aaux_source_directory(. DIR_SRCS)","title":"aux_source_directory"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#add_executable","text":"add_executable(<name> [WIN32] [MACOSX_BUNDLE][EXCLUDE_FROM_ALL] source1 source2 \u2026 sourceN) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u6307\u5b9a\u4ece\u4e00\u7ec4\u6e90\u6587\u4ef6 source1 source2 \u2026 sourceN \u7f16\u8bd1\u51fa\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u4e14\u547d\u540d\u4e3a name \u4f7f\u7528\u8303\u4f8b\uff1aadd_executable(Main ${DIR_SRCS})","title":"add_executable"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#add_library","text":"add_library([STATIC | SHARED | MODULE] [EXCLUDE_FROM_ALL] source1 source2 \u2026 sourceN) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u6307\u5b9a\u4ece\u4e00\u7ec4\u6e90\u6587\u4ef6 source1 source2 \u2026 sourceN \u7f16\u8bd1\u51fa\u4e00\u4e2a\u5e93\u6587\u4ef6\u4e14\u547d\u540d\u4e3a name \u4f7f\u7528\u8303\u4f8b\uff1aadd_library(Lib ${DIR_SRCS}) add_library(native_lib shared hello.c world.c)","title":"add_library"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#add_dependencies","text":"add_dependencies(target-name depend-target1 depend-target2 \u2026) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u6307\u5b9a\u67d0\u4e2a\u76ee\u6807\uff08\u53ef\u6267\u884c\u6587\u4ef6\u6216\u8005\u5e93\u6587\u4ef6\uff09\u4f9d\u8d56\u4e8e\u5176\u4ed6\u7684\u76ee\u6807\u3002\u8fd9\u91cc\u7684\u76ee\u6807\u5fc5\u987b\u662f add_executable\u3001add_library\u3001add_custom_target \u547d\u4ee4\u521b\u5efa\u7684\u76ee\u6807","title":"add_dependencies"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#add_subdirectory","text":"add_subdirectory(source_dir [binary_dir] [EXCLUDE_FROM_ALL]) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u6dfb\u52a0\u4e00\u4e2a\u9700\u8981\u8fdb\u884c\u6784\u5efa\u7684\u5b50\u76ee\u5f55 \u4f7f\u7528\u8303\u4f8b\uff1aadd_subdirectory(Lib)","title":"add_subdirectory"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#target_link_libraries","text":"target_link_libraries(<target> [item1 [item2 [\u2026]]][[debug|optimized|general] ] \u2026) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u6307\u5b9a target \u9700\u8981\u94fe\u63a5 item1 item2 \u2026\u3002\u8fd9\u91cc target \u5fc5\u987b\u5df2\u7ecf\u88ab\u521b\u5efa\uff0c\u94fe\u63a5\u7684 item \u53ef\u4ee5\u662f\u5df2\u7ecf\u5b58\u5728\u7684 target\uff08\u4f9d\u8d56\u5173\u7cfb\u4f1a\u81ea\u52a8\u6dfb\u52a0\uff09 \u4f7f\u7528\u8303\u4f8b\uff1atarget_link_libraries(Main Lib)","title":"target_link_libraries"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#set","text":"set(<variable> <value> [[CACHE <type><docstring> [FORCE]] | PARENT_SCOPE]) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u8bbe\u5b9a\u53d8\u91cf variable \u7684\u503c\u4e3a value\u3002\u5982\u679c\u6307\u5b9a\u4e86 CACHE \u53d8\u91cf\u5c06\u88ab\u653e\u5165 Cache\uff08\u7f13\u5b58\uff09\u4e2d\u3002 \u4f7f\u7528\u8303\u4f8b\uff1aset(ProjectName Main)","title":"set"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#unset","text":"unset(<variable> [CACHE]) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u79fb\u9664\u53d8\u91cf variable\u3002\u5982\u679c\u6307\u5b9a\u4e86 CACHE \u53d8\u91cf\u5c06\u88ab\u4ece Cache \u4e2d\u79fb\u9664\u3002 \u4f7f\u7528\u8303\u4f8b\uff1aunset(VAR CACHE)","title":"unset"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#message","text":"\u547d\u4ee4\u8bed\u6cd5\uff1amessage([STATUS|WARNING|AUTHOR_WARNING|FATAL_ERROR|SEND_ERROR] \u201cmessage todisplay\u201d\u2026) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u8f93\u51fa\u4fe1\u606f","title":"message"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#include_directories","text":"include_directories([AFTER|BEFORE] [SYSTEM] dir1 dir2 \u2026) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u8bbe\u5b9a\u76ee\u5f55\uff0c\u8fd9\u4e9b\u8bbe\u5b9a\u7684\u76ee\u5f55\u5c06\u88ab\u7f16\u8bd1\u5668\u7528\u6765\u67e5\u627e include \u7684\u6e90\u6587\u4ef6 \u4f7f\u7528\u8303\u4f8b\uff1ainclude_directories(${PROJECT_SOURCE_DIR}/lib)","title":"include_directories"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#find_path","text":"find_path(<VAR> name1 [path1 path2 \u2026]) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u67e5\u627e\u5305\u542b\u6587\u4ef6 name1 \u7684\u8def\u5f84\uff0c\u5982\u679c\u627e\u5230\u5219\u5c06\u8def\u5f84\u4fdd\u5b58\u5728 VAR \u4e2d\uff08\u6b64\u8def\u5f84\u4e3a\u4e00\u4e2a\u7edd\u5bf9\u8def\u5f84\uff09\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u5219\u7ed3\u679c\u4e3a -NOTFOUND\u3002\u9ed8\u8ba4\u7684\u60c5\u51b5\u4e0b\uff0cVAR \u4f1a\u88ab\u4fdd\u5b58\u5728 Cache \u4e2d\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u9700\u8981\u6e05\u9664 VAR \u624d\u53ef\u4ee5\u8fdb\u884c\u4e0b\u4e00\u6b21\u67e5\u8be2\uff08\u4f7f\u7528 unset \u547d\u4ee4\uff09\u3002 \u4f7f\u7528\u8303\u4f8b\uff1a find_path(LUA_INCLUDE_PATH lua.h${LUA_INCLUDE_FIND_PATH}) if(NOT LUA_INCLUDE_PATH) message(SEND_ERROR \"Header file lua.h not found\") endif()","title":"find_path"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#find_library","text":"find_library(<VAR> name1 [path1 path2 \u2026]) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u67e5\u627e\u5e93\u6587\u4ef6 name1 \u7684\u8def\u5f84\uff0c\u5982\u679c\u627e\u5230\u5219\u5c06\u8def\u5f84\u4fdd\u5b58\u5728 VAR \u4e2d\uff08\u6b64\u8def\u5f84\u4e3a\u4e00\u4e2a\u7edd\u5bf9\u8def\u5f84\uff09\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u5219\u7ed3\u679c\u4e3a -NOTFOUND\u3002\u4e00\u4e2a\u7c7b\u4f3c\u7684\u547d\u4ee4 link_directories \u5df2\u7ecf\u4e0d\u592a\u5efa\u8bae\u4f7f\u7528\u4e86","title":"find_library"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#add_definitions","text":"add_definitions(-DFOO -DBAR \u2026) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u6dfb\u52a0\u7f16\u8bd1\u5668\u547d\u4ee4\u884c\u6807\u5fd7\uff08\u9009\u9879\uff09\uff0c\u901a\u5e38\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u4f7f\u7528\u5176\u6765\u6dfb\u52a0\u9884\u5904\u7406\u5668\u5b9a\u4e49 \u4f7f\u7528\u8303\u4f8b\uff1aadd_definitions(-D_UNICODE -DUNICODE)","title":"add_definitions"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#execute_process","text":"execute_process(COMMAND <cmd1>[args1...]] [COMMAND <cmd2>[args2...] [...]] [WORKING_DIRECTORY<directory>] [TIMEOUT <seconds>] [RESULT_VARIABLE<variable>] [OUTPUT_VARIABLE<variable>] [ERROR_VARIABLE<variable>] [INPUT_FILE <file>] [OUTPUT_FILE <file>] [ERROR_FILE <file>] [OUTPUT_QUIET] [ERROR_QUIET] [OUTPUT_STRIP_TRAILING_WHITESPACE] [ERROR_STRIP_TRAILING_WHITESPACE]) \u547d\u4ee4\u7b80\u8ff0\uff1a\u7528\u4e8e\u6267\u884c\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5916\u90e8\u547d\u4ee4\u3002\u6bcf\u4e00\u4e2a\u547d\u4ee4\u7684\u6807\u51c6\u8f93\u51fa\u901a\u8fc7\u7ba1\u9053\u8f6c\u4e3a\u4e0b\u4e00\u4e2a\u547d\u4ee4\u7684\u6807\u51c6\u8f93\u5165\u3002WORKING_DIRECTORY \u7528\u4e8e\u6307\u5b9a\u5916\u90e8\u547d\u4ee4\u7684\u5de5\u4f5c\u76ee\u5f55\uff0cRESULT_VARIABLE \u7528\u4e8e\u6307\u5b9a\u4e00\u4e2a\u53d8\u91cf\u4fdd\u5b58\u5916\u90e8\u547d\u4ee4\u6267\u884c\u7684\u7ed3\u679c\uff0c\u8fd9\u4e2a\u7ed3\u679c\u53ef\u80fd\u662f\u6700\u540e\u4e00\u4e2a\u6267\u884c\u7684\u5916\u90e8\u547d\u4ee4\u7684\u9000\u51fa\u7801\u6216\u8005\u662f\u4e00\u4e2a\u63cf\u8ff0\u9519\u8bef\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\uff0cOUTPUT_VARIABLE \u6216\u8005 ERROR_VARIABLE \u7528\u4e8e\u6307\u5b9a\u4e00\u4e2a\u53d8\u91cf\u4fdd\u5b58\u6807\u51c6\u8f93\u51fa\u6216\u8005\u6807\u51c6\u9519\u8bef\uff0cOUTPUT_QUIET \u6216\u8005 ERROR_QUIET \u7528\u4e8e\u5ffd\u7565\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u3002 \u4f7f\u7528\u8303\u4f8b\uff1aexecute_process(COMMAND ls)","title":"execute_process"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#file","text":"\u547d\u4ee4\u7b80\u8ff0\uff1a\u6b64\u547d\u4ee4\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u76f8\u5173\u64cd\u4f5c \u4f7f\u7528\u8303\u4f8b\uff1a \u76ee\u5f55\u7684\u904d\u5386 GLOB \u7528\u4e8e\u4ea7\u751f\u4e00\u4e2a\u6587\u4ef6\uff08\u76ee\u5f55\uff09\u8def\u5f84\u5217\u8868\u5e76\u4fdd\u5b58\u5728variable \u4e2d \u6587\u4ef6\u8def\u5f84\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u90fd\u80fd\u5339\u914dglobbing expressions\uff08\u975e\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4f46\u662f\u7c7b\u4f3c\uff09 \u5982\u679c\u6307\u5b9a\u4e86 RELATIVE \u8def\u5f84\uff0c\u90a3\u4e48\u8fd4\u56de\u7684\u6587\u4ef6\u8def\u5f84\u5217\u8868\u4e2d\u7684\u8def\u5f84\u4e3a\u76f8\u5bf9\u4e8e RELATIVE \u7684\u8def\u5f84 file(GLOB variable [RELATIVE path][globbing expressions]...) \u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u7684\u6587\u4ef6\uff08\u76ee\u5f55\uff09\u7684\u8def\u5f84\u5e76\u4fdd\u5b58\u5230 ALL_FILE_PATH \u53d8\u91cf\u4e2d file(GLOB ALL_FILE_PATH ./*) \u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 .h \u6587\u4ef6\u7684\u6587\u4ef6\u540d\u5e76\u4fdd\u5b58\u5230ALL_H_FILE \u53d8\u91cf\u4e2d \u8fd9\u91cc\u7684\u53d8\u91cfCMAKE_CURRENT_LIST_DIR \u8868\u793a\u6b63\u5728\u5904\u7406\u7684 CMakeLists.txt \u6587\u4ef6\u7684\u6240\u5728\u7684\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84\uff082.8.3 \u4ee5\u53ca\u4ee5\u540e\u7248\u672c\u624d\u652f\u6301\uff09 file(GLOB ALL_H_FILE RELATIVE${CMAKE_CURRENT_LIST_DIR} ${CMAKE_CURRENT_LIST_DIR}/*.h)","title":"file"},{"location":"android/NDK/Cmake%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#cmakeandroidstudio","text":"build.gradle android { compileSdkVersion 28 defaultConfig { externalNativeBuild { // \u4e3b\u8981\u662f\u914d\u7f6e\u4e86cmake\u7684\u547d\u4ee4\u53c2\u6570 cmake { cppFlags \"\" // \u8bbe\u7f6e\u7f16\u8bd1c/c++ \u6e90\u6587\u4ef6\u7684cpu\u7c7b\u578b // \u5982\u679c\u4e0d\u8bbe\u7f6e\uff0c\u8fde\u63a5\u4e0d\u540c\u7684\u8bbe\u5907\uff0cgralde\u4f1a\u81ea\u52a8\u6839\u636e\u8fde\u63a5\u7684\u8bbe\u5907\uff0c\u5982armeabi-v7a\u67b6\u6784\u7684\u624b\u673a\uff0c\u5219\u7f16\u8bd1\u51faarmeabi-v7a\uff0c\u5982\u6a21\u62df\u5668\uff0c\u5219\u7f16\u8bd1\u51fax86\u3002 // \u7531\u4e8e\u8003\u8651\u7f16\u8bd1\u51fa\u6765\u540e\u5305\u7684\u5927\u5c0f\uff0c\u4e00\u822c\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u90fd\u53ea\u662f\u7f16\u8bd1\u517c\u5bb9\u6027\u6700\u591a\u7684armeabi-v7a\u67b6\u6784 abiFilters 'armeabi-v7a' } } } externalNativeBuild { // \u4e3b\u8981\u5b9a\u4e49\u4e86CMake\u7684\u6784\u5efa\u811a\u672cCMakeLists.txt\u7684\u8def\u5f84 cmake { // \u5f53\u524d\u7684CMakeLists.txt\u4e0ebuild.gradle\u5728\u540c\u4e00\u4e2a\u76ee\u5f55\u4e0b // CMakeLists.txt\u4e5f\u53ef\u4ee5\u5728\u5176\u4ed6\u8def\u5f84\u4e0b\uff0c\u6bd4\u5982\u53ef\u4ee5\u5728cpp\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2aCMakeList.txt\u914d\u7f6ecpp\u76ee\u5f55\u4e0b\u7684\u6e90\u6587\u4ef6 path \"CMakeLists.txt\" } } } CMakeList.txt # \u8bbe\u7f6ecmake\u6700\u4f4e\u652f\u6301\u7248\u672c cmake_minimum_required(VERSION 3.4.1) # \u7f16\u8bd1library\u5e93 add_library( # \u8bbe\u7f6e\u7f16\u8bd1\u540e\u7684library\u540d\u79f0 native-lib # \u8bbe\u7f6elibrary\u6a21\u5f0f\uff0cSTATIC\u4e3a\u9759\u6001\u5e93\uff0c\u5982\u679c\u60f3\u7f16\u8bd1\u4e3a\u52a8\u6001\u5e93\uff0c\u5219\u4fee\u6539\u4e3aSHARED STATIC # \u8bbe\u7f6e\u7f16\u8bd1\u4f7f\u7528\u5230\u7684\u6e90\u4ee3\u7801\uff0c\u5982\u679c\u6dfb\u52a0\u4e86\u6e90\u4ee3\u7801\uff0c\u90fd\u9700\u8981\u4fee\u6539\u6b64\u5904\u6dfb\u52a0\u6e90\u4ee3\u7801\u7684\u8def\u5f84 src/main/cpp/native-lib.cpp ) # \u67e5\u627elibrary\uff0c\u56e0\u4e3aNDK\u4e2d\u5df2\u7ecf\u6709\u4e00\u90e8\u5206\u9884\u6784\u5efa\u5e93\uff0c\u5df2\u7ecf\u88ab\u914d\u7f6e\u4e3acmake\u641c\u7d22\u8def\u5f84\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\uff0c\u53ef\u4ee5\u76f4\u63a5\u6dfb\u52a0\u5e93\u7684\u540d\u79f0\u3002 find_library( # \u6b64\u5904\u4e3a\u67e5\u627e\u540d\u79f0\u4e3alog\u7684\u5e93\uff0c\u5c06\u7edd\u5bf9\u8def\u5f84\u8d4b\u503c\u5230\u53d8\u91cflog-lib log-lib log ) # \u94fe\u63a5library target_link_libraries( # \u94fe\u63a5\u81ea\u5df1\u7f16\u5199\u7684native-lib\u5e93\u548c\u4e0a\u9762\u67e5\u627e\u5230\u7684lib\u5e93 # \u4f4d\u7f6e\u4e0d\u80fd\u66f4\u6539\uff0cnative-lib\u4e3a\u76ee\u6807\u7684\u5e93\uff0c\u5fc5\u987b\u653e\u5728\u524d\u9762 native-lib ${log-lib} ) # \u8fd9\u6837\u591a\u7684\u8bdd\uff0c\u5199\u8fdb\u53bb\u5c31\u6bd4\u8f83\u9ebb\u70e6\uff0c\u5bfc\u5165\u53ea\u9700\u8981\u5199\u6e90\u6587\u4ef6\uff0c.h\u53ef\u4ee5\u4e0d\u5199 add_executable(Demo2 main.c hello.c) # \u67e5\u627e\u5f53\u524d\u76ee\u5f55\u6240\u6709\u6e90\u6587\u4ef6 \u5e76\u5c06\u540d\u79f0\u4fdd\u5b58\u5230 DIR_SRCS \u53d8\u91cf # \u6ce8\u610f\u8fd9\u6837\u4e0d\u80fd\u67e5\u627e\u5b50\u76ee\u5f55\uff0c\u4e5f\u4e0d\u4f1a\u81ea\u52a8\u5f80\u5b50\u76ee\u5f55\u627e aux_source_directory(. DIR_SRCS) # \u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5982\u679c\u901a\u914d\u7b26\u7684\u65b9\u5f0f\uff0c\u5f15\u5165\u6240\u6709.c\u6587\u4ef6\uff0c\u540c\u6837\u4fdd\u5b58\u5230 DIR_SRCS\u53d8\u91cf\u4e2d file(GLOB DIR_SRCS *.c) # $() \u4e3a\u5f15\u7528\u53d8\u91cfDIR_SRCS\u7684\u503c add_executable(Demo2 ${DIR_SRCS}) # \u5982\u679c\u4e0a\u9762\u4e0d\u9884\u5148\u4f7f\u7528find_library\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 target_link_libraries( native-lib log)","title":"Cmake\u914d\u5408AndroidStudio"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","text":"JNI\u5b66\u4e60\u7b14\u8bb0 \u7c7b\u578b\u5bf9\u7167\u8868 \u57fa\u7840\u7c7b\u578b Java\u7c7b\u578b JNI\u7c7b\u578b C/C++\u7c7b\u578b \u5927\u5c0f Boolean jboolean unsigned char \u65e0\u7b26\u53f78\u4f4d Byte jbyte char \u6709\u7b26\u53f78\u4f4d Char jchar unsigned char \u65e0\u7b26\u53f716\u4f4d Short jshort short \u6709\u7b26\u53f716\u4f4d Integer jint int \u6709\u7b26\u53f732\u4f4d Long jlong long long \u6709\u7b26\u53f764\u4f4d Float jfloat float 32\u4f4d\u6d6e\u70b9\u503c Double jdouble double 64\u4f4d\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u503c \u5f15\u7528\u7c7b\u578b Java\u7c7b\u578b C/C++\u7c7b\u578b java.lang.Class jclass java.lang.Throwable jthrowable java.lang.String jstring java.lang.Object jobject java.util.Objects jobjects java.lang.Object[] jobjectArray Boolean[] jbooleanArray Byte[] jbyteArray Char[] jcharArray Short[] jshortArray int[] jintArray long[] jlongArray float[] jfloatArray double[] jdoubleArray \u901a\u7528\u6570\u7ec4 [] jarray \u5728c\u91cc\u9762\uff0c\u6240\u4ee5\u5f15\u7528\u7c7b\u578b\u90fd\u662fjobject \u7b7e\u540d\u5bf9\u7167\u8868 JNI\u83b7\u53d6Java\u7c7b\u7684\u65b9\u6cd5ID\u548c\u5b57\u6bb5ID\u90fd\u9700\u8981\u4e00\u4e2a\u91cd\u8981\u7684\u53c2\u6570\uff0c\u90a3\u5c31\u662fJava\u7c7b\u7684\u65b9\u6cd5\u548c\u5b57\u6bb5\u7684\u7b7e\u540d\u3002 jfieldID j_fid = env->GetFieldID(j_class, \"noStaticField\", \"I\"); jmethodID id = env->GetMethodID(clazz, \"paramMethod\", \"(I)V\"); \u5982\u679cJava\u65b9\u6cd5\u6709\u8fd4\u56de\u503c\u5c31\u8981\u52a0\u4e0a\u62ec\u53f7 () \u5305\u4f4f\u53c2\u6570\uff0c\u62ec\u53f7\u540e\u8ddf\u4e0a\u8fd4\u56de\u503c\u5f97\u7b7e\u540d\u7c7b\u578b\u3002 \u591a\u4e2a\u53c2\u6570\u4e0d\u9700\u8981\u7528\u7b26\u53f7\u9694\u5f00\uff0c\u76f4\u63a5\u987a\u5e8f\u5199\u7b7e\u540d\u7c7b\u578b public me.simple.example_ndk_cmake.Test(int, java.lang.String); descriptor: (ILjava/lang/String;)V \u57fa\u7840\u7c7b\u578b Java\u7c7b\u578b \u7b7e\u540d\u63cf\u8ff0 boolean Z byte B char C short S int I long J float F double D void V \u5f15\u7528\u7c7b\u578b \u4ee5\u5927\u5199 L \u5f00\u5934\uff0c ; \u7ed3\u5c3e\uff0c\u4e2d\u95f4\u7684\u662f\u5f15\u7528\u7c7b\u578b\u7684\u5b8c\u6574\u8def\u5f84\uff0c\u5305\u540d\u7684 . \u7528 / \u4ee3\u66ff\u3002 String \uff1a Ljava/lang/String; Object \uff1a Ljava/lang/Object; \u81ea\u5b9a\u4e49\u7c7b\u578b \uff1aL\u5305\u540d/\u7c7b\u578b\u540d \u6784\u9020\u65b9\u6cd5\uff1a<init> \u6570\u7ec4 \u5728\u7c7b\u578b\u524d\u9762\u52a0\u4e00\u4e2a\u5de6\u65b9\u62ec\u53f7 [ \uff0c\u51e0\u7ef4\u6570\u7ec4\u5c31\u52a0\u51e0\u4e2a [ int [] \uff1a[I Long[][] \uff1a [[J Object[][][] \uff1a [[[Ljava/lang/Object \u547d\u4ee4\u67e5\u770b\u7b7e\u540d javap -s -p xxx.class public class me.simple.example_ndk_cmake.MainActivity extends androidx.appcompat.app.AppCompatActivity { public static final java.lang.String TAG; descriptor: Ljava/lang/String; public java.lang.String filedA; descriptor: Ljava/lang/String; public static int filedStaticB; descriptor: I public me.simple.example_ndk_cmake.MainActivity(); descriptor: ()V protected void onCreate(android.os.Bundle); descriptor: (Landroid/os/Bundle;)V public void callJniMethod(android.view.View); descriptor: (Landroid/view/View;)V public void toast(java.lang.String); descriptor: (Ljava/lang/String;)V public static native void jniCallJavaMethod(); descriptor: ()V } \u5e38\u89c1\u7528\u6cd5 Java\u8c03\u7528JNI\u65b9\u6cd5 static { System.loadLibrary(\"hello_jni\"); } public static native String callJniMethod(); JNIEXPORT jstring JNICALL Java_me_simple_example_1ndk_1cmake_MainActivity_callJniMethod( JNIEnv *env, jclass clazz ) { const char *message = \"string from jni c\"; return (*env)->NewStringUTF(env, message); } JNI\u8bbf\u95eeJava\u7c7b\u7684\u53d8\u91cf private \u7684\u53d8\u91cf\u4e00\u6837\u53ef\u4ee5\u8bbf\u95ee JNIEXPORT void JNICALL Java_me_simple_example_1ndk_1cmake_MainActivity_native_1callJavaFiled( JNIEnv *env, jclass clazz, jobject testObj) { //\u6839\u636e\u7c7b\u8def\u5f84\u627e\u5230\u7c7b\u5bf9\u8c61 // jclass jclazz = (*env)->FindClass(env, class_name); jclass jclazz = (*env)->GetObjectClass(env, testObj); //\u83b7\u53d6\u53d8\u91cf\u5b57\u6bb5\u7684id const char *filed = \"a\"; const char *sign = \"I\"; jfieldID jfieldId = (*env)->GetFieldID(env, jclazz, filed, sign); //\u83b7\u53d6\u5b57\u6bb5\u7684\u503c jint jint1 = (*env)->GetIntField(env, testObj, jfieldId); log_d(\"get filed == %d\", jint1); //\u66f4\u6539\u5b57\u6bb5\u7684\u503c (*env)->SetIntField(env, testObj, jfieldId, 3); jint1 = (*env)->GetIntField(env, testObj, jfieldId); log_d(\"set filed == %d\", jint1); } JNI\u8bbf\u95eeJava\u7c7b\u7684\u9759\u6001\u53d8\u91cf //\u6839\u636e\u7c7b\u8def\u5f84\u627e\u5230\u7c7b\u5bf9\u8c61 jclass jclass1 = (*env)->FindClass(env, class_name); //\u83b7\u53d6static\u53d8\u91cf\u5b57\u6bb5\u7684id const char *filed = \"b\"; const char *sign = \"Ljava/lang/String;\"; jfieldID jfieldId = (*env)->GetStaticFieldID(env, jclass1, filed, sign); //\u83b7\u53d6staic\u5b57\u6bb5\u7684\u503c jstring jstring1 = (jstring) (*env)->GetStaticObjectField(env, jclass1, jfieldId); //jstring\u8f6c\u6362\u4e3a\u5b57\u7b26\u6307\u9488 const char *filed_string = (*env)->GetStringUTFChars(env, jstring1, 0); log_d(\"get string filed == %s\", filed_string) JNI\u8c03\u7528Java\u7c7b\u7684\u65b9\u6cd5 const char *class_name = \"me/simple/example_ndk_cmake/Test\"; //\u6839\u636e\u7c7b\u8def\u5f84\u627e\u5230\u7c7b\u5bf9\u8c61 jclass jclazz = (*env)->FindClass(env, class_name); //jclass jclazz = (*env)->GetObjectClass(env, this); //\u83b7\u53d6\u7c7b\u7684\u7a7a\u53c2\u6784\u9020\u65b9\u6cd5 const char *construct_method = \"<init>\"; jmethodID construct = (*env)->GetMethodID(env, jclazz, construct_method, \"()V\"); //\u521b\u5efa\u8be5\u7c7b\u7684\u5b9e\u4f8b jobject jobject1 = (*env)->NewObject(env, jclazz, construct); //\u627e\u5230\u8981\u8c03\u7528\u7684\u65b9\u6cd5id const char *method = \"log\"; const char *sign = \"(Ljava/lang/String;)V\"; jmethodID jmethodId = (*env)->GetMethodID(env, jclazz, method, sign); //\u8c03\u7528\u6539\u7c7b\u7684\u65b9\u6cd5 const char *message = \"method called by c\"; jstring jstring1 = (*env)->NewStringUTF(env, message); (*env)->CallVoidMethod(env, jobject1, jmethodId, jstring1); //\u91ca\u653e\u5f15\u7528 (*env)->DeleteLocalRef(env, jclazz); (*env)->DeleteLocalRef(env, jobject1); (*env)->DeleteLocalRef(env, jstring1); JNI\u8c03\u7528Java\u7c7b\u7684\u9759\u6001\u65b9\u6cd5 jclass jclazz = (*env)->FindClass(env, class_name); const char *method = \"staticLog\"; const char *sign = \"(Ljava/lang/String;)V\"; jmethodID jmethodId = (*env)->GetStaticMethodID(env, jclazz, method, sign); const char *message = \"message from c\"; jstring jmessage = (*env)->NewStringUTF(env, message); (*env)->CallStaticVoidMethod(env, jclazz, jmethodId, jmessage); JNI\u8c03\u7528Java\u7c7b\u7684\u6784\u9020\u65b9\u6cd5 \u8c03\u7528\u65e0\u53c2\u6784\u9020\u65b9\u6cd5 //\u83b7\u53d6\u7c7b\u7684\u7a7a\u53c2\u6784\u9020\u65b9\u6cd5 const char *construct_method = \"<init>\"; jmethodID construct = (*env)->GetMethodID(env, jclazz, construct_method, \"()V\"); //\u521b\u5efa\u8be5\u7c7b\u7684\u5b9e\u4f8b jobject jobject1 = (*env)->NewObject(env, jclazz, construct); \u8c03\u7528\u6709\u53c2\u6784\u9020\u65b9\u6cd5 //\u6839\u636e\u7c7b\u8def\u5f84\u627e\u5230\u7c7b\u5bf9\u8c61 jclass jclazz = (*env)->FindClass(env, class_name); //\u83b7\u53d6\u7c7b\u7684\u6709\u53c2\u6784\u9020\u65b9\u6cd5 const char *construct_method = \"<init>\"; const char *sign = \"(ILjava/lang/String;)V\"; jmethodID construct = (*env)->GetMethodID(env, jclazz, construct_method, sign); //\u521b\u5efa\u8be5\u7c7b\u7684\u5b9e\u4f8b jint arg_a = 10; jstring arg_b = (*env)->NewStringUTF(env, \"hello world\"); jobject jobject1 = (*env)->NewObject(env, jclazz, construct, arg_a, arg_b); \u5982\u4f55\u662f\u5185\u90e8\u7c7b\uff0c\u5305\u540d\u4e4b\u524d\u8fd8\u662f\u7528 / \uff0c\u5185\u90e8\u7c7b\u8fde\u63a5\u7528 $ \uff0c\u6bd4\u5982 android/graphics/Bitmap$Config \u3002 JNI\u5f02\u5e38\u5904\u7406 \u629b\u51fa\u5f02\u5e38 jclass e_class = (*env)->FindClass(env, \"java/lang/Exception\"); (*env)->ThrowNew(env, e_class, \"throw exception from c\"); \u68c0\u6d4b\u5f02\u5e38 \u4f7f\u7528 ExceptionOccurred \u8fdb\u884c\u5f02\u5e38\u7684\u68c0\u6d4b\u3002\u6ce8\u610f\uff0c\u8fd9\u91cc\u53ea\u80fd\u68c0\u6d4bjava\u5f02\u5e38\u3002 \u4f7f\u7528 ExceptionClear \u8fdb\u884c\u5f02\u5e38\u7684\u6e05\u9664\u3002 jclass jclass1 = (*env)->FindClass(env, \"java/lang/Exception\"); const char *method = \"a\"; const char *sign = \"b\"; jfieldID jfieldId = (*env)->GetFieldID(env,jclass1,method,sign); //\u68c0\u6d4b\u5f02\u5e38\u662f\u5426\u53d1\u751f jthrowable e = (*env)->ExceptionOccurred(env); if (e != NULL){ log_d(\"\u5f02\u5e38\u53d1\u751f\") //\u6e05\u9664\u5f02\u5e38\uff0c\u9700\u8981\u548cExceptionOccurred\u6210\u5bf9\u51fa\u73b0 (*env)->ExceptionClear(env); } JNI\u521b\u5efaJava\u679a\u4e3e\u5bf9\u8c61 \u4f7f\u7528 java -p \u679a\u4e3e\u7c7b \u53ef\u4ee5\u67e5\u770b\u5bf9\u5e94\u7b7e\u540d\uff0c\u679a\u4e3e\u7c7b\u7684\u53d8\u91cf\u5b57\u6bb5\u90fd\u4f1a\u751f\u6210\u4e3a static final \u7684\uff0c\u5e76\u4e14\u4f1a\u751f\u6210\u4e00\u4e2a valueOf \u7684\u9759\u6001\u65b9\u6cd5\u3002 jobject createBitmap(JNIEnv *env, int width, int height) { jclass bitmapCls = env->FindClass(\"android/graphics/Bitmap\"); jmethodID createBitmapFunction = env->GetStaticMethodID(bitmapCls, \"createBitmap\", \"(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;\"); jstring configName = env->NewStringUTF(\"ARGB_8888\"); jclass bitmapConfigClass = env->FindClass(\"android/graphics/Bitmap$Config\"); jmethodID valueOfBitmapConfigFunction = env->GetStaticMethodID(bitmapConfigClass, \"valueOf\", \"(Ljava/lang/String;)Landroid/graphics/Bitmap$Config;\"); jobject bitmapConfig = env->CallStaticObjectMethod(bitmapConfigClass, valueOfBitmapConfigFunction, configName); jobject newBitmap = env->CallStaticObjectMethod(bitmapCls, createBitmapFunction, width, height, bitmapConfig); return newBitmap; } Native\u51fd\u6570\u6ce8\u518c\u65b9\u5f0f \u9759\u6001\u6ce8\u518c \u52a8\u6001\u6ce8\u518c \u9759\u6001\u6ce8\u518c Java_me_simple_example_1ndk_1cmake_MainActivity_native_1callJavaFiled(JNIEnv *env, jclass clazz){ } \u5305\u540d+\u7c7b\u540d+\u65b9\u6cd5\u540d\uff0c\u7528 _ \u5206\u5f00\u3002 \u52a8\u6001\u6ce8\u518c public class MainActivity extends AppCompatActivity { // \u52a0\u8f7dso static { System.loadLibrary(\"native-lib\"); } @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); TextView tv = findViewById(R.id.sample_text); tv.setText(getString()); } /** * \u5b9a\u4e49native\u65b9\u6cd5 */ public native String getString(); } #include <jni.h> #include <string> /** * extern \"C\" \uff1a\u4e3b\u8981\u4f5c\u7528\u5c31\u662f\u4e3a\u4e86\u80fd\u591f\u6b63\u786e\u5b9e\u73b0C++\u4ee3\u7801\u8c03\u7528\u5176\u4ed6C\u8bed\u8a00\u4ee3\u7801 * JNIEXPORT\uff0cJNICALL \uff1a\u544a\u8bc9\u865a\u62df\u673a\uff0c\u8fd9\u662fjni\u51fd\u6570 */ extern \"C\" JNIEXPORT jstring JNICALL native_getString(JNIEnv *env, jobject /* this */) { std::string hello = \"Hello from C++\"; return env->NewStringUTF(hello.c_str()); } /** * \u5bf9\u5e94java\u7c7b\u7684\u5168\u8def\u5f84\u540d\uff0c.\u7528/\u4ee3\u66ff */ const char *classPathName = \"com/chenpeng/registernativemethoddemo/MainActivity\"; /** * JNINativeMethod \u7ed3\u6784\u4f53\u7684\u6570\u7ec4 * \u7ed3\u6784\u4f53\u53c2\u65701\uff1a\u5bf9\u5e94java\u7c7b\u603b\u7684native\u65b9\u6cd5 * \u7ed3\u6784\u4f53\u53c2\u65702\uff1a\u5bf9\u5e94java\u7c7b\u603b\u7684native\u65b9\u6cd5\u7684\u63cf\u8ff0\u4fe1\u606f\uff0c\u7528javap -s xxxx.class \u67e5\u770b * \u7ed3\u6784\u4f53\u53c2\u65703\uff1ac/c++ \u79cd\u5bf9\u5e94\u7684\u65b9\u6cd5\u540d */ JNINativeMethod method[] = {{\"getString\", \"()Ljava/lang/String;\", (void *) native_getString}}; /** * \u8be5\u51fd\u6570\u5b9a\u4e49\u5728jni.h\u5934\u6587\u4ef6\u4e2d\uff0cSystem.loadLibrary()\u65f6\u4f1a\u8c03\u7528JNI_OnLoad()\u51fd\u6570 */ JNIEXPORT jint JNI_OnLoad(JavaVM *vm, void *reserved) { //\u5b9a\u4e49 JNIEnv \u6307\u9488 JNIEnv *env = NULL; //\u83b7\u53d6 JNIEnv vm->GetEnv((void **) &env, JNI_VERSION_1_6); //\u83b7\u53d6\u5bf9\u5e94\u7684java\u7c7b jclass clazz = env->FindClass(classPathName); //\u6ce8\u518cnative\u65b9\u6cd5 env->RegisterNatives(clazz, method, 1); //\u8fd4\u56deJni \u7684\u7248\u672c return JNI_VERSION_1_6; } \u8f93\u51faLOG #include <android/log.h> #define TAG \"example_ndk\" #define log_v(...) __android_log_print(ANDROID_LOG_VERBOSE, TAG, __VA_ARGS__) #define log_d(...) __android_log_print(ANDROID_LOG_DEBUG, TAG, __VA_ARGS__) #define log_i(...) __android_log_print(ANDROID_LOG_INFO, TAG, __VA_ARGS__) #define log_w(...) __android_log_print(ANDROID_LOG_WARN, TAG, __VA_ARGS__) #define log_e(...) __android_log_print(ANDROID_LOG_ERROR, TAG, __VA_ARGS__)","title":"JNI\u5b66\u4e60\u7b14\u8bb0"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#jni","text":"","title":"JNI\u5b66\u4e60\u7b14\u8bb0"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_1","text":"","title":"\u7c7b\u578b\u5bf9\u7167\u8868"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_2","text":"Java\u7c7b\u578b JNI\u7c7b\u578b C/C++\u7c7b\u578b \u5927\u5c0f Boolean jboolean unsigned char \u65e0\u7b26\u53f78\u4f4d Byte jbyte char \u6709\u7b26\u53f78\u4f4d Char jchar unsigned char \u65e0\u7b26\u53f716\u4f4d Short jshort short \u6709\u7b26\u53f716\u4f4d Integer jint int \u6709\u7b26\u53f732\u4f4d Long jlong long long \u6709\u7b26\u53f764\u4f4d Float jfloat float 32\u4f4d\u6d6e\u70b9\u503c Double jdouble double 64\u4f4d\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u503c","title":"\u57fa\u7840\u7c7b\u578b"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_3","text":"Java\u7c7b\u578b C/C++\u7c7b\u578b java.lang.Class jclass java.lang.Throwable jthrowable java.lang.String jstring java.lang.Object jobject java.util.Objects jobjects java.lang.Object[] jobjectArray Boolean[] jbooleanArray Byte[] jbyteArray Char[] jcharArray Short[] jshortArray int[] jintArray long[] jlongArray float[] jfloatArray double[] jdoubleArray \u901a\u7528\u6570\u7ec4 [] jarray \u5728c\u91cc\u9762\uff0c\u6240\u4ee5\u5f15\u7528\u7c7b\u578b\u90fd\u662fjobject","title":"\u5f15\u7528\u7c7b\u578b"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_4","text":"JNI\u83b7\u53d6Java\u7c7b\u7684\u65b9\u6cd5ID\u548c\u5b57\u6bb5ID\u90fd\u9700\u8981\u4e00\u4e2a\u91cd\u8981\u7684\u53c2\u6570\uff0c\u90a3\u5c31\u662fJava\u7c7b\u7684\u65b9\u6cd5\u548c\u5b57\u6bb5\u7684\u7b7e\u540d\u3002 jfieldID j_fid = env->GetFieldID(j_class, \"noStaticField\", \"I\"); jmethodID id = env->GetMethodID(clazz, \"paramMethod\", \"(I)V\"); \u5982\u679cJava\u65b9\u6cd5\u6709\u8fd4\u56de\u503c\u5c31\u8981\u52a0\u4e0a\u62ec\u53f7 () \u5305\u4f4f\u53c2\u6570\uff0c\u62ec\u53f7\u540e\u8ddf\u4e0a\u8fd4\u56de\u503c\u5f97\u7b7e\u540d\u7c7b\u578b\u3002 \u591a\u4e2a\u53c2\u6570\u4e0d\u9700\u8981\u7528\u7b26\u53f7\u9694\u5f00\uff0c\u76f4\u63a5\u987a\u5e8f\u5199\u7b7e\u540d\u7c7b\u578b public me.simple.example_ndk_cmake.Test(int, java.lang.String); descriptor: (ILjava/lang/String;)V","title":"\u7b7e\u540d\u5bf9\u7167\u8868"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_5","text":"Java\u7c7b\u578b \u7b7e\u540d\u63cf\u8ff0 boolean Z byte B char C short S int I long J float F double D void V","title":"\u57fa\u7840\u7c7b\u578b"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_6","text":"\u4ee5\u5927\u5199 L \u5f00\u5934\uff0c ; \u7ed3\u5c3e\uff0c\u4e2d\u95f4\u7684\u662f\u5f15\u7528\u7c7b\u578b\u7684\u5b8c\u6574\u8def\u5f84\uff0c\u5305\u540d\u7684 . \u7528 / \u4ee3\u66ff\u3002 String \uff1a Ljava/lang/String; Object \uff1a Ljava/lang/Object; \u81ea\u5b9a\u4e49\u7c7b\u578b \uff1aL\u5305\u540d/\u7c7b\u578b\u540d \u6784\u9020\u65b9\u6cd5\uff1a<init>","title":"\u5f15\u7528\u7c7b\u578b"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_7","text":"\u5728\u7c7b\u578b\u524d\u9762\u52a0\u4e00\u4e2a\u5de6\u65b9\u62ec\u53f7 [ \uff0c\u51e0\u7ef4\u6570\u7ec4\u5c31\u52a0\u51e0\u4e2a [ int [] \uff1a[I Long[][] \uff1a [[J Object[][][] \uff1a [[[Ljava/lang/Object","title":"\u6570\u7ec4"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_8","text":"javap -s -p xxx.class public class me.simple.example_ndk_cmake.MainActivity extends androidx.appcompat.app.AppCompatActivity { public static final java.lang.String TAG; descriptor: Ljava/lang/String; public java.lang.String filedA; descriptor: Ljava/lang/String; public static int filedStaticB; descriptor: I public me.simple.example_ndk_cmake.MainActivity(); descriptor: ()V protected void onCreate(android.os.Bundle); descriptor: (Landroid/os/Bundle;)V public void callJniMethod(android.view.View); descriptor: (Landroid/view/View;)V public void toast(java.lang.String); descriptor: (Ljava/lang/String;)V public static native void jniCallJavaMethod(); descriptor: ()V }","title":"\u547d\u4ee4\u67e5\u770b\u7b7e\u540d"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_9","text":"","title":"\u5e38\u89c1\u7528\u6cd5"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#javajni","text":"static { System.loadLibrary(\"hello_jni\"); } public static native String callJniMethod(); JNIEXPORT jstring JNICALL Java_me_simple_example_1ndk_1cmake_MainActivity_callJniMethod( JNIEnv *env, jclass clazz ) { const char *message = \"string from jni c\"; return (*env)->NewStringUTF(env, message); }","title":"Java\u8c03\u7528JNI\u65b9\u6cd5"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#jnijava","text":"private \u7684\u53d8\u91cf\u4e00\u6837\u53ef\u4ee5\u8bbf\u95ee JNIEXPORT void JNICALL Java_me_simple_example_1ndk_1cmake_MainActivity_native_1callJavaFiled( JNIEnv *env, jclass clazz, jobject testObj) { //\u6839\u636e\u7c7b\u8def\u5f84\u627e\u5230\u7c7b\u5bf9\u8c61 // jclass jclazz = (*env)->FindClass(env, class_name); jclass jclazz = (*env)->GetObjectClass(env, testObj); //\u83b7\u53d6\u53d8\u91cf\u5b57\u6bb5\u7684id const char *filed = \"a\"; const char *sign = \"I\"; jfieldID jfieldId = (*env)->GetFieldID(env, jclazz, filed, sign); //\u83b7\u53d6\u5b57\u6bb5\u7684\u503c jint jint1 = (*env)->GetIntField(env, testObj, jfieldId); log_d(\"get filed == %d\", jint1); //\u66f4\u6539\u5b57\u6bb5\u7684\u503c (*env)->SetIntField(env, testObj, jfieldId, 3); jint1 = (*env)->GetIntField(env, testObj, jfieldId); log_d(\"set filed == %d\", jint1); }","title":"JNI\u8bbf\u95eeJava\u7c7b\u7684\u53d8\u91cf"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#jnijava_1","text":"//\u6839\u636e\u7c7b\u8def\u5f84\u627e\u5230\u7c7b\u5bf9\u8c61 jclass jclass1 = (*env)->FindClass(env, class_name); //\u83b7\u53d6static\u53d8\u91cf\u5b57\u6bb5\u7684id const char *filed = \"b\"; const char *sign = \"Ljava/lang/String;\"; jfieldID jfieldId = (*env)->GetStaticFieldID(env, jclass1, filed, sign); //\u83b7\u53d6staic\u5b57\u6bb5\u7684\u503c jstring jstring1 = (jstring) (*env)->GetStaticObjectField(env, jclass1, jfieldId); //jstring\u8f6c\u6362\u4e3a\u5b57\u7b26\u6307\u9488 const char *filed_string = (*env)->GetStringUTFChars(env, jstring1, 0); log_d(\"get string filed == %s\", filed_string)","title":"JNI\u8bbf\u95eeJava\u7c7b\u7684\u9759\u6001\u53d8\u91cf"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#jnijava_2","text":"const char *class_name = \"me/simple/example_ndk_cmake/Test\"; //\u6839\u636e\u7c7b\u8def\u5f84\u627e\u5230\u7c7b\u5bf9\u8c61 jclass jclazz = (*env)->FindClass(env, class_name); //jclass jclazz = (*env)->GetObjectClass(env, this); //\u83b7\u53d6\u7c7b\u7684\u7a7a\u53c2\u6784\u9020\u65b9\u6cd5 const char *construct_method = \"<init>\"; jmethodID construct = (*env)->GetMethodID(env, jclazz, construct_method, \"()V\"); //\u521b\u5efa\u8be5\u7c7b\u7684\u5b9e\u4f8b jobject jobject1 = (*env)->NewObject(env, jclazz, construct); //\u627e\u5230\u8981\u8c03\u7528\u7684\u65b9\u6cd5id const char *method = \"log\"; const char *sign = \"(Ljava/lang/String;)V\"; jmethodID jmethodId = (*env)->GetMethodID(env, jclazz, method, sign); //\u8c03\u7528\u6539\u7c7b\u7684\u65b9\u6cd5 const char *message = \"method called by c\"; jstring jstring1 = (*env)->NewStringUTF(env, message); (*env)->CallVoidMethod(env, jobject1, jmethodId, jstring1); //\u91ca\u653e\u5f15\u7528 (*env)->DeleteLocalRef(env, jclazz); (*env)->DeleteLocalRef(env, jobject1); (*env)->DeleteLocalRef(env, jstring1);","title":"JNI\u8c03\u7528Java\u7c7b\u7684\u65b9\u6cd5"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#jnijava_3","text":"jclass jclazz = (*env)->FindClass(env, class_name); const char *method = \"staticLog\"; const char *sign = \"(Ljava/lang/String;)V\"; jmethodID jmethodId = (*env)->GetStaticMethodID(env, jclazz, method, sign); const char *message = \"message from c\"; jstring jmessage = (*env)->NewStringUTF(env, message); (*env)->CallStaticVoidMethod(env, jclazz, jmethodId, jmessage);","title":"JNI\u8c03\u7528Java\u7c7b\u7684\u9759\u6001\u65b9\u6cd5"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#jnijava_4","text":"\u8c03\u7528\u65e0\u53c2\u6784\u9020\u65b9\u6cd5 //\u83b7\u53d6\u7c7b\u7684\u7a7a\u53c2\u6784\u9020\u65b9\u6cd5 const char *construct_method = \"<init>\"; jmethodID construct = (*env)->GetMethodID(env, jclazz, construct_method, \"()V\"); //\u521b\u5efa\u8be5\u7c7b\u7684\u5b9e\u4f8b jobject jobject1 = (*env)->NewObject(env, jclazz, construct); \u8c03\u7528\u6709\u53c2\u6784\u9020\u65b9\u6cd5 //\u6839\u636e\u7c7b\u8def\u5f84\u627e\u5230\u7c7b\u5bf9\u8c61 jclass jclazz = (*env)->FindClass(env, class_name); //\u83b7\u53d6\u7c7b\u7684\u6709\u53c2\u6784\u9020\u65b9\u6cd5 const char *construct_method = \"<init>\"; const char *sign = \"(ILjava/lang/String;)V\"; jmethodID construct = (*env)->GetMethodID(env, jclazz, construct_method, sign); //\u521b\u5efa\u8be5\u7c7b\u7684\u5b9e\u4f8b jint arg_a = 10; jstring arg_b = (*env)->NewStringUTF(env, \"hello world\"); jobject jobject1 = (*env)->NewObject(env, jclazz, construct, arg_a, arg_b); \u5982\u4f55\u662f\u5185\u90e8\u7c7b\uff0c\u5305\u540d\u4e4b\u524d\u8fd8\u662f\u7528 / \uff0c\u5185\u90e8\u7c7b\u8fde\u63a5\u7528 $ \uff0c\u6bd4\u5982 android/graphics/Bitmap$Config \u3002","title":"JNI\u8c03\u7528Java\u7c7b\u7684\u6784\u9020\u65b9\u6cd5"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#jni_1","text":"\u629b\u51fa\u5f02\u5e38 jclass e_class = (*env)->FindClass(env, \"java/lang/Exception\"); (*env)->ThrowNew(env, e_class, \"throw exception from c\"); \u68c0\u6d4b\u5f02\u5e38 \u4f7f\u7528 ExceptionOccurred \u8fdb\u884c\u5f02\u5e38\u7684\u68c0\u6d4b\u3002\u6ce8\u610f\uff0c\u8fd9\u91cc\u53ea\u80fd\u68c0\u6d4bjava\u5f02\u5e38\u3002 \u4f7f\u7528 ExceptionClear \u8fdb\u884c\u5f02\u5e38\u7684\u6e05\u9664\u3002 jclass jclass1 = (*env)->FindClass(env, \"java/lang/Exception\"); const char *method = \"a\"; const char *sign = \"b\"; jfieldID jfieldId = (*env)->GetFieldID(env,jclass1,method,sign); //\u68c0\u6d4b\u5f02\u5e38\u662f\u5426\u53d1\u751f jthrowable e = (*env)->ExceptionOccurred(env); if (e != NULL){ log_d(\"\u5f02\u5e38\u53d1\u751f\") //\u6e05\u9664\u5f02\u5e38\uff0c\u9700\u8981\u548cExceptionOccurred\u6210\u5bf9\u51fa\u73b0 (*env)->ExceptionClear(env); }","title":"JNI\u5f02\u5e38\u5904\u7406"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#jnijava_5","text":"\u4f7f\u7528 java -p \u679a\u4e3e\u7c7b \u53ef\u4ee5\u67e5\u770b\u5bf9\u5e94\u7b7e\u540d\uff0c\u679a\u4e3e\u7c7b\u7684\u53d8\u91cf\u5b57\u6bb5\u90fd\u4f1a\u751f\u6210\u4e3a static final \u7684\uff0c\u5e76\u4e14\u4f1a\u751f\u6210\u4e00\u4e2a valueOf \u7684\u9759\u6001\u65b9\u6cd5\u3002 jobject createBitmap(JNIEnv *env, int width, int height) { jclass bitmapCls = env->FindClass(\"android/graphics/Bitmap\"); jmethodID createBitmapFunction = env->GetStaticMethodID(bitmapCls, \"createBitmap\", \"(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;\"); jstring configName = env->NewStringUTF(\"ARGB_8888\"); jclass bitmapConfigClass = env->FindClass(\"android/graphics/Bitmap$Config\"); jmethodID valueOfBitmapConfigFunction = env->GetStaticMethodID(bitmapConfigClass, \"valueOf\", \"(Ljava/lang/String;)Landroid/graphics/Bitmap$Config;\"); jobject bitmapConfig = env->CallStaticObjectMethod(bitmapConfigClass, valueOfBitmapConfigFunction, configName); jobject newBitmap = env->CallStaticObjectMethod(bitmapCls, createBitmapFunction, width, height, bitmapConfig); return newBitmap; }","title":"JNI\u521b\u5efaJava\u679a\u4e3e\u5bf9\u8c61"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#native","text":"\u9759\u6001\u6ce8\u518c \u52a8\u6001\u6ce8\u518c","title":"Native\u51fd\u6570\u6ce8\u518c\u65b9\u5f0f"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_10","text":"Java_me_simple_example_1ndk_1cmake_MainActivity_native_1callJavaFiled(JNIEnv *env, jclass clazz){ } \u5305\u540d+\u7c7b\u540d+\u65b9\u6cd5\u540d\uff0c\u7528 _ \u5206\u5f00\u3002","title":"\u9759\u6001\u6ce8\u518c"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_11","text":"public class MainActivity extends AppCompatActivity { // \u52a0\u8f7dso static { System.loadLibrary(\"native-lib\"); } @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); TextView tv = findViewById(R.id.sample_text); tv.setText(getString()); } /** * \u5b9a\u4e49native\u65b9\u6cd5 */ public native String getString(); } #include <jni.h> #include <string> /** * extern \"C\" \uff1a\u4e3b\u8981\u4f5c\u7528\u5c31\u662f\u4e3a\u4e86\u80fd\u591f\u6b63\u786e\u5b9e\u73b0C++\u4ee3\u7801\u8c03\u7528\u5176\u4ed6C\u8bed\u8a00\u4ee3\u7801 * JNIEXPORT\uff0cJNICALL \uff1a\u544a\u8bc9\u865a\u62df\u673a\uff0c\u8fd9\u662fjni\u51fd\u6570 */ extern \"C\" JNIEXPORT jstring JNICALL native_getString(JNIEnv *env, jobject /* this */) { std::string hello = \"Hello from C++\"; return env->NewStringUTF(hello.c_str()); } /** * \u5bf9\u5e94java\u7c7b\u7684\u5168\u8def\u5f84\u540d\uff0c.\u7528/\u4ee3\u66ff */ const char *classPathName = \"com/chenpeng/registernativemethoddemo/MainActivity\"; /** * JNINativeMethod \u7ed3\u6784\u4f53\u7684\u6570\u7ec4 * \u7ed3\u6784\u4f53\u53c2\u65701\uff1a\u5bf9\u5e94java\u7c7b\u603b\u7684native\u65b9\u6cd5 * \u7ed3\u6784\u4f53\u53c2\u65702\uff1a\u5bf9\u5e94java\u7c7b\u603b\u7684native\u65b9\u6cd5\u7684\u63cf\u8ff0\u4fe1\u606f\uff0c\u7528javap -s xxxx.class \u67e5\u770b * \u7ed3\u6784\u4f53\u53c2\u65703\uff1ac/c++ \u79cd\u5bf9\u5e94\u7684\u65b9\u6cd5\u540d */ JNINativeMethod method[] = {{\"getString\", \"()Ljava/lang/String;\", (void *) native_getString}}; /** * \u8be5\u51fd\u6570\u5b9a\u4e49\u5728jni.h\u5934\u6587\u4ef6\u4e2d\uff0cSystem.loadLibrary()\u65f6\u4f1a\u8c03\u7528JNI_OnLoad()\u51fd\u6570 */ JNIEXPORT jint JNI_OnLoad(JavaVM *vm, void *reserved) { //\u5b9a\u4e49 JNIEnv \u6307\u9488 JNIEnv *env = NULL; //\u83b7\u53d6 JNIEnv vm->GetEnv((void **) &env, JNI_VERSION_1_6); //\u83b7\u53d6\u5bf9\u5e94\u7684java\u7c7b jclass clazz = env->FindClass(classPathName); //\u6ce8\u518cnative\u65b9\u6cd5 env->RegisterNatives(clazz, method, 1); //\u8fd4\u56deJni \u7684\u7248\u672c return JNI_VERSION_1_6; }","title":"\u52a8\u6001\u6ce8\u518c"},{"location":"android/NDK/JNI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#log","text":"#include <android/log.h> #define TAG \"example_ndk\" #define log_v(...) __android_log_print(ANDROID_LOG_VERBOSE, TAG, __VA_ARGS__) #define log_d(...) __android_log_print(ANDROID_LOG_DEBUG, TAG, __VA_ARGS__) #define log_i(...) __android_log_print(ANDROID_LOG_INFO, TAG, __VA_ARGS__) #define log_w(...) __android_log_print(ANDROID_LOG_WARN, TAG, __VA_ARGS__) #define log_e(...) __android_log_print(ANDROID_LOG_ERROR, TAG, __VA_ARGS__)","title":"\u8f93\u51faLOG"},{"location":"android/NDK/JNI%E8%BE%93%E5%87%BA%E5%8E%9F%E7%94%9FLOG/","text":"JNI\u8f93\u51fa\u539f\u751fLOG \u6211\u4eec\u53ef\u4ee5\u5728c/cpp\u4ee3\u7801\u4e2d\u7528 print \u51fd\u6570\u8f93\u51falog\u4fe1\u606f\uff0c\u4f46\u662f\u8fd9\u6837\u5728 logcat\u5e76 \u4e0d\u4f1a\u663e\u793a\uff0c\u597d\u5728Android\u5df2\u7ecf\u7ed9\u6211\u63d0\u4f9b\u4e86\u76f8\u5e94\u7684\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\u4f7f\u7528 log.h \u5934\u6587\u4ef6 \u5f00\u59cb \u521b\u5efa\u4e00\u4e2a\u65b0\u7684Android Studio\u7684\u5de5\u7a0b\u9879\u76ee \u52fe\u9009 Include C++ support \u9009\u9879 \u7136\u540e\u5c31\u662f\u4e00\u8defnext\u76f4\u5230\u521b\u5efa\u9879\u76ee\u6210\u529f \u9879\u76ee\u7ed3\u6784 \u751f\u6210\u597d\u7684\u9879\u76ee\u4f1a\u5728 main \u76ee\u5f55\u4e0b\u521b\u5efa\u597d cpp \u76ee\u5f55\u548c\u76f8\u5e94\u7684cpp\u6587\u4ef6\uff0c\u4ee5\u53ca CmakeLists \u6587\u4ef6 CmakeLists # For more information about using CMake with Android Studio, read the # documentation: https://d.android.com/studio/projects/add-native-code.html # \u9650\u5b9acmake\u652f\u6301\u6700\u4f4e\u7248\u672c cmake_minimum_required(VERSION 3.4.1) # \u6307\u5b9aso\u751f\u6210\u5230libs\u76ee\u5f55 set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/libs/${ANDROID_ABI}) # \u914d\u7f6eso\u5e93\u7684\u4fe1\u606f add_library( # Sets the name of the library. # \u751f\u6210\u7684so\u5e93\u540d\u79f0,\u5e76\u4e0d\u9700\u8981\u548cc/cpp\u6587\u4ef6\u540d\u76f8\u540c # \u8fd9\u91cc\u751f\u4ea7\u7684so\u5e93\u540d\u79f0\u5c06\u4e3alibnative-lib.so native-lib # Sets the library as a shared library. # STATIC\uff1a\u9759\u6001\u5e93\uff0c\u662f\u76ee\u6807\u6587\u4ef6\u7684\u5f52\u6863\u6587\u4ef6\uff0c\u5728\u94fe\u63a5\u5176\u5b83\u76ee\u6807\u7684\u65f6\u5019\u4f7f\u7528 # SHARED\uff1a\u52a8\u6001\u5e93\uff0c\u4f1a\u88ab\u52a8\u6001\u94fe\u63a5\uff0c\u5728\u8fd0\u884c\u65f6\u88ab\u52a0\u8f7d # MODULE\uff1a\u6a21\u5757\u5e93\uff0c\u662f\u4e0d\u4f1a\u88ab\u94fe\u63a5\u5230\u5176\u5b83\u76ee\u6807\u4e2d\u7684\u63d2\u4ef6\uff0c\u4f46\u662f\u53ef\u80fd\u4f1a\u5728\u8fd0\u884c\u65f6\u4f7f\u7528dlopen-\u7cfb\u5217\u7684\u51fd\u6570\u52a8\u6001\u94fe\u63a5 SHARED # Provides a relative path to your source file(s). # \u8d44\u6e90\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u662f\u591a\u4e2a\u8d44\u6e90\u6587\u4ef6 src/main/cpp/native-lib.cpp ) # \u4ece\u7cfb\u7edf\u5e93\u4e2d\u67e5\u627e\u4f9d\u8d56\u5e93 find_library( # Sets the name of the path variable. # \u8bbe\u7f6e\u4f9d\u8d56\u5e93\u7684\u540d\u5b57\uff0c\u4e0b\u9762\u94fe\u63a5\u5e93\u7684\u65f6\u5019\u4f1a\u7528\u5230 log-lib # Specifies the name of the NDK library that # you want CMake to locate. # \u67e5\u627elog\u4f9d\u8d56\u5e93 # {sdk-path}/ndk-bundle/sysroot/usr/include/android/log.h log ) # \u914d\u7f6e\u5e93\u7684\u4f9d\u8d56\u5173\u7cfb(\u94fe\u63a5\u5173\u7cfb) target_link_libraries( # Specifies the target library. # \u76ee\u6807\u5e93 native-lib # Links the target library to the log library # included in the NDK. # \u4f9d\u8d56\u5e93\uff0c\u53ef\u4ee5\u662f\u591a\u4e2a ${log-lib} ) native-lib.cpp #include <jni.h> #include <string> extern \"C\" JNIEXPORT jstring JNICALL Java_com_simple_nativelogdemo_MainActivity_stringFromJNI( JNIEnv *env, jobject /* this */) { std::string hello = \"Hello from C++ hhahah\"; return env->NewStringUTF(hello.c_str()); } app/build.gradle\u4e0b\u7684android\u8282\u70b9\u5757 android { compileSdkVersion 27 defaultConfig { applicationId \"com.simple.nativelogdemo\" minSdkVersion 16 targetSdkVersion 27 versionCode 1 versionName \"1.0\" testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\" externalNativeBuild { cmake { cppFlags \"\" } } } buildTypes { release { minifyEnabled false proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro' } } externalNativeBuild { cmake { path \"CMakeLists.txt\" } } } \u5b8c\u5584\u4ee3\u7801 \u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5728 cpp \u6587\u4ef6\u4e2d\u5f15\u5165 log.h \u5934\u6587\u4ef6\u5e76\u8c03\u7528\u76f8\u5173\u65b9\u6cd5\u5373\u53ef #include <jni.h> #include <string> //{sdk-path}/ndk-bundle/sysroot/usr/include/android #include <android/log.h> //\u5b9a\u4e49\u8f93\u51fa\u7684TAG const char * LOG_TGA = \"LOG_TGA\"; extern \"C\" JNIEXPORT jstring JNICALL Java_com_simple_nativelogdemo_MainActivity_stringFromJNI( JNIEnv *env, jobject /* this */) { std::string hello = \"Hello from C++ hhahah\"; //\u8f93\u51fadebug\u7ea7\u522b\u7684\u65e5\u5fd7\u4fe1\u606f __android_log_print(ANDROID_LOG_DEBUG, LOG_TGA, \"hello native log\"); return env->NewStringUTF(hello.c_str()); } \u8f93\u51fa log.h\u5934\u6587\u4ef6\u5206\u6790 \u5e38\u7528\u8f93\u51fa\u51fd\u6570 /** * \u8f93\u51fa\u4e00\u4e2a\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3alog\u4fe1\u606f */ int __android_log_write(int prio, const char* tag, const char* text); /** * \u8f93\u51fa\u4e00\u4e2a\u683c\u5f0f\u5316\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3alog\u4fe1\u606f */ int __android_log_print(int prio, const char* tag, const char* fmt, ...) /** * \u4e0e`__android_log_print`\u65b9\u5f0f\u76f8\u540c\uff0c\u533a\u522b\u53ea\u662f\u4f20\u9012\u53c2\u6570\u4e0d\u540c */ int __android_log_vprint(int prio, const char* tag, const char* fmt, va_list ap) /** * \u7528\u4e8e\u8bb0\u5f55\u65ad\u70b9\u5931\u8d25\uff0c\u7c7b\u578b\u4e3a`ANDROID_LOG_FATAL` */ void __android_log_assert(const char* cond, const char* tag, const char* fmt, ...) \u53c2\u6570 prio \u4ee3\u8868\u65e5\u5fd7\u7ea7\u522b \u65e5\u5fd7\u7ea7\u522b\u7c7b\u578b typedef enum android_LogPriority { /** For internal use only. */ ANDROID_LOG_UNKNOWN = 0, /** The default priority, for internal use only. */ ANDROID_LOG_DEFAULT, /* only for SetMinPriority() */ /** Verbose logging. Should typically be disabled for a release apk. */ ANDROID_LOG_VERBOSE, /** Debug logging. Should typically be disabled for a release apk. */ ANDROID_LOG_DEBUG, /** Informational logging. Should typically be disabled for a release apk. */ ANDROID_LOG_INFO, /** Warning logging. For use with recoverable failures. */ ANDROID_LOG_WARN, /** Error logging. For use with unrecoverable failures. */ ANDROID_LOG_ERROR, /** Fatal logging. For use when aborting. */ ANDROID_LOG_FATAL, /** For internal use only. */ ANDROID_LOG_SILENT, /* only for SetMinPriority(); must be last */ } android_LogPriority; \u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8\u5176\u4e2d\u7684 ANDROID_LOG_VERBOSE ANDROID_LOG_DEBUG ANDROID_LOG_INFO ANDROID_LOG_WARN ANDROID_LOG_ERROR \u8fd95\u4e2a\u5c31\u597d\u4e86\uff0c\u56e0\u4e3a\u8fd9\u662f\u6211\u4eec\u5e38\u7528\u7684\u3002","title":"JNI\u8f93\u51fa\u539f\u751fLOG"},{"location":"android/NDK/JNI%E8%BE%93%E5%87%BA%E5%8E%9F%E7%94%9FLOG/#jnilog","text":"\u6211\u4eec\u53ef\u4ee5\u5728c/cpp\u4ee3\u7801\u4e2d\u7528 print \u51fd\u6570\u8f93\u51falog\u4fe1\u606f\uff0c\u4f46\u662f\u8fd9\u6837\u5728 logcat\u5e76 \u4e0d\u4f1a\u663e\u793a\uff0c\u597d\u5728Android\u5df2\u7ecf\u7ed9\u6211\u63d0\u4f9b\u4e86\u76f8\u5e94\u7684\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\u4f7f\u7528 log.h \u5934\u6587\u4ef6","title":"JNI\u8f93\u51fa\u539f\u751fLOG"},{"location":"android/NDK/JNI%E8%BE%93%E5%87%BA%E5%8E%9F%E7%94%9FLOG/#_1","text":"\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Android Studio\u7684\u5de5\u7a0b\u9879\u76ee \u52fe\u9009 Include C++ support \u9009\u9879 \u7136\u540e\u5c31\u662f\u4e00\u8defnext\u76f4\u5230\u521b\u5efa\u9879\u76ee\u6210\u529f","title":"\u5f00\u59cb"},{"location":"android/NDK/JNI%E8%BE%93%E5%87%BA%E5%8E%9F%E7%94%9FLOG/#_2","text":"\u751f\u6210\u597d\u7684\u9879\u76ee\u4f1a\u5728 main \u76ee\u5f55\u4e0b\u521b\u5efa\u597d cpp \u76ee\u5f55\u548c\u76f8\u5e94\u7684cpp\u6587\u4ef6\uff0c\u4ee5\u53ca CmakeLists \u6587\u4ef6","title":"\u9879\u76ee\u7ed3\u6784"},{"location":"android/NDK/JNI%E8%BE%93%E5%87%BA%E5%8E%9F%E7%94%9FLOG/#cmakelists","text":"# For more information about using CMake with Android Studio, read the # documentation: https://d.android.com/studio/projects/add-native-code.html # \u9650\u5b9acmake\u652f\u6301\u6700\u4f4e\u7248\u672c cmake_minimum_required(VERSION 3.4.1) # \u6307\u5b9aso\u751f\u6210\u5230libs\u76ee\u5f55 set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/libs/${ANDROID_ABI}) # \u914d\u7f6eso\u5e93\u7684\u4fe1\u606f add_library( # Sets the name of the library. # \u751f\u6210\u7684so\u5e93\u540d\u79f0,\u5e76\u4e0d\u9700\u8981\u548cc/cpp\u6587\u4ef6\u540d\u76f8\u540c # \u8fd9\u91cc\u751f\u4ea7\u7684so\u5e93\u540d\u79f0\u5c06\u4e3alibnative-lib.so native-lib # Sets the library as a shared library. # STATIC\uff1a\u9759\u6001\u5e93\uff0c\u662f\u76ee\u6807\u6587\u4ef6\u7684\u5f52\u6863\u6587\u4ef6\uff0c\u5728\u94fe\u63a5\u5176\u5b83\u76ee\u6807\u7684\u65f6\u5019\u4f7f\u7528 # SHARED\uff1a\u52a8\u6001\u5e93\uff0c\u4f1a\u88ab\u52a8\u6001\u94fe\u63a5\uff0c\u5728\u8fd0\u884c\u65f6\u88ab\u52a0\u8f7d # MODULE\uff1a\u6a21\u5757\u5e93\uff0c\u662f\u4e0d\u4f1a\u88ab\u94fe\u63a5\u5230\u5176\u5b83\u76ee\u6807\u4e2d\u7684\u63d2\u4ef6\uff0c\u4f46\u662f\u53ef\u80fd\u4f1a\u5728\u8fd0\u884c\u65f6\u4f7f\u7528dlopen-\u7cfb\u5217\u7684\u51fd\u6570\u52a8\u6001\u94fe\u63a5 SHARED # Provides a relative path to your source file(s). # \u8d44\u6e90\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u662f\u591a\u4e2a\u8d44\u6e90\u6587\u4ef6 src/main/cpp/native-lib.cpp ) # \u4ece\u7cfb\u7edf\u5e93\u4e2d\u67e5\u627e\u4f9d\u8d56\u5e93 find_library( # Sets the name of the path variable. # \u8bbe\u7f6e\u4f9d\u8d56\u5e93\u7684\u540d\u5b57\uff0c\u4e0b\u9762\u94fe\u63a5\u5e93\u7684\u65f6\u5019\u4f1a\u7528\u5230 log-lib # Specifies the name of the NDK library that # you want CMake to locate. # \u67e5\u627elog\u4f9d\u8d56\u5e93 # {sdk-path}/ndk-bundle/sysroot/usr/include/android/log.h log ) # \u914d\u7f6e\u5e93\u7684\u4f9d\u8d56\u5173\u7cfb(\u94fe\u63a5\u5173\u7cfb) target_link_libraries( # Specifies the target library. # \u76ee\u6807\u5e93 native-lib # Links the target library to the log library # included in the NDK. # \u4f9d\u8d56\u5e93\uff0c\u53ef\u4ee5\u662f\u591a\u4e2a ${log-lib} )","title":"CmakeLists"},{"location":"android/NDK/JNI%E8%BE%93%E5%87%BA%E5%8E%9F%E7%94%9FLOG/#native-libcpp","text":"#include <jni.h> #include <string> extern \"C\" JNIEXPORT jstring JNICALL Java_com_simple_nativelogdemo_MainActivity_stringFromJNI( JNIEnv *env, jobject /* this */) { std::string hello = \"Hello from C++ hhahah\"; return env->NewStringUTF(hello.c_str()); }","title":"native-lib.cpp"},{"location":"android/NDK/JNI%E8%BE%93%E5%87%BA%E5%8E%9F%E7%94%9FLOG/#appbuildgradleandroid","text":"android { compileSdkVersion 27 defaultConfig { applicationId \"com.simple.nativelogdemo\" minSdkVersion 16 targetSdkVersion 27 versionCode 1 versionName \"1.0\" testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\" externalNativeBuild { cmake { cppFlags \"\" } } } buildTypes { release { minifyEnabled false proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro' } } externalNativeBuild { cmake { path \"CMakeLists.txt\" } } }","title":"app/build.gradle\u4e0b\u7684android\u8282\u70b9\u5757"},{"location":"android/NDK/JNI%E8%BE%93%E5%87%BA%E5%8E%9F%E7%94%9FLOG/#_3","text":"\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5728 cpp \u6587\u4ef6\u4e2d\u5f15\u5165 log.h \u5934\u6587\u4ef6\u5e76\u8c03\u7528\u76f8\u5173\u65b9\u6cd5\u5373\u53ef #include <jni.h> #include <string> //{sdk-path}/ndk-bundle/sysroot/usr/include/android #include <android/log.h> //\u5b9a\u4e49\u8f93\u51fa\u7684TAG const char * LOG_TGA = \"LOG_TGA\"; extern \"C\" JNIEXPORT jstring JNICALL Java_com_simple_nativelogdemo_MainActivity_stringFromJNI( JNIEnv *env, jobject /* this */) { std::string hello = \"Hello from C++ hhahah\"; //\u8f93\u51fadebug\u7ea7\u522b\u7684\u65e5\u5fd7\u4fe1\u606f __android_log_print(ANDROID_LOG_DEBUG, LOG_TGA, \"hello native log\"); return env->NewStringUTF(hello.c_str()); }","title":"\u5b8c\u5584\u4ee3\u7801"},{"location":"android/NDK/JNI%E8%BE%93%E5%87%BA%E5%8E%9F%E7%94%9FLOG/#_4","text":"","title":"\u8f93\u51fa"},{"location":"android/NDK/JNI%E8%BE%93%E5%87%BA%E5%8E%9F%E7%94%9FLOG/#logh","text":"","title":"log.h\u5934\u6587\u4ef6\u5206\u6790"},{"location":"android/NDK/JNI%E8%BE%93%E5%87%BA%E5%8E%9F%E7%94%9FLOG/#_5","text":"/** * \u8f93\u51fa\u4e00\u4e2a\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3alog\u4fe1\u606f */ int __android_log_write(int prio, const char* tag, const char* text); /** * \u8f93\u51fa\u4e00\u4e2a\u683c\u5f0f\u5316\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3alog\u4fe1\u606f */ int __android_log_print(int prio, const char* tag, const char* fmt, ...) /** * \u4e0e`__android_log_print`\u65b9\u5f0f\u76f8\u540c\uff0c\u533a\u522b\u53ea\u662f\u4f20\u9012\u53c2\u6570\u4e0d\u540c */ int __android_log_vprint(int prio, const char* tag, const char* fmt, va_list ap) /** * \u7528\u4e8e\u8bb0\u5f55\u65ad\u70b9\u5931\u8d25\uff0c\u7c7b\u578b\u4e3a`ANDROID_LOG_FATAL` */ void __android_log_assert(const char* cond, const char* tag, const char* fmt, ...) \u53c2\u6570 prio \u4ee3\u8868\u65e5\u5fd7\u7ea7\u522b","title":"\u5e38\u7528\u8f93\u51fa\u51fd\u6570"},{"location":"android/NDK/JNI%E8%BE%93%E5%87%BA%E5%8E%9F%E7%94%9FLOG/#_6","text":"typedef enum android_LogPriority { /** For internal use only. */ ANDROID_LOG_UNKNOWN = 0, /** The default priority, for internal use only. */ ANDROID_LOG_DEFAULT, /* only for SetMinPriority() */ /** Verbose logging. Should typically be disabled for a release apk. */ ANDROID_LOG_VERBOSE, /** Debug logging. Should typically be disabled for a release apk. */ ANDROID_LOG_DEBUG, /** Informational logging. Should typically be disabled for a release apk. */ ANDROID_LOG_INFO, /** Warning logging. For use with recoverable failures. */ ANDROID_LOG_WARN, /** Error logging. For use with unrecoverable failures. */ ANDROID_LOG_ERROR, /** Fatal logging. For use when aborting. */ ANDROID_LOG_FATAL, /** For internal use only. */ ANDROID_LOG_SILENT, /* only for SetMinPriority(); must be last */ } android_LogPriority; \u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8\u5176\u4e2d\u7684 ANDROID_LOG_VERBOSE ANDROID_LOG_DEBUG ANDROID_LOG_INFO ANDROID_LOG_WARN ANDROID_LOG_ERROR \u8fd95\u4e2a\u5c31\u597d\u4e86\uff0c\u56e0\u4e3a\u8fd9\u662f\u6211\u4eec\u5e38\u7528\u7684\u3002","title":"\u65e5\u5fd7\u7ea7\u522b\u7c7b\u578b"},{"location":"android/NDK/%E7%BB%99%E5%B7%B2%E6%9C%89%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0JNI%E6%94%AF%E6%8C%81/","text":"\u7ed9\u5df2\u6709\u9879\u76ee\u6dfb\u52a0JNI/CMake\u652f\u6301 \u5728\u9879\u76ee\u6839\u76ee\u5f55\u6dfb\u52a0 CMakeLists.txt (\u5176\u4ed6\u8def\u5f84\u4e5f\u53ef) # \u8bbe\u7f6e\u6784\u5efa\u672c\u673a\u5e93\u6587\u4ef6\u6240\u9700\u7684 CMake\u7684\u6700\u5c0f\u7248\u672c cmake_minimum_required(VERSION 3.4.1) #\u6dfb\u52a0\u5934\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84 include_directories(src/main/jni/) # \u6dfb\u52a0\u81ea\u5df1\u5199\u7684 C/C++\u6e90\u6587\u4ef6 add_library(hello_jni #so\u540d\u79f0 SHARED #\u52a8\u6001\u5e93 src/main/jni/android_log.h src/main/jni/hello_jni.c ) # \u4f9d\u8d56 NDK\u4e2d\u7684\u5e93 find_library(log-lib log) # \u5c06\u76ee\u6807\u5e93\u4e0e NDK\u4e2d\u7684\u5e93\u8fdb\u884c\u8fde\u63a5 target_link_libraries( hello_jni ${log-lib}) \u5728 src/main/ \u76ee\u5f55\u4e0b\u6dfb\u52a0 c/cpp \u539f\u751f\u4ee3\u7801\u7684\u76ee\u5f55\uff0c\u540d\u79f0\u968f\u610f\uff0c\u4e00\u822c\u53ef\u4ee5\u4e3a jni/cpp JNIEXPORT void JNICALL Java_me_simple_example_1ndk_1cmake_MainActivity_jniCallJavaMethod( JNIEnv *env, jclass this) { const char *class_name = \"me/simple/example_ndk_cmake/Test\"; //\u6839\u636e\u7c7b\u8def\u5f84\u627e\u5230\u7c7b\u5bf9\u8c61 jclass jclazz = (*env)->FindClass(env, class_name); //jclass jclazz = (*env)->GetObjectClass(env, this); //\u83b7\u53d6\u7c7b\u7684\u7a7a\u53c2\u6784\u9020\u65b9\u6cd5 const char *construct_method = \"<init>\"; jmethodID construct = (*env)->GetMethodID(env, jclazz, construct_method, \"()V\"); //\u521b\u5efa\u8be5\u7c7b\u7684\u5b9e\u4f8b jobject jobject1 = (*env)->NewObject(env, jclazz, construct); //\u627e\u5230\u8981\u8c03\u7528\u7684\u65b9\u6cd5id const char *method = \"log\"; const char *sign = \"(Ljava/lang/String;)V\"; jmethodID jmethodId = (*env)->GetMethodID(env, jclazz, method, sign); //\u8c03\u7528\u6539\u7c7b\u7684\u65b9\u6cd5 const char *message = \"method called by c\"; jstring jstring1 = (*env)->NewStringUTF(env, message); (*env)->CallVoidMethod(env, jobject1, jmethodId, jstring1); //\u91ca\u653e\u5f15\u7528 (*env)->DeleteLocalRef(env, jclazz); (*env)->DeleteLocalRef(env, jobject1); (*env)->DeleteLocalRef(env, jstring1); } \u5728\u8be5\u6a21\u5757\u4e0b\u7684 build.grald \u6dfb\u52a0\u76f8\u5e94\u914d\u7f6e android { compileSdkVersion 28 buildToolsVersion \"29.0.1\" defaultConfig { ... //ndk so\u67b6\u6784\u7684\u9009\u62e9 ndk { abiFilters 'armeabi-v7a', 'arm64-v8a' } } ... //cmake\u6587\u4ef6\u7684\u67e5\u627e\u8def\u5f84 externalNativeBuild { cmake { path file('CMakeLists.txt') } } }","title":"\u7ed9\u5df2\u6709\u9879\u76ee\u6dfb\u52a0JNI/CMake\u652f\u6301"},{"location":"android/NDK/%E7%BB%99%E5%B7%B2%E6%9C%89%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0JNI%E6%94%AF%E6%8C%81/#jnicmake","text":"\u5728\u9879\u76ee\u6839\u76ee\u5f55\u6dfb\u52a0 CMakeLists.txt (\u5176\u4ed6\u8def\u5f84\u4e5f\u53ef) # \u8bbe\u7f6e\u6784\u5efa\u672c\u673a\u5e93\u6587\u4ef6\u6240\u9700\u7684 CMake\u7684\u6700\u5c0f\u7248\u672c cmake_minimum_required(VERSION 3.4.1) #\u6dfb\u52a0\u5934\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84 include_directories(src/main/jni/) # \u6dfb\u52a0\u81ea\u5df1\u5199\u7684 C/C++\u6e90\u6587\u4ef6 add_library(hello_jni #so\u540d\u79f0 SHARED #\u52a8\u6001\u5e93 src/main/jni/android_log.h src/main/jni/hello_jni.c ) # \u4f9d\u8d56 NDK\u4e2d\u7684\u5e93 find_library(log-lib log) # \u5c06\u76ee\u6807\u5e93\u4e0e NDK\u4e2d\u7684\u5e93\u8fdb\u884c\u8fde\u63a5 target_link_libraries( hello_jni ${log-lib}) \u5728 src/main/ \u76ee\u5f55\u4e0b\u6dfb\u52a0 c/cpp \u539f\u751f\u4ee3\u7801\u7684\u76ee\u5f55\uff0c\u540d\u79f0\u968f\u610f\uff0c\u4e00\u822c\u53ef\u4ee5\u4e3a jni/cpp JNIEXPORT void JNICALL Java_me_simple_example_1ndk_1cmake_MainActivity_jniCallJavaMethod( JNIEnv *env, jclass this) { const char *class_name = \"me/simple/example_ndk_cmake/Test\"; //\u6839\u636e\u7c7b\u8def\u5f84\u627e\u5230\u7c7b\u5bf9\u8c61 jclass jclazz = (*env)->FindClass(env, class_name); //jclass jclazz = (*env)->GetObjectClass(env, this); //\u83b7\u53d6\u7c7b\u7684\u7a7a\u53c2\u6784\u9020\u65b9\u6cd5 const char *construct_method = \"<init>\"; jmethodID construct = (*env)->GetMethodID(env, jclazz, construct_method, \"()V\"); //\u521b\u5efa\u8be5\u7c7b\u7684\u5b9e\u4f8b jobject jobject1 = (*env)->NewObject(env, jclazz, construct); //\u627e\u5230\u8981\u8c03\u7528\u7684\u65b9\u6cd5id const char *method = \"log\"; const char *sign = \"(Ljava/lang/String;)V\"; jmethodID jmethodId = (*env)->GetMethodID(env, jclazz, method, sign); //\u8c03\u7528\u6539\u7c7b\u7684\u65b9\u6cd5 const char *message = \"method called by c\"; jstring jstring1 = (*env)->NewStringUTF(env, message); (*env)->CallVoidMethod(env, jobject1, jmethodId, jstring1); //\u91ca\u653e\u5f15\u7528 (*env)->DeleteLocalRef(env, jclazz); (*env)->DeleteLocalRef(env, jobject1); (*env)->DeleteLocalRef(env, jstring1); }","title":"\u7ed9\u5df2\u6709\u9879\u76ee\u6dfb\u52a0JNI/CMake\u652f\u6301"},{"location":"android/NDK/%E7%BB%99%E5%B7%B2%E6%9C%89%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0JNI%E6%94%AF%E6%8C%81/#buildgrald","text":"android { compileSdkVersion 28 buildToolsVersion \"29.0.1\" defaultConfig { ... //ndk so\u67b6\u6784\u7684\u9009\u62e9 ndk { abiFilters 'armeabi-v7a', 'arm64-v8a' } } ... //cmake\u6587\u4ef6\u7684\u67e5\u627e\u8def\u5f84 externalNativeBuild { cmake { path file('CMakeLists.txt') } } }","title":"\u5728\u8be5\u6a21\u5757\u4e0b\u7684build.grald\u6dfb\u52a0\u76f8\u5e94\u914d\u7f6e"},{"location":"android/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/blockcanary/","text":"","title":"Blockcanary"},{"location":"android/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/eventbus/","text":"","title":"Eventbus"},{"location":"android/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/glide/","text":"Glide \u60f3\u5f04\u660e\u767d\u7684\u95ee\u9898 \u600e\u4e48\u53d1\u8d77\u7684\u4e0b\u8f7d\u8bf7\u6c42 \u4e0b\u8f7d","title":"Glide"},{"location":"android/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/glide/#glide","text":"","title":"Glide"},{"location":"android/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/glide/#_1","text":"\u600e\u4e48\u53d1\u8d77\u7684\u4e0b\u8f7d\u8bf7\u6c42 \u4e0b\u8f7d","title":"\u60f3\u5f04\u660e\u767d\u7684\u95ee\u9898"},{"location":"android/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/leakcanary/","text":"","title":"Leakcanary"},{"location":"android/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/okhttp/","text":"","title":"Okhttp"},{"location":"android/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/retrofit/","text":"Retrofit \u5e26\u7740\u95ee\u9898\u770b\u6e90\u7801 \u6709\u4e86OkHttp\uff0c\u4e3a\u5565\u8981\u591a\u9020\u4e2aRetrofit\u51fa\u6765 \u90fd\u5728\u8bf4Retrofit\u7684 \u52a8\u6001\u4ee3\u7406 \uff0c\u90a3\u4e48\u4e3a\u5565Retrofit\u9700\u8981\u4f7f\u7528\u52a8\u6001\u4ee3\u7406 \u4e3a\u4ec0\u4e48Api\u7c7b\u8981\u8bbe\u8ba1\u6210\u63a5\u53e3 \u4e3a\u5565\u8bbe\u8ba1 ConverterFactory \u548c CallAdapterFactory \u4e00\u6b21\u8bf7\u6c42\u7684\u5b8c\u6574\u8fc7\u7a0b\uff0c\u662f\u5982\u4f55\u8f6c\u4ea4\u7ed9OkHttp\u7684 \u5982\u4f55\u628a\u6210\u529f\u7684\u56de\u8c03\u629b\u5230\u4e3b\u7ebf\u7a0b\u7684 \u600e\u4e48\u652f\u6301Kotlin\u7684\u534f\u7a0b\u7684 \u6709\u4e86OkHttp\uff0c\u4e3a\u5565\u8981\u591a\u9020\u4e2aRetrofit\u51fa\u6765 \u7b54\u6848\u5f88\u7b80\u5355\uff1a\u90a3\u5c31\u662f\u76f8\u5bf9\u4e8eOkHttp\u4f7f\u7528\u66f4\u65b9\u4fbf\uff0c\u6211\u81ea\u5df1\u7684\u7406\u89e3\u5c31\u662fRetrofit\u53ea\u662f\u5bf9OkHttp\u7684\u5c01\u88c5\u3002 \u90fd\u5728\u8bf4Retrofit\u7684\u52a8\u6001\u4ee3\u7406\uff0c\u90a3\u4e48\u4e3a\u5565Retrofit\u9700\u8981\u4f7f\u7528\u52a8\u6001\u4ee3\u7406 Proxy.newProxyInstance(service.getClassLoader(), new Class<?>[] { service }, new InvocationHandler() { private final Platform platform = Platform.get(); private final Object[] emptyArgs = new Object[0]; @Override public @Nullable Object invoke(Object proxy, Method method, @Nullable Object[] args) throws Throwable { return loadServiceMethod(method).invoke(args != null ? args : emptyArgs); } }); \u90a3\u4e3a\u5565Retrofit\u5c31\u8981\u7528\u52a8\u6001\u4ee3\u7406\u5462\uff1f\u7b54\u6848\u5c31\u662f\u7b80\u5355\uff0c\u65b9\u4fbf\uff0c\u7701\u4e8b\u3002\u5728 loadServiceMethod \u65b9\u6cd5\u4e2d\u6709\u5bf9\u8bf7\u6c42\u7684\u7edf\u4e00\u5904\u7406\uff0c\u89e3\u6790\u65b9\u6cd5\u4e0a\u7684 \u6ce8\u89e3 \uff0c \u8bf7\u6c42\u7c7b\u578b \uff0c \u54cd\u5e94\u7c7b\u578b \uff0c\u7136\u540e\u4ea4\u7ed9OkHttp\u53bb\u5904\u7406\u3002\u4e0d\u8d34\u6e90\u7801\u4e86\uff0c\u6e90\u7801\u8fd8\u662f\u8981\u81ea\u5df1\u770b\u624d\u9999\uff01 Proxy.newProxyInstance \u8fd4\u56de\u7684\u5c31\u662f \u52a8\u6001\u751f\u6210\u7684\u4ee3\u7406\u7c7b \uff0c\u5f53\u6211\u4eec\u8c03\u7528 \u4ee3\u7406\u7c7b.getXXX \u7b49\u8bf7\u6c42\u7f51\u7edc\u65b9\u6cd5\u65f6\uff0c\u5c31\u4f1a\u8c03\u7528 InvocationHandler.invoke \u65b9\u6cd5\u3002 invoke \u7684\u8fd4\u56de\u503c\u5c31\u662f\u5b9e\u9645\u65b9\u6cd5\u9700\u8981\u7684\u8fd4\u56de\u503c\u3002 \u90a3\u4e48\u52a8\u6001\u4ee3\u7406\u6709\u6027\u80fd\u5f71\u54cd\u5417\uff1f\u7b54\u6848\u80af\u5b9a\u662f\uff1a\u6709\u3002\u56e0\u4e3a\u4f7f\u7528\u5230\u4e86\u53cd\u5c04\u53bb\u52a8\u6001\u521b\u5efa\u4ee3\u7406\u7c7b\uff0c\u4f46\u662f\u8fd9\u4e2a\u6027\u80fd\u5f71\u54cd\u5b8c\u5168\u53ef\u4ee5\u5ffd\u7565\u3002\u66f4\u591a\u7684\u6027\u80fd\u5f71\u54cd\u662f\u5728 loadServiceMethod \u65b9\u6cd5\u9020\u6210\u7684\uff0c\u56e0\u4e3a loadServiceMethod \u4e2d\u6709\u4e00\u4e9b\u64cd\u4f5c\u662f\u653e\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u6267\u884c\u7684\uff0c\u4f8b\u5982\u77e5\u4e4e\u5c31\u9047\u5230\u4e86\u4ee3\u7406\u65b9\u6cd5\u9020\u6210\u8017\u65f6\u7684\u95ee\u9898\uff1a \u77e5\u4e4e\u5b89\u5353\u5ba2\u6237\u7aef\u542f\u52a8\u4f18\u5316 - Retrofit \u4ee3\u7406 \u3002\u4f18\u5316\u7684\u601d\u8def\u5c31\u662f\u628a \u4f7f\u7528 \u4e8c\u6b21\u52a8\u6001\u4ee3\u7406 \u628a loadServiceMethod() \u7684\u8c03\u7528\u6254\u5230 \u975e UI \u7ebf\u7a0b\u4e0a \u3002 \u8fd8\u6709\u6ca1\u6709\u529e\u6cd5\u7ee7\u7eed\u4f18\u5316\u0010\uff1f\u8bb2\u9053\u7406\u5e94\u8be5\u662f\u53ef\u4ee5\u7684\uff0c\u53ef\u4ee5\u50cf ButterKnife \u4e00\u6837\u4f7f\u7528 APT \u6280\u672f\u5728\u7f16\u8bd1\u65f6\u53bb\u521b\u5efa\u4ee3\u7406\u7c7b\uff0c\u76f4\u63a5\u4e0d\u4f7f\u7528\u52a8\u6001\u4ee3\u7406\uff0c\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u3002\u4f46\u662f\u8fd9\u6837\u5c31\u9700\u8981\u5bf9Retrofit\u7684\u6e90\u7801\u8fdb\u884c\u6539\u52a8\uff0c\u5e76\u4e14\u4e5f\u4f1a\u589e\u52a0\u7f16\u8bd1\u9636\u6bb5\u7684\u8017\u65f6\uff0c\u89c1\u4ec1\u89c1\u667a\u5427\uff0c\u5982\u4f55\u53d6\u820d\u770b\u81ea\u5df1\u3002 \u4e3a\u4ec0\u4e48Api\u7c7b\u8981\u8bbe\u8ba1\u6210\u63a5\u53e3 \u52a8\u6001\u4ee3\u7406\u8981\u6c42\u4ee3\u7406\u7684\u5bf9\u8c61\u5fc5\u987b\u662f\u63a5\u53e3\u6216\u8005\u5b9e\u73b0\u63a5\u53e3\u7684\u7c7b\u3002 \u4e3a\u5565\u8bbe\u8ba1ConverterFactory\u548cCallAdapterFactory ConverterFactory \u548c CallAdapterFactory \u90fd\u76f8\u5f53\u4e8e\u4e00\u79cd \u9002\u914d\u5668 \u6a21\u5f0f\u3002 \u4e00\u4e2a\u63d0\u4f9b\u4e86 \u8bf7\u6c42\u548c\u54cd\u5e94\u6570\u636e \u7684\u9002\u914d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 Gson \uff0c Jackson \uff0c Moshi \u7b49\u4e0d\u540c\u7684\u53cd\u5e8f\u5217\u5316\u5e93\u3002 \u4e00\u4e2a\u63d0\u4f9b\u4e86 \u8bf7\u6c42\u65b9\u5f0f\u7684 \u9002\u914d\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 RxJava \uff0c LiveData \uff0c \u534f\u7a0b \u7b49\u4e0d\u540c\u7684\u65b9\u5f0f\u53bb\u53d1\u9001HTTP\u8bf7\u6c42\u3002 \u4e00\u6b21\u8bf7\u6c42\u7684\u5b8c\u6574\u8fc7\u7a0b\uff0c\u662f\u5982\u4f55\u8f6c\u4ea4\u7ed9OkHttp\u7684 \u4e00\u6b21\u8bf7\u6c42\u53d1\u8d77\u5c31\u4f1a\u56de\u8c03 InvocationHandler\u7684invoke \u65b9\u6cd5\uff0c loadServiceMethod \u65b9\u6cd5\u4f1a\u5148\u53bb\u627e\u662f\u5426\u6709 ServiceMethod \u7684\u7f13\u5b58\uff0c\u6ca1\u6709\u5c31\u89e3\u6790\u4e00\u6b21 Method \u7684\u6240\u6709\u6ce8\u89e3\u62fc\u88c5\u6210 ServiceMethod \u518d\u7f13\u5b58\u4e0b\u6765\u3002 //Retrofit ServiceMethod<?> loadServiceMethod(Method method) { ServiceMethod<?> result = serviceMethodCache.get(method); if (result != null) return result; synchronized (serviceMethodCache) { result = serviceMethodCache.get(method); if (result == null) { result = ServiceMethod.parseAnnotations(this, method); serviceMethodCache.put(method, result); } } return result; } \u7136\u540e\u8c03\u7528 ServiceMethod \u7684 invoke \u65b9\u6cd5\uff0c ServiceMethod \u7684\u76f4\u63a5\u5b50\u7c7b\u662f HttpServiceMethod \uff0c\u5e76\u4e14\u53ea\u6709\u5b83\u5b9e\u73b0\u4e86 invoke \u62bd\u8c61\u65b9\u6cd5\uff0c\u5e76\u4e14\u6807\u8bb0\u6210\u4e86 final \u3002 //HttpServiceMethod @Override final @Nullable ReturnT invoke(Object[] args) { Call<ResponseT> call = new OkHttpCall<>(requestFactory, args, callFactory, responseConverter); return adapt(call, args); } \u4ece\u4e0a\u9762\u770b\u51fa\u8fd9\u91cc\u521b\u5efa\u4e86\u4e00\u4e2a OkHttpCall \u5bf9\u8c61\uff0c\u5b83\u662f Call \u5bf9\u8c61\u7684\u5b50\u7c7b\uff0c\u5e76\u4e14\u8c03\u7528\u4e86 adapt \u8fd9\u4e2a\u65b9\u6cd5\uff0c adapt \u662f HttpServiceMethod \u7684\u4e00\u4e2a \u62bd\u8c61\u65b9\u6cd5 \u3002 //HttpServiceMethod protected abstract @Nullable ReturnT adapt(Call<ResponseT> call, Object[] args); HttpServiceMethod \u7684\u5b50\u7c7b\u6709 CallAdapted \uff0c SuspendForResponse \uff0c SuspendForBody \uff0c\u4ece\u5b50\u7c7b\u7684 adapt \u65b9\u6cd5\u5b9e\u73b0\u53ef\u4ee5\u770b\u51fa\u53c8\u662f\u4e00\u4e2a callAdapter \u4ee3\u7406\u4e86 adapt \u65b9\u6cd5\u3002 //HttpServiceMethod static final class CallAdapted<ResponseT, ReturnT> extends HttpServiceMethod<ResponseT, ReturnT> { private final CallAdapter<ResponseT, ReturnT> callAdapter; CallAdapted(RequestFactory requestFactory, okhttp3.Call.Factory callFactory, Converter<ResponseBody, ResponseT> responseConverter, CallAdapter<ResponseT, ReturnT> callAdapter) { super(requestFactory, callFactory, responseConverter); this.callAdapter = callAdapter; } @Override protected ReturnT adapt(Call<ResponseT> call, Object[] args) { return callAdapter.adapt(call); } } callAdapter \u90fd\u662f\u5728 \u6784\u9020\u65b9\u6cd5 \u4e2d\u4f20\u5165\u8fdb\u6765\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u627e\u5230 \u6784\u9020\u65b9\u6cd5 \u5728\u54ea\u91cc\u5b9e\u4f8b\u5316\u7684\uff0c\u5c31\u80fd\u6162\u6162\u627e\u5230 callAdpater \u662f\u4e2a\u4ec0\u4e48\u4e1c\u897f\u4e86\u3002 \u5176\u5b9e\u4ece\u4e0a\u9762\u7684\u6e90\u7801\u5206\u6790\u4e5f\u53ef\u4ee5\u63a8\u65ad\u51fa\uff0c CallAdapted\u7c7b \uff0c SuspendForResponse\u7c7b \u90fd\u662f ServiceMethod \u7684\u5b50\u7c7b\uff0c\u6682\u65f6\u7528\u5230\u4e86 ServiceMethod \u7684\u5730\u65b9\u5c31\u662f loadServiceMethod\u65b9\u6cd5 \uff0c\u7136\u540e\u7ee7\u7eed\u6df1\u5165\u5c31\u662f HttpServiceMethod \u7684 parseAnnotations \u65b9\u6cd5\u3002\u679c\u4e0d\u5176\u7136\uff0c\u4e0a\u9762\u51e0\u4e2a\u5b50\u7c7b\u90fd\u662f\u5728\u8fd9\u91cc\u5b9e\u4f8b\u5316\u7684\u3002 //HttpServiceMethod static <ResponseT, ReturnT> HttpServiceMethod<ResponseT, ReturnT> parseAnnotations( Retrofit retrofit, Method method, RequestFactory requestFactory) { //...\u7701\u7565\u6389\u4e0d\u76f8\u5173\u7684\u4ee3\u7801 CallAdapter<ResponseT, ReturnT> callAdapter = createCallAdapter(retrofit, method, adapterType, annotations); //...\u7701\u7565\u6389\u4e0d\u76f8\u5173\u7684\u4ee3\u7801 //\u5982\u679c\u4e0d\u662fKotlin\u7684suspend\u6807\u6ce8\u7684\u65b9\u6cd5 if (!isKotlinSuspendFunction) { return new CallAdapted<>(requestFactory, callFactory, responseConverter, callAdapter); } else if (continuationWantsResponse) { //noinspection unchecked Kotlin compiler guarantees ReturnT to be Object. return (HttpServiceMethod<ResponseT, ReturnT>) new SuspendForResponse<>(requestFactory, callFactory, responseConverter, (CallAdapter<ResponseT, Call<ResponseT>>) callAdapter); } else { //noinspection unchecked Kotlin compiler guarantees ReturnT to be Object. return (HttpServiceMethod<ResponseT, ReturnT>) new SuspendForBody<>(requestFactory, callFactory, responseConverter, (CallAdapter<ResponseT, Call<ResponseT>>) callAdapter, continuationBodyNullable); } } callAdapter \u7531 createCallAdapter \u65b9\u6cd5\u8fd4\u56de\uff0c createCallAdapter \u53c8\u662f\u8c03\u7528\u4e86 retrofit.callAdapter(returnType, annotations) \u65b9\u6cd5\uff0c\u5176\u5185\u90e8\u662f\u8c03\u7528\u4e86 Retrofit \u7684 nextCallAdapter \u65b9\u6cd5\uff0c\u786e\u5b9e\u633a\u7ed5\u7684\u3002 //Retrofit public CallAdapter<?, ?> nextCallAdapter(@Nullable CallAdapter.Factory skipPast, Type returnType, Annotation[] annotations) { ... int start = callAdapterFactories.indexOf(skipPast) + 1; for (int i = start, count = callAdapterFactories.size(); i < count; i++) { CallAdapter<?, ?> adapter = callAdapterFactories.get(i).get(returnType, annotations, this); if (adapter != null) { return adapter; } } ... } \u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c nextCallAdapter \u65b9\u6cd5\u5c31\u662f\u4ece callAdapterFactories \u96c6\u5408\u4e2d\u627e\u51fa\u4e00\u4e2a CallAdapter.Factory \uff0c\u7136\u540e\u8c03\u7528\u5176 get\u65b9\u6cd5 \u8fd4\u56de\u4e00\u4e2a CallAdapter \uff0c\u4e0d\u4e3anull\u5c31\u76f4\u63a5\u8fd4\u56de\u8be5\u5bf9\u8c61\u3002\u6240\u4ee5\u6211\u4eec\u8981\u5148\u627e\u5230 callAdapterFactories \u96c6\u5408\u662f\u5728\u54ea\u91cc\u521d\u59cb\u5316\u7684\uff0c callAdapterFactories \u5728 Retrofit \u7684\u6784\u9020\u65b9\u6cd5\u91cc\u9762\u8d4b\u503c\uff0c\u7136\u540e Retrofit \u7531 Builder.build() \u65b9\u6cd5\u8c03\u7528\u3002 //Retrofit.Builder public Retrofit build() { ... // Make a defensive copy of the adapters and add the default Call adapter. List<CallAdapter.Factory> callAdapterFactories = new ArrayList<>(this.callAdapterFactories); //\u8fd9\u91cc\u6dfb\u52a0\u4e86\u4e00\u4e2a\u9ed8\u8ba4CallAdapter callAdapterFactories.addAll(platform.defaultCallAdapterFactories(callbackExecutor)); ... return new Retrofit(callFactory, baseUrl, unmodifiableList(converterFactories), unmodifiableList(callAdapterFactories), callbackExecutor, validateEagerly); } platform.defaultCallAdapterFactorie \u8fd4\u56de\u4e00\u4e2a\u9ed8\u8ba4\u7684 CallAdapter.Factory \u96c6\u5408\uff0c\u4f46\u662f\u76ee\u524d\u6e90\u7801\u91cc\u9762\u96c6\u5408\u53ea\u6709\u4e00\u4e2a DefaultCallAdapterFactory \u3002 //Platform List<? extends CallAdapter.Factory> defaultCallAdapterFactories( @Nullable Executor callbackExecutor) { return singletonList(new DefaultCallAdapterFactory(callbackExecutor)); } \u6240\u4ee5\u73b0\u5728\u6211\u4eec\u53ea\u7528\u5173\u5fc3 DefaultCallAdapterFactory \u7684 get \u65b9\u6cd5\u8fd4\u56de\u662f\u5565\u5c31\u884c\u4e86\u3002 //DefaultCallAdapterFactory @Override public @Nullable CallAdapter<?, ?> get( Type returnType, Annotation[] annotations, Retrofit retrofit) { //\u662f\u5426\u5728HTTP\u8bf7\u6c42\u65b9\u6cd5\u4e0a\u6dfb\u52a0\u4e86SkipCallbackExecutor\u6ce8\u89e3 final Executor executor = Utils.isAnnotationPresent(annotations, SkipCallbackExecutor.class) ? null : callbackExecutor; //...\u7701\u7565\u5176\u4ed6\u65e0\u5173\u4ee3\u7801 return new CallAdapter<Object, Call<?>>() { @Override public Type responseType() { return responseType; } @Override public Call<Object> adapt(Call<Object> call) { return executor == null ? call : new ExecutorCallbackCall<>(executor, call); } }; } \u4ece\u4e0a\u9762\u4ee3\u7801\u770b\u51fa\uff0c\u5c31\u662f\u76f4\u63a5\u8fd4\u56de\u4e86\u4e00\u4e2a\u65b0\u7684 CallAdapter \u800c\u5df2\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53ea\u7528\u5173\u5fc3 CallAdapter \u7684 adapt\u65b9\u6cd5 \u5c31\u884c\u3002 adapt \u8fd4\u56de\u4e00\u4e2a Call \u5bf9\u8c61\uff0c\u8fd9\u4e0d\u5c31\u662f Retrofit \u9ed8\u8ba4\u8bf7\u6c42\u8981\u6dfb\u52a0\u7684\u90a3\u4e2a Call \u561b\u3002\u4e5f\u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u63a8\u65ad\u51fa executor \u4e00\u822c\u60c5\u51b5\u90fd\u4e0d\u4f1a\u662f null \u7684\uff0c\u6240\u4ee5\u4ee3\u7801\u4f1a\u8d70 new ExecutorCallbackCall \u5206\u652f\uff0c\u73b0\u5728\u6211\u4eec\u53c8\u8981\u5f00\u59cb\u5206\u6790 ExecutorCallbackCall \u4e86\u3002 //DefaultCallAdapterFactory static final class ExecutorCallbackCall<T> implements Call<T> { final Executor callbackExecutor; final Call<T> delegate; ExecutorCallbackCall(Executor callbackExecutor, Call<T> delegate) { this.callbackExecutor = callbackExecutor; this.delegate = delegate; } @Override public void enqueue(final Callback<T> callback) { checkNotNull(callback, \"callback == null\"); delegate.enqueue(new Callback<T>() { @Override public void onResponse(Call<T> call, final Response<T> response) { callbackExecutor.execute(new Runnable() { @Override public void run() { if (delegate.isCanceled()) { // Emulate OkHttp's behavior of throwing/delivering an IOException on cancellation. callback.onFailure(ExecutorCallbackCall.this, new IOException(\"Canceled\")); } else { callback.onResponse(ExecutorCallbackCall.this, response); } } }); } } ExecutorCallbackCall \u662f\u5b9e\u73b0 Call \u7684\u5b50\u7c7b\uff0c\u6240\u4ee5\u5b83\u80af\u5b9a\u662f\u6709 enqueue \u548c execute \u65b9\u6cd5\u7684\uff0c\u4f46\u662f\u5176\u5b9e\u6267\u884c\u8bf7\u6c42\u5374\u662f delegate \u8fd9\u4e2a\u4ee3\u7406\u7c7b\uff0c callbackExecutor \u5c31\u662f\u628a\u54cd\u5e94\u629b\u5230\u4e3b\u7ebf\u7a0b\u7684\u6267\u884c\u7c7b\uff0c\u540e\u9762\u5c0f\u8282\u4f1a\u8bb2\u5230\u3002 \u73b0\u5728\u4e3b\u8981\u5206\u6790 delegate \u8fd9\u4e2a\u4ee3\u7406\u7c7b\uff0c\u4ece\u524d\u9762\u7684\u5206\u6790\u5df2\u7ecf\u77e5\u9053\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u73b0\u7c7b\u5c31\u662f OkHttpCall \uff0c\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8 OkHttpCall \u7684 enqueue \u6216 execute \u5c31\u884c\u3002 //OkHttpCall public void enqueue(final Callback<T> callback) { //... synchronized (this) { //... call = rawCall = createRawCall(); //... } call.enqueue(new okhttp3.Callback() { @Override public void onResponse(okhttp3.Call call, okhttp3.Response rawResponse) { //\u89e3\u6790\u54cd\u5e94\u4f53 response = parseResponse(rawResponse); //... //\u56de\u8c03\u54cd\u5e94 callback.onResponse(OkHttpCall.this, response); } @Override public void onFailure(okhttp3.Call call, IOException e) { //\u56de\u8c03\u5f02\u5e38 callFailure(e); } }); } createRawCall \u65b9\u6cd5\u662f\u521b\u5efaOkHttp\u8bf7\u6c42\u7c7b\u7684\u65b9\u6cd5 // OkHttpCall private okhttp3.Call createRawCall() throws IOException { okhttp3.Call call = callFactory.newCall(requestFactory.create(args)); if (call == null) { throw new NullPointerException(\"Call.Factory returned null.\"); } return call; } callFactory \u53d8\u91cf\u5176\u5b9e\u5c31\u662f OkHttpClient \u5b9e\u4f8b\uff0c\u5728 Retrofit \u7684 Builder \u4e2d\u4f20\u5165\uff0c\u5982\u679c\u6ca1\u6709\u4f20\u5165\u7684\u5c31\u662f\u81ea\u5df1\u5b9e\u4f8b\u5316\u4e00\u4e2a OkHttpClient \u3002 requestFactory.create(args) \u65b9\u6cd5\u5c31\u662f\u5c06\u8bf7\u6c42\u53c2\u6570\u62fc\u88c5\u6210 OkHttp \u9700\u8981\u7684 Request \u7c7b\u3002 //Retrofit public Retrofit build() { //... okhttp3.Call.Factory callFactory = this.callFactory; if (callFactory == null) { callFactory = new OkHttpClient(); } parseResponse \u662f\u89e3\u6790\u54cd\u5e94\u4f53\u7684\u65b9\u6cd5\uff0c\u65b9\u9762\u91cc\u9762\u8fd8\u4f7f\u7528\u4e86 converter \u6765\u8f6c\u6362\u6570\u636e\u3002 // Response<T> parseResponse(okhttp3.Response rawResponse) throws IOException { //... T body = responseConverter.convert(catchingBody); return Response.success(body, rawResponse); //... } \u5982\u4f55\u628a\u6210\u529f\u7684\u56de\u8c03\u629b\u5230\u4e3b\u7ebf\u7a0b\u7684 //Retrofit public Retrofit build() { Executor callbackExecutor = this.callbackExecutor; if (callbackExecutor == null) { callbackExecutor = platform.defaultCallbackExecutor(); } } \u5982\u679c Retrofit.Builder \u6ca1\u6709\u8c03\u7528 callbackExecutor(Executor executor) \u65b9\u6cd5\u4f20\u5165 Executor \uff0c\u90a3\u5c31\u7528\u9ed8\u8ba4\u7684 defaultCallbackExecutor \u3002 DefaultCallAdapterFactory.ExecutorCallbackCall \u7684 callbackExecutor //Platform-Android static class MainThreadExecutor implements Executor { private final Handler handler = new Handler(Looper.getMainLooper()); @Override public void execute(Runnable r) { handler.post(r); } } \u600e\u4e48\u652f\u6301Kotlin\u7684\u534f\u7a0b\u7684 suspend \u51fd\u6570\u7f16\u8bd1\u6210\u4e86 Continuation \u7c7b\uff0c\u53ef\u4ee5\u81ea\u5df1\u7528AS\u7684 decompile \u529f\u80fd\u9a8c\u8bc1\u3002\u6700\u7ec8\u4f7f\u7528 SuspendForBody \u7c7b\u6765\u53d1\u8d77\u8bf7\u6c42\uff0c\u5b83\u4e5f\u662f HttpServiceMethod \u7684\u5b50\u7c7b\u3002 static final class SuspendForBody<ResponseT> extends HttpServiceMethod<ResponseT, Object> { //... @Override protected Object adapt(Call<ResponseT> call, Object[] args) { call = callAdapter.adapt(call); //noinspection unchecked Checked by reflection inside RequestFactory. Continuation<ResponseT> continuation = (Continuation<ResponseT>) args[args.length - 1]; return isNullable ? KotlinExtensions.awaitNullable(call, continuation) : KotlinExtensions.await(call, continuation); } } \u5e76\u901a\u8fc7\u6269\u5c55\u51fd\u6570\u7ed9 Retrofit \u7684 Call \u7c7b\u589e\u52a0\u4e86 await \u7684\u6269\u5c55\u51fd\u6570","title":"Retrofit"},{"location":"android/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/retrofit/#retrofit","text":"","title":"Retrofit"},{"location":"android/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/retrofit/#_1","text":"\u6709\u4e86OkHttp\uff0c\u4e3a\u5565\u8981\u591a\u9020\u4e2aRetrofit\u51fa\u6765 \u90fd\u5728\u8bf4Retrofit\u7684 \u52a8\u6001\u4ee3\u7406 \uff0c\u90a3\u4e48\u4e3a\u5565Retrofit\u9700\u8981\u4f7f\u7528\u52a8\u6001\u4ee3\u7406 \u4e3a\u4ec0\u4e48Api\u7c7b\u8981\u8bbe\u8ba1\u6210\u63a5\u53e3 \u4e3a\u5565\u8bbe\u8ba1 ConverterFactory \u548c CallAdapterFactory \u4e00\u6b21\u8bf7\u6c42\u7684\u5b8c\u6574\u8fc7\u7a0b\uff0c\u662f\u5982\u4f55\u8f6c\u4ea4\u7ed9OkHttp\u7684 \u5982\u4f55\u628a\u6210\u529f\u7684\u56de\u8c03\u629b\u5230\u4e3b\u7ebf\u7a0b\u7684 \u600e\u4e48\u652f\u6301Kotlin\u7684\u534f\u7a0b\u7684","title":"\u5e26\u7740\u95ee\u9898\u770b\u6e90\u7801"},{"location":"android/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/retrofit/#okhttpretrofit","text":"\u7b54\u6848\u5f88\u7b80\u5355\uff1a\u90a3\u5c31\u662f\u76f8\u5bf9\u4e8eOkHttp\u4f7f\u7528\u66f4\u65b9\u4fbf\uff0c\u6211\u81ea\u5df1\u7684\u7406\u89e3\u5c31\u662fRetrofit\u53ea\u662f\u5bf9OkHttp\u7684\u5c01\u88c5\u3002","title":"\u6709\u4e86OkHttp\uff0c\u4e3a\u5565\u8981\u591a\u9020\u4e2aRetrofit\u51fa\u6765"},{"location":"android/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/retrofit/#retrofitretrofit","text":"Proxy.newProxyInstance(service.getClassLoader(), new Class<?>[] { service }, new InvocationHandler() { private final Platform platform = Platform.get(); private final Object[] emptyArgs = new Object[0]; @Override public @Nullable Object invoke(Object proxy, Method method, @Nullable Object[] args) throws Throwable { return loadServiceMethod(method).invoke(args != null ? args : emptyArgs); } }); \u90a3\u4e3a\u5565Retrofit\u5c31\u8981\u7528\u52a8\u6001\u4ee3\u7406\u5462\uff1f\u7b54\u6848\u5c31\u662f\u7b80\u5355\uff0c\u65b9\u4fbf\uff0c\u7701\u4e8b\u3002\u5728 loadServiceMethod \u65b9\u6cd5\u4e2d\u6709\u5bf9\u8bf7\u6c42\u7684\u7edf\u4e00\u5904\u7406\uff0c\u89e3\u6790\u65b9\u6cd5\u4e0a\u7684 \u6ce8\u89e3 \uff0c \u8bf7\u6c42\u7c7b\u578b \uff0c \u54cd\u5e94\u7c7b\u578b \uff0c\u7136\u540e\u4ea4\u7ed9OkHttp\u53bb\u5904\u7406\u3002\u4e0d\u8d34\u6e90\u7801\u4e86\uff0c\u6e90\u7801\u8fd8\u662f\u8981\u81ea\u5df1\u770b\u624d\u9999\uff01 Proxy.newProxyInstance \u8fd4\u56de\u7684\u5c31\u662f \u52a8\u6001\u751f\u6210\u7684\u4ee3\u7406\u7c7b \uff0c\u5f53\u6211\u4eec\u8c03\u7528 \u4ee3\u7406\u7c7b.getXXX \u7b49\u8bf7\u6c42\u7f51\u7edc\u65b9\u6cd5\u65f6\uff0c\u5c31\u4f1a\u8c03\u7528 InvocationHandler.invoke \u65b9\u6cd5\u3002 invoke \u7684\u8fd4\u56de\u503c\u5c31\u662f\u5b9e\u9645\u65b9\u6cd5\u9700\u8981\u7684\u8fd4\u56de\u503c\u3002 \u90a3\u4e48\u52a8\u6001\u4ee3\u7406\u6709\u6027\u80fd\u5f71\u54cd\u5417\uff1f\u7b54\u6848\u80af\u5b9a\u662f\uff1a\u6709\u3002\u56e0\u4e3a\u4f7f\u7528\u5230\u4e86\u53cd\u5c04\u53bb\u52a8\u6001\u521b\u5efa\u4ee3\u7406\u7c7b\uff0c\u4f46\u662f\u8fd9\u4e2a\u6027\u80fd\u5f71\u54cd\u5b8c\u5168\u53ef\u4ee5\u5ffd\u7565\u3002\u66f4\u591a\u7684\u6027\u80fd\u5f71\u54cd\u662f\u5728 loadServiceMethod \u65b9\u6cd5\u9020\u6210\u7684\uff0c\u56e0\u4e3a loadServiceMethod \u4e2d\u6709\u4e00\u4e9b\u64cd\u4f5c\u662f\u653e\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u6267\u884c\u7684\uff0c\u4f8b\u5982\u77e5\u4e4e\u5c31\u9047\u5230\u4e86\u4ee3\u7406\u65b9\u6cd5\u9020\u6210\u8017\u65f6\u7684\u95ee\u9898\uff1a \u77e5\u4e4e\u5b89\u5353\u5ba2\u6237\u7aef\u542f\u52a8\u4f18\u5316 - Retrofit \u4ee3\u7406 \u3002\u4f18\u5316\u7684\u601d\u8def\u5c31\u662f\u628a \u4f7f\u7528 \u4e8c\u6b21\u52a8\u6001\u4ee3\u7406 \u628a loadServiceMethod() \u7684\u8c03\u7528\u6254\u5230 \u975e UI \u7ebf\u7a0b\u4e0a \u3002 \u8fd8\u6709\u6ca1\u6709\u529e\u6cd5\u7ee7\u7eed\u4f18\u5316\u0010\uff1f\u8bb2\u9053\u7406\u5e94\u8be5\u662f\u53ef\u4ee5\u7684\uff0c\u53ef\u4ee5\u50cf ButterKnife \u4e00\u6837\u4f7f\u7528 APT \u6280\u672f\u5728\u7f16\u8bd1\u65f6\u53bb\u521b\u5efa\u4ee3\u7406\u7c7b\uff0c\u76f4\u63a5\u4e0d\u4f7f\u7528\u52a8\u6001\u4ee3\u7406\uff0c\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u3002\u4f46\u662f\u8fd9\u6837\u5c31\u9700\u8981\u5bf9Retrofit\u7684\u6e90\u7801\u8fdb\u884c\u6539\u52a8\uff0c\u5e76\u4e14\u4e5f\u4f1a\u589e\u52a0\u7f16\u8bd1\u9636\u6bb5\u7684\u8017\u65f6\uff0c\u89c1\u4ec1\u89c1\u667a\u5427\uff0c\u5982\u4f55\u53d6\u820d\u770b\u81ea\u5df1\u3002","title":"\u90fd\u5728\u8bf4Retrofit\u7684\u52a8\u6001\u4ee3\u7406\uff0c\u90a3\u4e48\u4e3a\u5565Retrofit\u9700\u8981\u4f7f\u7528\u52a8\u6001\u4ee3\u7406"},{"location":"android/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/retrofit/#api","text":"\u52a8\u6001\u4ee3\u7406\u8981\u6c42\u4ee3\u7406\u7684\u5bf9\u8c61\u5fc5\u987b\u662f\u63a5\u53e3\u6216\u8005\u5b9e\u73b0\u63a5\u53e3\u7684\u7c7b\u3002","title":"\u4e3a\u4ec0\u4e48Api\u7c7b\u8981\u8bbe\u8ba1\u6210\u63a5\u53e3"},{"location":"android/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/retrofit/#converterfactorycalladapterfactory","text":"ConverterFactory \u548c CallAdapterFactory \u90fd\u76f8\u5f53\u4e8e\u4e00\u79cd \u9002\u914d\u5668 \u6a21\u5f0f\u3002 \u4e00\u4e2a\u63d0\u4f9b\u4e86 \u8bf7\u6c42\u548c\u54cd\u5e94\u6570\u636e \u7684\u9002\u914d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 Gson \uff0c Jackson \uff0c Moshi \u7b49\u4e0d\u540c\u7684\u53cd\u5e8f\u5217\u5316\u5e93\u3002 \u4e00\u4e2a\u63d0\u4f9b\u4e86 \u8bf7\u6c42\u65b9\u5f0f\u7684 \u9002\u914d\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 RxJava \uff0c LiveData \uff0c \u534f\u7a0b \u7b49\u4e0d\u540c\u7684\u65b9\u5f0f\u53bb\u53d1\u9001HTTP\u8bf7\u6c42\u3002","title":"\u4e3a\u5565\u8bbe\u8ba1ConverterFactory\u548cCallAdapterFactory"},{"location":"android/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/retrofit/#okhttp","text":"\u4e00\u6b21\u8bf7\u6c42\u53d1\u8d77\u5c31\u4f1a\u56de\u8c03 InvocationHandler\u7684invoke \u65b9\u6cd5\uff0c loadServiceMethod \u65b9\u6cd5\u4f1a\u5148\u53bb\u627e\u662f\u5426\u6709 ServiceMethod \u7684\u7f13\u5b58\uff0c\u6ca1\u6709\u5c31\u89e3\u6790\u4e00\u6b21 Method \u7684\u6240\u6709\u6ce8\u89e3\u62fc\u88c5\u6210 ServiceMethod \u518d\u7f13\u5b58\u4e0b\u6765\u3002 //Retrofit ServiceMethod<?> loadServiceMethod(Method method) { ServiceMethod<?> result = serviceMethodCache.get(method); if (result != null) return result; synchronized (serviceMethodCache) { result = serviceMethodCache.get(method); if (result == null) { result = ServiceMethod.parseAnnotations(this, method); serviceMethodCache.put(method, result); } } return result; } \u7136\u540e\u8c03\u7528 ServiceMethod \u7684 invoke \u65b9\u6cd5\uff0c ServiceMethod \u7684\u76f4\u63a5\u5b50\u7c7b\u662f HttpServiceMethod \uff0c\u5e76\u4e14\u53ea\u6709\u5b83\u5b9e\u73b0\u4e86 invoke \u62bd\u8c61\u65b9\u6cd5\uff0c\u5e76\u4e14\u6807\u8bb0\u6210\u4e86 final \u3002 //HttpServiceMethod @Override final @Nullable ReturnT invoke(Object[] args) { Call<ResponseT> call = new OkHttpCall<>(requestFactory, args, callFactory, responseConverter); return adapt(call, args); } \u4ece\u4e0a\u9762\u770b\u51fa\u8fd9\u91cc\u521b\u5efa\u4e86\u4e00\u4e2a OkHttpCall \u5bf9\u8c61\uff0c\u5b83\u662f Call \u5bf9\u8c61\u7684\u5b50\u7c7b\uff0c\u5e76\u4e14\u8c03\u7528\u4e86 adapt \u8fd9\u4e2a\u65b9\u6cd5\uff0c adapt \u662f HttpServiceMethod \u7684\u4e00\u4e2a \u62bd\u8c61\u65b9\u6cd5 \u3002 //HttpServiceMethod protected abstract @Nullable ReturnT adapt(Call<ResponseT> call, Object[] args); HttpServiceMethod \u7684\u5b50\u7c7b\u6709 CallAdapted \uff0c SuspendForResponse \uff0c SuspendForBody \uff0c\u4ece\u5b50\u7c7b\u7684 adapt \u65b9\u6cd5\u5b9e\u73b0\u53ef\u4ee5\u770b\u51fa\u53c8\u662f\u4e00\u4e2a callAdapter \u4ee3\u7406\u4e86 adapt \u65b9\u6cd5\u3002 //HttpServiceMethod static final class CallAdapted<ResponseT, ReturnT> extends HttpServiceMethod<ResponseT, ReturnT> { private final CallAdapter<ResponseT, ReturnT> callAdapter; CallAdapted(RequestFactory requestFactory, okhttp3.Call.Factory callFactory, Converter<ResponseBody, ResponseT> responseConverter, CallAdapter<ResponseT, ReturnT> callAdapter) { super(requestFactory, callFactory, responseConverter); this.callAdapter = callAdapter; } @Override protected ReturnT adapt(Call<ResponseT> call, Object[] args) { return callAdapter.adapt(call); } } callAdapter \u90fd\u662f\u5728 \u6784\u9020\u65b9\u6cd5 \u4e2d\u4f20\u5165\u8fdb\u6765\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u627e\u5230 \u6784\u9020\u65b9\u6cd5 \u5728\u54ea\u91cc\u5b9e\u4f8b\u5316\u7684\uff0c\u5c31\u80fd\u6162\u6162\u627e\u5230 callAdpater \u662f\u4e2a\u4ec0\u4e48\u4e1c\u897f\u4e86\u3002 \u5176\u5b9e\u4ece\u4e0a\u9762\u7684\u6e90\u7801\u5206\u6790\u4e5f\u53ef\u4ee5\u63a8\u65ad\u51fa\uff0c CallAdapted\u7c7b \uff0c SuspendForResponse\u7c7b \u90fd\u662f ServiceMethod \u7684\u5b50\u7c7b\uff0c\u6682\u65f6\u7528\u5230\u4e86 ServiceMethod \u7684\u5730\u65b9\u5c31\u662f loadServiceMethod\u65b9\u6cd5 \uff0c\u7136\u540e\u7ee7\u7eed\u6df1\u5165\u5c31\u662f HttpServiceMethod \u7684 parseAnnotations \u65b9\u6cd5\u3002\u679c\u4e0d\u5176\u7136\uff0c\u4e0a\u9762\u51e0\u4e2a\u5b50\u7c7b\u90fd\u662f\u5728\u8fd9\u91cc\u5b9e\u4f8b\u5316\u7684\u3002 //HttpServiceMethod static <ResponseT, ReturnT> HttpServiceMethod<ResponseT, ReturnT> parseAnnotations( Retrofit retrofit, Method method, RequestFactory requestFactory) { //...\u7701\u7565\u6389\u4e0d\u76f8\u5173\u7684\u4ee3\u7801 CallAdapter<ResponseT, ReturnT> callAdapter = createCallAdapter(retrofit, method, adapterType, annotations); //...\u7701\u7565\u6389\u4e0d\u76f8\u5173\u7684\u4ee3\u7801 //\u5982\u679c\u4e0d\u662fKotlin\u7684suspend\u6807\u6ce8\u7684\u65b9\u6cd5 if (!isKotlinSuspendFunction) { return new CallAdapted<>(requestFactory, callFactory, responseConverter, callAdapter); } else if (continuationWantsResponse) { //noinspection unchecked Kotlin compiler guarantees ReturnT to be Object. return (HttpServiceMethod<ResponseT, ReturnT>) new SuspendForResponse<>(requestFactory, callFactory, responseConverter, (CallAdapter<ResponseT, Call<ResponseT>>) callAdapter); } else { //noinspection unchecked Kotlin compiler guarantees ReturnT to be Object. return (HttpServiceMethod<ResponseT, ReturnT>) new SuspendForBody<>(requestFactory, callFactory, responseConverter, (CallAdapter<ResponseT, Call<ResponseT>>) callAdapter, continuationBodyNullable); } } callAdapter \u7531 createCallAdapter \u65b9\u6cd5\u8fd4\u56de\uff0c createCallAdapter \u53c8\u662f\u8c03\u7528\u4e86 retrofit.callAdapter(returnType, annotations) \u65b9\u6cd5\uff0c\u5176\u5185\u90e8\u662f\u8c03\u7528\u4e86 Retrofit \u7684 nextCallAdapter \u65b9\u6cd5\uff0c\u786e\u5b9e\u633a\u7ed5\u7684\u3002 //Retrofit public CallAdapter<?, ?> nextCallAdapter(@Nullable CallAdapter.Factory skipPast, Type returnType, Annotation[] annotations) { ... int start = callAdapterFactories.indexOf(skipPast) + 1; for (int i = start, count = callAdapterFactories.size(); i < count; i++) { CallAdapter<?, ?> adapter = callAdapterFactories.get(i).get(returnType, annotations, this); if (adapter != null) { return adapter; } } ... } \u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c nextCallAdapter \u65b9\u6cd5\u5c31\u662f\u4ece callAdapterFactories \u96c6\u5408\u4e2d\u627e\u51fa\u4e00\u4e2a CallAdapter.Factory \uff0c\u7136\u540e\u8c03\u7528\u5176 get\u65b9\u6cd5 \u8fd4\u56de\u4e00\u4e2a CallAdapter \uff0c\u4e0d\u4e3anull\u5c31\u76f4\u63a5\u8fd4\u56de\u8be5\u5bf9\u8c61\u3002\u6240\u4ee5\u6211\u4eec\u8981\u5148\u627e\u5230 callAdapterFactories \u96c6\u5408\u662f\u5728\u54ea\u91cc\u521d\u59cb\u5316\u7684\uff0c callAdapterFactories \u5728 Retrofit \u7684\u6784\u9020\u65b9\u6cd5\u91cc\u9762\u8d4b\u503c\uff0c\u7136\u540e Retrofit \u7531 Builder.build() \u65b9\u6cd5\u8c03\u7528\u3002 //Retrofit.Builder public Retrofit build() { ... // Make a defensive copy of the adapters and add the default Call adapter. List<CallAdapter.Factory> callAdapterFactories = new ArrayList<>(this.callAdapterFactories); //\u8fd9\u91cc\u6dfb\u52a0\u4e86\u4e00\u4e2a\u9ed8\u8ba4CallAdapter callAdapterFactories.addAll(platform.defaultCallAdapterFactories(callbackExecutor)); ... return new Retrofit(callFactory, baseUrl, unmodifiableList(converterFactories), unmodifiableList(callAdapterFactories), callbackExecutor, validateEagerly); } platform.defaultCallAdapterFactorie \u8fd4\u56de\u4e00\u4e2a\u9ed8\u8ba4\u7684 CallAdapter.Factory \u96c6\u5408\uff0c\u4f46\u662f\u76ee\u524d\u6e90\u7801\u91cc\u9762\u96c6\u5408\u53ea\u6709\u4e00\u4e2a DefaultCallAdapterFactory \u3002 //Platform List<? extends CallAdapter.Factory> defaultCallAdapterFactories( @Nullable Executor callbackExecutor) { return singletonList(new DefaultCallAdapterFactory(callbackExecutor)); } \u6240\u4ee5\u73b0\u5728\u6211\u4eec\u53ea\u7528\u5173\u5fc3 DefaultCallAdapterFactory \u7684 get \u65b9\u6cd5\u8fd4\u56de\u662f\u5565\u5c31\u884c\u4e86\u3002 //DefaultCallAdapterFactory @Override public @Nullable CallAdapter<?, ?> get( Type returnType, Annotation[] annotations, Retrofit retrofit) { //\u662f\u5426\u5728HTTP\u8bf7\u6c42\u65b9\u6cd5\u4e0a\u6dfb\u52a0\u4e86SkipCallbackExecutor\u6ce8\u89e3 final Executor executor = Utils.isAnnotationPresent(annotations, SkipCallbackExecutor.class) ? null : callbackExecutor; //...\u7701\u7565\u5176\u4ed6\u65e0\u5173\u4ee3\u7801 return new CallAdapter<Object, Call<?>>() { @Override public Type responseType() { return responseType; } @Override public Call<Object> adapt(Call<Object> call) { return executor == null ? call : new ExecutorCallbackCall<>(executor, call); } }; } \u4ece\u4e0a\u9762\u4ee3\u7801\u770b\u51fa\uff0c\u5c31\u662f\u76f4\u63a5\u8fd4\u56de\u4e86\u4e00\u4e2a\u65b0\u7684 CallAdapter \u800c\u5df2\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53ea\u7528\u5173\u5fc3 CallAdapter \u7684 adapt\u65b9\u6cd5 \u5c31\u884c\u3002 adapt \u8fd4\u56de\u4e00\u4e2a Call \u5bf9\u8c61\uff0c\u8fd9\u4e0d\u5c31\u662f Retrofit \u9ed8\u8ba4\u8bf7\u6c42\u8981\u6dfb\u52a0\u7684\u90a3\u4e2a Call \u561b\u3002\u4e5f\u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u63a8\u65ad\u51fa executor \u4e00\u822c\u60c5\u51b5\u90fd\u4e0d\u4f1a\u662f null \u7684\uff0c\u6240\u4ee5\u4ee3\u7801\u4f1a\u8d70 new ExecutorCallbackCall \u5206\u652f\uff0c\u73b0\u5728\u6211\u4eec\u53c8\u8981\u5f00\u59cb\u5206\u6790 ExecutorCallbackCall \u4e86\u3002 //DefaultCallAdapterFactory static final class ExecutorCallbackCall<T> implements Call<T> { final Executor callbackExecutor; final Call<T> delegate; ExecutorCallbackCall(Executor callbackExecutor, Call<T> delegate) { this.callbackExecutor = callbackExecutor; this.delegate = delegate; } @Override public void enqueue(final Callback<T> callback) { checkNotNull(callback, \"callback == null\"); delegate.enqueue(new Callback<T>() { @Override public void onResponse(Call<T> call, final Response<T> response) { callbackExecutor.execute(new Runnable() { @Override public void run() { if (delegate.isCanceled()) { // Emulate OkHttp's behavior of throwing/delivering an IOException on cancellation. callback.onFailure(ExecutorCallbackCall.this, new IOException(\"Canceled\")); } else { callback.onResponse(ExecutorCallbackCall.this, response); } } }); } } ExecutorCallbackCall \u662f\u5b9e\u73b0 Call \u7684\u5b50\u7c7b\uff0c\u6240\u4ee5\u5b83\u80af\u5b9a\u662f\u6709 enqueue \u548c execute \u65b9\u6cd5\u7684\uff0c\u4f46\u662f\u5176\u5b9e\u6267\u884c\u8bf7\u6c42\u5374\u662f delegate \u8fd9\u4e2a\u4ee3\u7406\u7c7b\uff0c callbackExecutor \u5c31\u662f\u628a\u54cd\u5e94\u629b\u5230\u4e3b\u7ebf\u7a0b\u7684\u6267\u884c\u7c7b\uff0c\u540e\u9762\u5c0f\u8282\u4f1a\u8bb2\u5230\u3002 \u73b0\u5728\u4e3b\u8981\u5206\u6790 delegate \u8fd9\u4e2a\u4ee3\u7406\u7c7b\uff0c\u4ece\u524d\u9762\u7684\u5206\u6790\u5df2\u7ecf\u77e5\u9053\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u73b0\u7c7b\u5c31\u662f OkHttpCall \uff0c\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8 OkHttpCall \u7684 enqueue \u6216 execute \u5c31\u884c\u3002 //OkHttpCall public void enqueue(final Callback<T> callback) { //... synchronized (this) { //... call = rawCall = createRawCall(); //... } call.enqueue(new okhttp3.Callback() { @Override public void onResponse(okhttp3.Call call, okhttp3.Response rawResponse) { //\u89e3\u6790\u54cd\u5e94\u4f53 response = parseResponse(rawResponse); //... //\u56de\u8c03\u54cd\u5e94 callback.onResponse(OkHttpCall.this, response); } @Override public void onFailure(okhttp3.Call call, IOException e) { //\u56de\u8c03\u5f02\u5e38 callFailure(e); } }); } createRawCall \u65b9\u6cd5\u662f\u521b\u5efaOkHttp\u8bf7\u6c42\u7c7b\u7684\u65b9\u6cd5 // OkHttpCall private okhttp3.Call createRawCall() throws IOException { okhttp3.Call call = callFactory.newCall(requestFactory.create(args)); if (call == null) { throw new NullPointerException(\"Call.Factory returned null.\"); } return call; } callFactory \u53d8\u91cf\u5176\u5b9e\u5c31\u662f OkHttpClient \u5b9e\u4f8b\uff0c\u5728 Retrofit \u7684 Builder \u4e2d\u4f20\u5165\uff0c\u5982\u679c\u6ca1\u6709\u4f20\u5165\u7684\u5c31\u662f\u81ea\u5df1\u5b9e\u4f8b\u5316\u4e00\u4e2a OkHttpClient \u3002 requestFactory.create(args) \u65b9\u6cd5\u5c31\u662f\u5c06\u8bf7\u6c42\u53c2\u6570\u62fc\u88c5\u6210 OkHttp \u9700\u8981\u7684 Request \u7c7b\u3002 //Retrofit public Retrofit build() { //... okhttp3.Call.Factory callFactory = this.callFactory; if (callFactory == null) { callFactory = new OkHttpClient(); } parseResponse \u662f\u89e3\u6790\u54cd\u5e94\u4f53\u7684\u65b9\u6cd5\uff0c\u65b9\u9762\u91cc\u9762\u8fd8\u4f7f\u7528\u4e86 converter \u6765\u8f6c\u6362\u6570\u636e\u3002 // Response<T> parseResponse(okhttp3.Response rawResponse) throws IOException { //... T body = responseConverter.convert(catchingBody); return Response.success(body, rawResponse); //... }","title":"\u4e00\u6b21\u8bf7\u6c42\u7684\u5b8c\u6574\u8fc7\u7a0b\uff0c\u662f\u5982\u4f55\u8f6c\u4ea4\u7ed9OkHttp\u7684"},{"location":"android/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/retrofit/#_2","text":"//Retrofit public Retrofit build() { Executor callbackExecutor = this.callbackExecutor; if (callbackExecutor == null) { callbackExecutor = platform.defaultCallbackExecutor(); } } \u5982\u679c Retrofit.Builder \u6ca1\u6709\u8c03\u7528 callbackExecutor(Executor executor) \u65b9\u6cd5\u4f20\u5165 Executor \uff0c\u90a3\u5c31\u7528\u9ed8\u8ba4\u7684 defaultCallbackExecutor \u3002 DefaultCallAdapterFactory.ExecutorCallbackCall \u7684 callbackExecutor //Platform-Android static class MainThreadExecutor implements Executor { private final Handler handler = new Handler(Looper.getMainLooper()); @Override public void execute(Runnable r) { handler.post(r); } }","title":"\u5982\u4f55\u628a\u6210\u529f\u7684\u56de\u8c03\u629b\u5230\u4e3b\u7ebf\u7a0b\u7684"},{"location":"android/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/retrofit/#kotlin","text":"suspend \u51fd\u6570\u7f16\u8bd1\u6210\u4e86 Continuation \u7c7b\uff0c\u53ef\u4ee5\u81ea\u5df1\u7528AS\u7684 decompile \u529f\u80fd\u9a8c\u8bc1\u3002\u6700\u7ec8\u4f7f\u7528 SuspendForBody \u7c7b\u6765\u53d1\u8d77\u8bf7\u6c42\uff0c\u5b83\u4e5f\u662f HttpServiceMethod \u7684\u5b50\u7c7b\u3002 static final class SuspendForBody<ResponseT> extends HttpServiceMethod<ResponseT, Object> { //... @Override protected Object adapt(Call<ResponseT> call, Object[] args) { call = callAdapter.adapt(call); //noinspection unchecked Checked by reflection inside RequestFactory. Continuation<ResponseT> continuation = (Continuation<ResponseT>) args[args.length - 1]; return isNullable ? KotlinExtensions.awaitNullable(call, continuation) : KotlinExtensions.await(call, continuation); } } \u5e76\u901a\u8fc7\u6269\u5c55\u51fd\u6570\u7ed9 Retrofit \u7684 Call \u7c7b\u589e\u52a0\u4e86 await \u7684\u6269\u5c55\u51fd\u6570","title":"\u600e\u4e48\u652f\u6301Kotlin\u7684\u534f\u7a0b\u7684"},{"location":"android/%E8%87%AA%E5%AE%9A%E4%B9%89View/%E8%87%AA%E5%AE%9A%E4%B9%89View%E7%9A%84%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E8%A7%A3%E6%9E%90/","text":"\u81ea\u5b9a\u4e49View\u7684\u6784\u9020\u65b9\u6cd5\u89e3\u6790 \u672c\u6587\u5206\u6790\u57fa\u4e8e android sdk api-29 \u81ea\u5b9a\u4e49view\u90fd\u9700\u8981\u91cd\u5199\u7236\u7c7b\u7684\u6784\u9020\u65b9\u6cd5 /** * Simple constructor to use when creating a view from code * \u5f53\u76f4\u63a5\u4f7f\u7528\u4ee3\u7801\u521b\u5efaView\u65f6\u4f7f\u7528 */ public CustomView(Context context) { super(context); } /** * Constructor that is called when inflating a view from XML * The method onFinishInflate() will be called after all children have been */ public CustomView(Context context, @Nullable AttributeSet attrs) { super(context, attrs); } public CustomView(Context context, @Nullable AttributeSet attrs, int defStyleAttr) { super(context, attrs, defStyleAttr); } /** * Api21\u65b0\u589e\u7684\u65b9\u6cd5 */ @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP) public CustomView(Context context, @Nullable AttributeSet attrs, int defStyleAttr, int defStyleRes) { super(context, attrs, defStyleAttr, defStyleRes); } \u53ea\u6709\u4e00\u4e2a Context \u7684\u7528\u4e8e\u4ee3\u7801\u521b\u5efaView\u7684\u4f7f\u7528 \u5176\u4ed6\u7684\u6784\u9020\u65b9\u6cd5\u90fd\u662f\u56de\u8c03\u5230 View(Context context, @Nullable AttributeSet attrs, int defStyleAttr, int defStyleRes) \u65b9\u6cd5\uff0c\u7528\u4e8e\u5728 xml \u4e2d\u586b\u5145view\u4f7f\u7528\u3002 \u6784\u9020\u65b9\u6cd5\u7684\u5f62\u53c2\u5206\u6790 Context context The Context the view is running in, through which it can access the current theme, resources, etc. view\u8fd0\u884c\u65f6\u7684\u4e0a\u4e0b\u6587\uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u8bbf\u95ee\u5f53\u524d\u7684\u4e3b\u9898\u3001\u8d44\u6e90\u7b49\u3002 AttributeSet attrs The attributes of the XML tag that is inflating the view \u5199\u5728xml\u6807\u7b7e\u4e2d\u7684\u5c5e\u6027\u96c6\u5408 int defStyleAttr An attribute in the current theme that contains a reference to a style resource that supplies default values for the view. Can be 0 to not look for defaults. \u5f53\u524d\u4e3b\u9898\u4e2d\u5305\u542b\u5bf9\u63d0\u4f9b\u89c6\u56fe\u9ed8\u8ba4\u503c\u7684\u6837\u5f0f\u8d44\u6e90\u7684\u5f15\u7528\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a0\u4e0d\u67e5\u627e\u9ed8\u8ba4\u7684\u6837\u5f0f\u8d44\u6e90\u3002 int defStyleRes A resource identifier of a style resource that supplies default values for the view, used only if defStyleAttr is 0 or can not be found in the theme Can be 0 to not look for defaults \u6837\u5f0f\u8d44\u6e90\u7684\u8d44\u6e90\u6807\u8bc6\u7b26\u4e3a\u89c6\u56fe\u63d0\u4f9b\u9ed8\u8ba4\u503c\uff0c\u4ec5\u5728 defStyleAttr \u4e3a0\u6216\u65e0\u6cd5\u5728 \u4e3b\u9898\u4e2d \u627e\u5230\u65f6\u4f7f\u7528\uff0c\u53ef\u4ee5\u4e3a0\u4ee5\u4e0d\u67e5\u627e\u9ed8\u8ba4\u503c \u5176\u5b9e\u8fd9\u4e9b\u53c2\u6570\u6700\u4e3b\u8981\u7684\u662f\u4f20\u9012\u7ed9\u65b9\u6cd5 context.obtainStyledAttributes() \u7528\u7684\uff0c\u56e0\u4e3a\u6700\u540e\u6784\u9020\u65b9\u6cd5\u4e5f\u662f\u8c03\u7528\u7684 this(context) \u65b9\u6cd5\u3002 \u5c5e\u6027\u7684\u4f18\u5148\u7ea7 xml\u4e2d\u7684attr\u6807\u7b7e > \u901a\u8fc7style\u5f15\u5165\u7684\u6807\u7b7e > activity\u6216theme\u4e2d\u5f15\u5165\u7684\u6807\u7b7e > \u6784\u9020\u51fd\u6570\u4e2d\u7684defStyleRes","title":"\u81ea\u5b9a\u4e49View\u7684\u6784\u9020\u65b9\u6cd5\u89e3\u6790"},{"location":"android/%E8%87%AA%E5%AE%9A%E4%B9%89View/%E8%87%AA%E5%AE%9A%E4%B9%89View%E7%9A%84%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E8%A7%A3%E6%9E%90/#view","text":"\u672c\u6587\u5206\u6790\u57fa\u4e8e android sdk api-29 \u81ea\u5b9a\u4e49view\u90fd\u9700\u8981\u91cd\u5199\u7236\u7c7b\u7684\u6784\u9020\u65b9\u6cd5 /** * Simple constructor to use when creating a view from code * \u5f53\u76f4\u63a5\u4f7f\u7528\u4ee3\u7801\u521b\u5efaView\u65f6\u4f7f\u7528 */ public CustomView(Context context) { super(context); } /** * Constructor that is called when inflating a view from XML * The method onFinishInflate() will be called after all children have been */ public CustomView(Context context, @Nullable AttributeSet attrs) { super(context, attrs); } public CustomView(Context context, @Nullable AttributeSet attrs, int defStyleAttr) { super(context, attrs, defStyleAttr); } /** * Api21\u65b0\u589e\u7684\u65b9\u6cd5 */ @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP) public CustomView(Context context, @Nullable AttributeSet attrs, int defStyleAttr, int defStyleRes) { super(context, attrs, defStyleAttr, defStyleRes); } \u53ea\u6709\u4e00\u4e2a Context \u7684\u7528\u4e8e\u4ee3\u7801\u521b\u5efaView\u7684\u4f7f\u7528 \u5176\u4ed6\u7684\u6784\u9020\u65b9\u6cd5\u90fd\u662f\u56de\u8c03\u5230 View(Context context, @Nullable AttributeSet attrs, int defStyleAttr, int defStyleRes) \u65b9\u6cd5\uff0c\u7528\u4e8e\u5728 xml \u4e2d\u586b\u5145view\u4f7f\u7528\u3002","title":"\u81ea\u5b9a\u4e49View\u7684\u6784\u9020\u65b9\u6cd5\u89e3\u6790"},{"location":"android/%E8%87%AA%E5%AE%9A%E4%B9%89View/%E8%87%AA%E5%AE%9A%E4%B9%89View%E7%9A%84%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E8%A7%A3%E6%9E%90/#_1","text":"","title":"\u6784\u9020\u65b9\u6cd5\u7684\u5f62\u53c2\u5206\u6790"},{"location":"android/%E8%87%AA%E5%AE%9A%E4%B9%89View/%E8%87%AA%E5%AE%9A%E4%B9%89View%E7%9A%84%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E8%A7%A3%E6%9E%90/#context-context","text":"The Context the view is running in, through which it can access the current theme, resources, etc. view\u8fd0\u884c\u65f6\u7684\u4e0a\u4e0b\u6587\uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u8bbf\u95ee\u5f53\u524d\u7684\u4e3b\u9898\u3001\u8d44\u6e90\u7b49\u3002","title":"Context context"},{"location":"android/%E8%87%AA%E5%AE%9A%E4%B9%89View/%E8%87%AA%E5%AE%9A%E4%B9%89View%E7%9A%84%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E8%A7%A3%E6%9E%90/#attributeset-attrs","text":"The attributes of the XML tag that is inflating the view \u5199\u5728xml\u6807\u7b7e\u4e2d\u7684\u5c5e\u6027\u96c6\u5408","title":"AttributeSet attrs"},{"location":"android/%E8%87%AA%E5%AE%9A%E4%B9%89View/%E8%87%AA%E5%AE%9A%E4%B9%89View%E7%9A%84%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E8%A7%A3%E6%9E%90/#int-defstyleattr","text":"An attribute in the current theme that contains a reference to a style resource that supplies default values for the view. Can be 0 to not look for defaults. \u5f53\u524d\u4e3b\u9898\u4e2d\u5305\u542b\u5bf9\u63d0\u4f9b\u89c6\u56fe\u9ed8\u8ba4\u503c\u7684\u6837\u5f0f\u8d44\u6e90\u7684\u5f15\u7528\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a0\u4e0d\u67e5\u627e\u9ed8\u8ba4\u7684\u6837\u5f0f\u8d44\u6e90\u3002","title":"int defStyleAttr"},{"location":"android/%E8%87%AA%E5%AE%9A%E4%B9%89View/%E8%87%AA%E5%AE%9A%E4%B9%89View%E7%9A%84%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E8%A7%A3%E6%9E%90/#int-defstyleres","text":"A resource identifier of a style resource that supplies default values for the view, used only if defStyleAttr is 0 or can not be found in the theme Can be 0 to not look for defaults \u6837\u5f0f\u8d44\u6e90\u7684\u8d44\u6e90\u6807\u8bc6\u7b26\u4e3a\u89c6\u56fe\u63d0\u4f9b\u9ed8\u8ba4\u503c\uff0c\u4ec5\u5728 defStyleAttr \u4e3a0\u6216\u65e0\u6cd5\u5728 \u4e3b\u9898\u4e2d \u627e\u5230\u65f6\u4f7f\u7528\uff0c\u53ef\u4ee5\u4e3a0\u4ee5\u4e0d\u67e5\u627e\u9ed8\u8ba4\u503c \u5176\u5b9e\u8fd9\u4e9b\u53c2\u6570\u6700\u4e3b\u8981\u7684\u662f\u4f20\u9012\u7ed9\u65b9\u6cd5 context.obtainStyledAttributes() \u7528\u7684\uff0c\u56e0\u4e3a\u6700\u540e\u6784\u9020\u65b9\u6cd5\u4e5f\u662f\u8c03\u7528\u7684 this(context) \u65b9\u6cd5\u3002","title":"int defStyleRes"},{"location":"android/%E8%87%AA%E5%AE%9A%E4%B9%89View/%E8%87%AA%E5%AE%9A%E4%B9%89View%E7%9A%84%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E8%A7%A3%E6%9E%90/#_2","text":"xml\u4e2d\u7684attr\u6807\u7b7e > \u901a\u8fc7style\u5f15\u5165\u7684\u6807\u7b7e > activity\u6216theme\u4e2d\u5f15\u5165\u7684\u6807\u7b7e > \u6784\u9020\u51fd\u6570\u4e2d\u7684defStyleRes","title":"\u5c5e\u6027\u7684\u4f18\u5148\u7ea7"},{"location":"android/%E9%80%86%E5%90%91/%E4%BD%BF%E7%94%A8FRIDA-DEXDump%E8%84%B1%E5%A3%B3/","text":"\u4f7f\u7528FRIDA-DEXDump\u8131\u58f3 FRIDA-DEXDump \u9996\u5148\u5b89\u88c5\u597d frida \uff0c\u76f4\u63a5\u4f7f\u7528 pip \u5b89\u88c5\u5c31\u53ef\u4ee5\u3002 firda\u9700\u8981root\u6743\u9650\uff0c\u53ef\u4ee5\u4f7f\u7528MuMu\u6a21\u62df\u5668\u3002 \u5408\u5e76\u591adex apk dex\u5206\u5305\u540e\u9700\u8981\u5148\u5408\u5e76dex #!/usr/bin/env python import os, sys path = r'/xxxx/'# \u6587\u4ef6\u5939\u76ee\u5f55 files = os.listdir(path) # \u5f97\u5230\u6587\u4ef6\u5939\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u540d\u79f0 out_path =r'/xxxxx/out/' #\u8f93\u51fa\u6587\u4ef6\u5939 #\u8def\u5f84\u4e0a\u4e0d\u8981\u6709\u4e2d\u6587!!!!! s = [] for file in files: # \u904d\u5386\u6587\u4ef6\u5939 if file.find(\"dex\") > 0: ## \u67e5\u627edex \u6587\u4ef6 sh = f'jadx -j 1 -r -d {out_path} {path}{file}' print(sh) os.system(sh)","title":"\u4f7f\u7528FRIDA-DEXDump\u8131\u58f3"},{"location":"android/%E9%80%86%E5%90%91/%E4%BD%BF%E7%94%A8FRIDA-DEXDump%E8%84%B1%E5%A3%B3/#frida-dexdump","text":"FRIDA-DEXDump \u9996\u5148\u5b89\u88c5\u597d frida \uff0c\u76f4\u63a5\u4f7f\u7528 pip \u5b89\u88c5\u5c31\u53ef\u4ee5\u3002 firda\u9700\u8981root\u6743\u9650\uff0c\u53ef\u4ee5\u4f7f\u7528MuMu\u6a21\u62df\u5668\u3002","title":"\u4f7f\u7528FRIDA-DEXDump\u8131\u58f3"},{"location":"android/%E9%80%86%E5%90%91/%E4%BD%BF%E7%94%A8FRIDA-DEXDump%E8%84%B1%E5%A3%B3/#dex","text":"apk dex\u5206\u5305\u540e\u9700\u8981\u5148\u5408\u5e76dex #!/usr/bin/env python import os, sys path = r'/xxxx/'# \u6587\u4ef6\u5939\u76ee\u5f55 files = os.listdir(path) # \u5f97\u5230\u6587\u4ef6\u5939\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u540d\u79f0 out_path =r'/xxxxx/out/' #\u8f93\u51fa\u6587\u4ef6\u5939 #\u8def\u5f84\u4e0a\u4e0d\u8981\u6709\u4e2d\u6587!!!!! s = [] for file in files: # \u904d\u5386\u6587\u4ef6\u5939 if file.find(\"dex\") > 0: ## \u67e5\u627edex \u6587\u4ef6 sh = f'jadx -j 1 -r -d {out_path} {path}{file}' print(sh) os.system(sh)","title":"\u5408\u5e76\u591adex"},{"location":"android/%E9%80%86%E5%90%91/%E4%BD%BF%E7%94%A8MuMu%E6%A8%A1%E6%8B%9F%E5%99%A8%E8%84%B1360%E5%8A%A0%E5%9B%BA%E7%9A%84%E5%A3%B3/","text":"\u4f7f\u7528MuMu\u6a21\u62df\u5668\u8131360\u52a0\u56fa\u7684\u58f3 \u8d44\u6e90\u4e0b\u8f7d MuMu\u6a21\u62df\u5668 Xposed Fdex2 \u5b89\u88c5\u6d41\u7a0b \u5148\u5b89\u88c5\u597d MuMu\u6a21\u62df\u5668 \uff0c\u5728\u6a21\u62df\u5668\u8bbe\u7f6e\u91cc\u9762 \u5f00\u542fROOT\u6743\u9650 \uff0c\u5e76\u4e14\u5728\u7cfb\u7edf\u7684\u8bbe\u7f6e\u91cc\u9762\u5148\u5173\u95ed \u517c\u5bb9\u6a21\u5f0f \u63a5\u7740\u5b89\u88c5 Xposed \uff0c\u5b89\u88c5\u9002\u5408\u7cfb\u7edf\u7248\u672c\u7684Xposed\u63d2\u4ef6\u3002 \u5b89\u88c5\u597d\u518d\u5b89\u88c5 Fdex2 \uff0c\u7136\u540e\u5728 Xposed \u7684\u6a21\u5757\u7ba1\u7406\u754c\u9762\u6253\u5f00 Fdex2 \u7684\u6a21\u677f\uff0c\u6700\u540e\u8bb0\u5f97\u91cd\u542f\u7cfb\u7edf\u8ba9\u6a21\u5757\u751f\u6548\u3002 \u5f00\u59cbdump dex \u542f\u52a8 Fdex2 \uff0c\u9009\u62e9\u8981\u6293dex\u7684App\uff0c\u5f39\u6846\u4f1a\u63d0\u793adump\u51fa\u6765\u7684dex\u4f1a\u4fdd\u6301\u5230\u54ea\u4e2a\u6587\u4ef6\u76ee\u5f55\u4e0b\uff0c\u70b9\u51fb OK \u5173\u95ed\u5f39\u6846\u3002 \u63a5\u7740\u6253\u5f00\u6211\u4eec\u7684\u76ee\u6807App\uff0c\u5f85\u542f\u52a8\u5b8c\u6210\u540e\uff0c\u5c31\u53ef\u4ee5\u5230\u76f8\u5e94\u7684\u76ee\u5f55\u4e0b\u770b\u770b\u662f\u5426dump\u51fa\u4e86dex\uff0c\u5982\u679c\u76ee\u6807App\u53ea\u652f\u6301arm\u67b6\u6784\uff0c\u90a3\u4e48\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u5728\u7cfb\u7edf\u8bbe\u7f6e\u91cc\u628a \u517c\u5bb9\u6a21\u5f0f\u6253\u5f00 \u3002 \u6211\u4eec\u53ef\u4ee5\u5728\u6a21\u62df\u5668\u5b89\u88c5\u4e00\u4e2a RE\u6587\u4ef6\u6d4f\u89c8\u5668 \u67e5\u770b\u76ee\u5f55\u4e0b\u662f\u5426\u6709dex\uff0c\u4e5f\u53ef\u4ee5\u7528 adb \u547d\u4ee4\u67e5\u770b\u3002 \u63a5\u7740\u6211\u4eec\u53ea\u9700\u8981\u7528 adb pull \u547d\u4ee4\u5bfc\u51fa\u8fd9\u4e9bdex\u6587\u4ef6\u5230\u684c\u9762\uff0c\u7528 dex2jar \uff0c jd-gui \u7b49\u5de5\u5177\u5c31\u53ef\u4ee5\u76f4\u63a5\u770b\u6e90\u7801\u4e86\uff0c\u5f53\u7136\u5f88\u591aApp\u90fd\u505a\u4e86\u6df7\u6dc6\uff0c\u8fd9\u5c31\u8981\u770b\u81ea\u5df1\u7684\u529f\u529b\u4e86\u3002\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u4e00\u822cdex\u6587\u4ef6\u6700\u5927\u7684\u90a3\u4e2a\u53ef\u80fd\u5c31\u662f360\u52a0\u56fa\u4e86\u7684\u90a3\u4e2a\u5047dex\uff0c\u7b2c\u4e8c\u5927\u7684\u5c31\u662f\u771f\u5b9eApp\u4ee3\u7801\u7684\u90a3\u4e2adex\uff0c\u5f53\u7136\u8fd9\u4e5f\u4e0d\u7edd\u5bf9\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u628a\u6240\u6709\u7684dex\u6587\u4ef6\u90fd\u5bfc\u51fa\u6765\u770b\u770b\u3002 dex2jar \u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 jd-gui \u5de5\u5177\u67e5\u770b\u6e90\u7801\uff0c\u8fd9\u4e9b\u5de5\u5177\u7684\u4e0b\u8f7d\u94fe\u63a5\u4f1a\u653e\u5230\u672b\u5c3e\uff0c\u5982\u679c\u662fMac\u5b89\u88c5\u5c31\u66f4\u7b80\u5355\u4e86\uff0c\u76f4\u63a5\u4f7f\u7528 brew \u5c31\u884c\u4e86\u3002 d2j-dex2jar 5.dex //dex2jar 5.dex -> ./5-dex2jar.jar \u4f7f\u7528 jd-gui \u6253\u5f005-dex2jar.jar dex2jar jd-gui","title":"\u4f7f\u7528MuMu\u6a21\u62df\u5668\u8131360\u52a0\u56fa\u7684\u58f3"},{"location":"android/%E9%80%86%E5%90%91/%E4%BD%BF%E7%94%A8MuMu%E6%A8%A1%E6%8B%9F%E5%99%A8%E8%84%B1360%E5%8A%A0%E5%9B%BA%E7%9A%84%E5%A3%B3/#mumu360","text":"","title":"\u4f7f\u7528MuMu\u6a21\u62df\u5668\u8131360\u52a0\u56fa\u7684\u58f3"},{"location":"android/%E9%80%86%E5%90%91/%E4%BD%BF%E7%94%A8MuMu%E6%A8%A1%E6%8B%9F%E5%99%A8%E8%84%B1360%E5%8A%A0%E5%9B%BA%E7%9A%84%E5%A3%B3/#_1","text":"MuMu\u6a21\u62df\u5668 Xposed Fdex2","title":"\u8d44\u6e90\u4e0b\u8f7d"},{"location":"android/%E9%80%86%E5%90%91/%E4%BD%BF%E7%94%A8MuMu%E6%A8%A1%E6%8B%9F%E5%99%A8%E8%84%B1360%E5%8A%A0%E5%9B%BA%E7%9A%84%E5%A3%B3/#_2","text":"\u5148\u5b89\u88c5\u597d MuMu\u6a21\u62df\u5668 \uff0c\u5728\u6a21\u62df\u5668\u8bbe\u7f6e\u91cc\u9762 \u5f00\u542fROOT\u6743\u9650 \uff0c\u5e76\u4e14\u5728\u7cfb\u7edf\u7684\u8bbe\u7f6e\u91cc\u9762\u5148\u5173\u95ed \u517c\u5bb9\u6a21\u5f0f \u63a5\u7740\u5b89\u88c5 Xposed \uff0c\u5b89\u88c5\u9002\u5408\u7cfb\u7edf\u7248\u672c\u7684Xposed\u63d2\u4ef6\u3002 \u5b89\u88c5\u597d\u518d\u5b89\u88c5 Fdex2 \uff0c\u7136\u540e\u5728 Xposed \u7684\u6a21\u5757\u7ba1\u7406\u754c\u9762\u6253\u5f00 Fdex2 \u7684\u6a21\u677f\uff0c\u6700\u540e\u8bb0\u5f97\u91cd\u542f\u7cfb\u7edf\u8ba9\u6a21\u5757\u751f\u6548\u3002","title":"\u5b89\u88c5\u6d41\u7a0b"},{"location":"android/%E9%80%86%E5%90%91/%E4%BD%BF%E7%94%A8MuMu%E6%A8%A1%E6%8B%9F%E5%99%A8%E8%84%B1360%E5%8A%A0%E5%9B%BA%E7%9A%84%E5%A3%B3/#dump-dex","text":"\u542f\u52a8 Fdex2 \uff0c\u9009\u62e9\u8981\u6293dex\u7684App\uff0c\u5f39\u6846\u4f1a\u63d0\u793adump\u51fa\u6765\u7684dex\u4f1a\u4fdd\u6301\u5230\u54ea\u4e2a\u6587\u4ef6\u76ee\u5f55\u4e0b\uff0c\u70b9\u51fb OK \u5173\u95ed\u5f39\u6846\u3002 \u63a5\u7740\u6253\u5f00\u6211\u4eec\u7684\u76ee\u6807App\uff0c\u5f85\u542f\u52a8\u5b8c\u6210\u540e\uff0c\u5c31\u53ef\u4ee5\u5230\u76f8\u5e94\u7684\u76ee\u5f55\u4e0b\u770b\u770b\u662f\u5426dump\u51fa\u4e86dex\uff0c\u5982\u679c\u76ee\u6807App\u53ea\u652f\u6301arm\u67b6\u6784\uff0c\u90a3\u4e48\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u5728\u7cfb\u7edf\u8bbe\u7f6e\u91cc\u628a \u517c\u5bb9\u6a21\u5f0f\u6253\u5f00 \u3002 \u6211\u4eec\u53ef\u4ee5\u5728\u6a21\u62df\u5668\u5b89\u88c5\u4e00\u4e2a RE\u6587\u4ef6\u6d4f\u89c8\u5668 \u67e5\u770b\u76ee\u5f55\u4e0b\u662f\u5426\u6709dex\uff0c\u4e5f\u53ef\u4ee5\u7528 adb \u547d\u4ee4\u67e5\u770b\u3002 \u63a5\u7740\u6211\u4eec\u53ea\u9700\u8981\u7528 adb pull \u547d\u4ee4\u5bfc\u51fa\u8fd9\u4e9bdex\u6587\u4ef6\u5230\u684c\u9762\uff0c\u7528 dex2jar \uff0c jd-gui \u7b49\u5de5\u5177\u5c31\u53ef\u4ee5\u76f4\u63a5\u770b\u6e90\u7801\u4e86\uff0c\u5f53\u7136\u5f88\u591aApp\u90fd\u505a\u4e86\u6df7\u6dc6\uff0c\u8fd9\u5c31\u8981\u770b\u81ea\u5df1\u7684\u529f\u529b\u4e86\u3002\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u4e00\u822cdex\u6587\u4ef6\u6700\u5927\u7684\u90a3\u4e2a\u53ef\u80fd\u5c31\u662f360\u52a0\u56fa\u4e86\u7684\u90a3\u4e2a\u5047dex\uff0c\u7b2c\u4e8c\u5927\u7684\u5c31\u662f\u771f\u5b9eApp\u4ee3\u7801\u7684\u90a3\u4e2adex\uff0c\u5f53\u7136\u8fd9\u4e5f\u4e0d\u7edd\u5bf9\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u628a\u6240\u6709\u7684dex\u6587\u4ef6\u90fd\u5bfc\u51fa\u6765\u770b\u770b\u3002 dex2jar \u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 jd-gui \u5de5\u5177\u67e5\u770b\u6e90\u7801\uff0c\u8fd9\u4e9b\u5de5\u5177\u7684\u4e0b\u8f7d\u94fe\u63a5\u4f1a\u653e\u5230\u672b\u5c3e\uff0c\u5982\u679c\u662fMac\u5b89\u88c5\u5c31\u66f4\u7b80\u5355\u4e86\uff0c\u76f4\u63a5\u4f7f\u7528 brew \u5c31\u884c\u4e86\u3002 d2j-dex2jar 5.dex //dex2jar 5.dex -> ./5-dex2jar.jar \u4f7f\u7528 jd-gui \u6253\u5f005-dex2jar.jar dex2jar jd-gui","title":"\u5f00\u59cbdump dex"},{"location":"android/%E9%9A%8F%E7%AC%94/ADB%20%E5%BD%95%E5%88%B6%E5%B1%8F%E5%B9%95%E5%91%BD%E4%BB%A4/","text":"ADB \u5f55\u5236\u5c4f\u5e55\u547d\u4ee4 \u5bf9\u4e8eAndroid4.4\u7684\u4e0a\u7684\u624b\u673a\uff0c\u7cfb\u7edf\u81ea\u5e26\u4e86\u4e00\u4e2a\u5c4f\u5e55\u5f55\u5236\u547d\u4ee4screenrecord\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u4f7f\u7528\u3002 \u5f55\u5236\u547d\u4ee4 adb shell screenrecord /sdcard/test.mp4 \u89c6\u9891\u4fdd\u5b58\u76ee\u5f55\u53ef\u4ee5\u81ea\u5df1\u6307\u5b9a\uff0c\u5982\u4e0a\u9762\u7684/sdcard/test.mp4\uff0c\u547d\u4ee4\u6267\u884c\u540e\u4f1a\u4e00\u76f4\u5f55\u5236180s\uff0c\u6309\u4e0bctrl+c\u53ef\u4ee5\u63d0\u524d\u7ed3\u675f\u5f55\u5236 \u8f93\u5165 --time-limit N\uff0c\u9650\u5236\u89c6\u9891\u5f55\u5236\u65f6\u95f4\u4e3aN\u79d2 \u8bbe\u5b9a\u89c6\u9891\u5206\u8fa8\u7387 \u5bf9\u4e8e\u9ad8\u5206\u8fa8\u7387\u7684\u624b\u673a\uff0c\u5f55\u5236\u7684\u89c6\u9891\u5f88\u5927\uff0c\u6211\u4eec\u5206\u4eab\u53c8\u4e0d\u9700\u8981\u8fd9\u4e48\u5927\u7684 \u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u5f55\u5236\u7684\u89c6\u9891\u5206\u8fa8\u7387 adb shell screenrecord --size 848*480 /sdcard/test.mp4 \u8bbe\u5b9a\u89c6\u9891\u6bd4\u7279\u7387 \u9ed8\u8ba4\u6bd4\u7279\u7387\u662f4M/s\uff0c\u4e3a\u4e86\u5206\u4eab\u65b9\u4fbf\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u4f4e\u6bd4\u7279\u7387\u4e3a2M adb shell screenrecord --bit-rate 2000000 /sdcard/test.mp4 \u83b7\u53d6\u89c6\u9891\u6587\u4ef6 \u4f7f\u7528adb pull \u5373\u53ef\u628a\u624b\u673aSD\u5361\u4e2d\u89c6\u9891\u83b7\u53d6\u5230\u672c\u5730 adb pull /sdcard/test.mp4 .","title":"ADB \u5f55\u5236\u5c4f\u5e55\u547d\u4ee4"},{"location":"android/%E9%9A%8F%E7%AC%94/ADB%20%E5%BD%95%E5%88%B6%E5%B1%8F%E5%B9%95%E5%91%BD%E4%BB%A4/#adb","text":"\u5bf9\u4e8eAndroid4.4\u7684\u4e0a\u7684\u624b\u673a\uff0c\u7cfb\u7edf\u81ea\u5e26\u4e86\u4e00\u4e2a\u5c4f\u5e55\u5f55\u5236\u547d\u4ee4screenrecord\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u4f7f\u7528\u3002","title":"ADB \u5f55\u5236\u5c4f\u5e55\u547d\u4ee4"},{"location":"android/%E9%9A%8F%E7%AC%94/ADB%20%E5%BD%95%E5%88%B6%E5%B1%8F%E5%B9%95%E5%91%BD%E4%BB%A4/#_1","text":"adb shell screenrecord /sdcard/test.mp4 \u89c6\u9891\u4fdd\u5b58\u76ee\u5f55\u53ef\u4ee5\u81ea\u5df1\u6307\u5b9a\uff0c\u5982\u4e0a\u9762\u7684/sdcard/test.mp4\uff0c\u547d\u4ee4\u6267\u884c\u540e\u4f1a\u4e00\u76f4\u5f55\u5236180s\uff0c\u6309\u4e0bctrl+c\u53ef\u4ee5\u63d0\u524d\u7ed3\u675f\u5f55\u5236 \u8f93\u5165 --time-limit N\uff0c\u9650\u5236\u89c6\u9891\u5f55\u5236\u65f6\u95f4\u4e3aN\u79d2","title":"\u5f55\u5236\u547d\u4ee4"},{"location":"android/%E9%9A%8F%E7%AC%94/ADB%20%E5%BD%95%E5%88%B6%E5%B1%8F%E5%B9%95%E5%91%BD%E4%BB%A4/#_2","text":"\u5bf9\u4e8e\u9ad8\u5206\u8fa8\u7387\u7684\u624b\u673a\uff0c\u5f55\u5236\u7684\u89c6\u9891\u5f88\u5927\uff0c\u6211\u4eec\u5206\u4eab\u53c8\u4e0d\u9700\u8981\u8fd9\u4e48\u5927\u7684 \u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u5f55\u5236\u7684\u89c6\u9891\u5206\u8fa8\u7387 adb shell screenrecord --size 848*480 /sdcard/test.mp4","title":"\u8bbe\u5b9a\u89c6\u9891\u5206\u8fa8\u7387"},{"location":"android/%E9%9A%8F%E7%AC%94/ADB%20%E5%BD%95%E5%88%B6%E5%B1%8F%E5%B9%95%E5%91%BD%E4%BB%A4/#_3","text":"\u9ed8\u8ba4\u6bd4\u7279\u7387\u662f4M/s\uff0c\u4e3a\u4e86\u5206\u4eab\u65b9\u4fbf\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u4f4e\u6bd4\u7279\u7387\u4e3a2M adb shell screenrecord --bit-rate 2000000 /sdcard/test.mp4","title":"\u8bbe\u5b9a\u89c6\u9891\u6bd4\u7279\u7387"},{"location":"android/%E9%9A%8F%E7%AC%94/ADB%20%E5%BD%95%E5%88%B6%E5%B1%8F%E5%B9%95%E5%91%BD%E4%BB%A4/#_4","text":"\u4f7f\u7528adb pull \u5373\u53ef\u628a\u624b\u673aSD\u5361\u4e2d\u89c6\u9891\u83b7\u53d6\u5230\u672c\u5730 adb pull /sdcard/test.mp4 .","title":"\u83b7\u53d6\u89c6\u9891\u6587\u4ef6"},{"location":"android/%E9%9A%8F%E7%AC%94/AS%E6%98%BE%E7%A4%BANavigation%E6%A0%87%E7%AD%BE/","text":"AS\u663e\u793aNavigation\u6807\u7b7e \u6700\u8fd1\u5728\u5b66\u4e60Jetpack-Navigation\u7ec4\u4ef6\u7684\u4f7f\u7528\uff0c\u4f46\u662f\u5728AS\u4e2d\u80fd\u65b0\u5efanavigation\u7684\u6587\u4ef6\u5939\u5374\u4e0d\u80fd\u65b0\u5efanavigation\u7684xml\u6587\u4ef6\uff0c\u4e8e\u662f\u4e0aStack Overflow\u627e\u4e86\u4e00\u4e0b\u89e3\u51b3\u529e\u6cd5\u8fd8\u771f\u627e\u5230\u4e86\u3002 \u89e3\u51b3\u529e\u6cd5 \u627e\u5230 Settings \uff08Mac\u662f Preferences \uff09\u4e2d\u7684 Experimental \u9009\u9879\uff0c\u9009\u4e2d Enable Navigation Editor \u9009\u9879\uff0c\u7136\u540e\u91cd\u542f\u3002","title":"AS\u663e\u793aNavigation\u6807\u7b7e"},{"location":"android/%E9%9A%8F%E7%AC%94/AS%E6%98%BE%E7%A4%BANavigation%E6%A0%87%E7%AD%BE/#asnavigation","text":"\u6700\u8fd1\u5728\u5b66\u4e60Jetpack-Navigation\u7ec4\u4ef6\u7684\u4f7f\u7528\uff0c\u4f46\u662f\u5728AS\u4e2d\u80fd\u65b0\u5efanavigation\u7684\u6587\u4ef6\u5939\u5374\u4e0d\u80fd\u65b0\u5efanavigation\u7684xml\u6587\u4ef6\uff0c\u4e8e\u662f\u4e0aStack Overflow\u627e\u4e86\u4e00\u4e0b\u89e3\u51b3\u529e\u6cd5\u8fd8\u771f\u627e\u5230\u4e86\u3002","title":"AS\u663e\u793aNavigation\u6807\u7b7e"},{"location":"android/%E9%9A%8F%E7%AC%94/AS%E6%98%BE%E7%A4%BANavigation%E6%A0%87%E7%AD%BE/#_1","text":"\u627e\u5230 Settings \uff08Mac\u662f Preferences \uff09\u4e2d\u7684 Experimental \u9009\u9879\uff0c\u9009\u4e2d Enable Navigation Editor \u9009\u9879\uff0c\u7136\u540e\u91cd\u542f\u3002","title":"\u89e3\u51b3\u529e\u6cd5"},{"location":"android/%E9%9A%8F%E7%AC%94/AS%E6%9C%AC%E5%9C%B0Maven%E4%BB%93%E5%BA%93%E6%90%AD%E5%BB%BA/","text":"AS\u672c\u5730Maven\u4ed3\u5e93\u642d\u5efa \u5728 module \u7684 build.gradle \u4e2d\u52a0\u5165\u4e0b\u9762\u7684\u4ee3\u7801 apply plugin: 'maven' ... uploadArchives { repositories.mavenDeployer { // \u672c\u5730\u4ed3\u5e93\u8def\u5f84 repository(url: 'file:///Users/chenpeng/Desktop/Repositories/') // \u552f\u4e00\u6807\u8bc6 pom.groupId = \"me.simple\" // \u9879\u76ee\u540d\u79f0 pom.artifactId = \"itemdecorator\" // \u7248\u672c\u53f7 pom.version = \"1.0.0\" } } \u5237\u65b0gradle\uff0c\u5e76\u70b9\u51fb\u4e0a\u4f20 \u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u672c\u5730\u7684Maven\u4ed3\u5e93\u91cc\u770b\u5230\u6211\u4eec\u4e0a\u4f20\u7684\u5305\u3002 \u5728\u9700\u8981\u5bfc\u5165\u672c\u5730\u5305\u7684\u9879\u76ee\u7684\u6839 build.gradle \u5f15\u5165\u81ea\u5b9a\u4e49Maven\u4ed3\u5e93 allprojects { repositories { mavenLocal() maven { url \"file:///Users/chenpeng/Desktop/Repositories/\" } google() jcenter() } } \u5f15\u5165\u4f9d\u8d56 implementation 'me.simple:itemdecorator:1.0.0'","title":"AS\u672c\u5730Maven\u4ed3\u5e93\u642d\u5efa"},{"location":"android/%E9%9A%8F%E7%AC%94/AS%E6%9C%AC%E5%9C%B0Maven%E4%BB%93%E5%BA%93%E6%90%AD%E5%BB%BA/#asmaven","text":"\u5728 module \u7684 build.gradle \u4e2d\u52a0\u5165\u4e0b\u9762\u7684\u4ee3\u7801 apply plugin: 'maven' ... uploadArchives { repositories.mavenDeployer { // \u672c\u5730\u4ed3\u5e93\u8def\u5f84 repository(url: 'file:///Users/chenpeng/Desktop/Repositories/') // \u552f\u4e00\u6807\u8bc6 pom.groupId = \"me.simple\" // \u9879\u76ee\u540d\u79f0 pom.artifactId = \"itemdecorator\" // \u7248\u672c\u53f7 pom.version = \"1.0.0\" } } \u5237\u65b0gradle\uff0c\u5e76\u70b9\u51fb\u4e0a\u4f20 \u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u672c\u5730\u7684Maven\u4ed3\u5e93\u91cc\u770b\u5230\u6211\u4eec\u4e0a\u4f20\u7684\u5305\u3002 \u5728\u9700\u8981\u5bfc\u5165\u672c\u5730\u5305\u7684\u9879\u76ee\u7684\u6839 build.gradle \u5f15\u5165\u81ea\u5b9a\u4e49Maven\u4ed3\u5e93 allprojects { repositories { mavenLocal() maven { url \"file:///Users/chenpeng/Desktop/Repositories/\" } google() jcenter() } } \u5f15\u5165\u4f9d\u8d56 implementation 'me.simple:itemdecorator:1.0.0'","title":"AS\u672c\u5730Maven\u4ed3\u5e93\u642d\u5efa"},{"location":"android/%E9%9A%8F%E7%AC%94/Android%20Material%20buttons/","text":"[\u8bd1]Android Material buttons \u524d\u8a00 Google Material Design \u7684\u6587\u6863\u4e2d\u63d0\u5230\uff1a\u201c\u5f53\u6309\u94ae\u88ab\u89e6\u6478\u65f6\u5e94\u8be5\u7ed9\u4e0e\u7528\u6237\u76f8\u5e94\u7684\u53cd\u9988\u201d\uff0c\u73b0\u5728\u6709\u4e86 compat \u652f\u6301\u5e93\u5b9e\u73b0\u8fd9\u79cd\u6548\u679c\u5c06\u4f1a\u975e\u5e38\u7b80\u5355\u3002 \u6dfb\u52a0\u8d44\u6e90 \u5c06\u6700\u65b0\u7684appcompat\u5e93\u6dfb\u52a0\u5230\u60a8\u7684\u9879\u76ee\u4e2d dependencies { //replace X.X.X with the latest version compile 'com.android.support:appcompat-v7:X.X.X' } Activity\u5fc5\u987b\u7ee7\u627f AppCompatActivity public class ButtonActivity extends AppCompatActivity { ... } \u5c06button\u6dfb\u52a0\u5230\u5e03\u5c40\u6587\u4ef6 <Button android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:text=\"@string/action_click_me\" /> \u8fd9\u6837\uff0c\u4f60\u7684App\u5c31\u62e5\u6709\u4e86\u4e00\u4e2a\u57fa\u4e8e\u6750\u6599\u8bbe\u8ba1\u7684\u6309\u94ae \u6837\u5f0f \u8981\u5e94\u7528\u60a8\u7684\u81ea\u5b9a\u4e49\u989c\u8272\uff0c\u60a8\u53ef\u4ee5\u5728styles.xml\u4e2d\u5b9a\u4e49\u6309\u94ae\u6837\u5f0f \u5c06 colorButtonNormal \u548c colorControlHighlight \u6dfb\u52a0\u5230\u60a8\u7684\u4e3b\u9898\u4e2d \u8fd9\u5c06\u4e3a\u5e94\u7528\u4e2d\u7684\u6240\u6709\u6309\u94ae\u5e94\u7528\u76f8\u540c\u7684\u8bbe\u8ba1 <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\"> ... <item name=\"colorButtonNormal\">@color/colorPrimary</item> <item name=\"colorControlHighlight\">@color/colorAccent</item> </style> \u5982\u679c\u4f60\u60f3\u5355\u72ec\u8bbe\u7f6e\u6309\u94ae\u7684\u6837\u5f0f\uff0c\u53ef\u4ee5\u5728styles.xml\u4e2d\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u6309\u94ae\u4e3b\u9898 <style name=\"PrimaryButton\" parent=\"Theme.AppCompat\"> <item name=\"colorButtonNormal\">@color/colorPrimary</item> <item name=\"colorControlHighlight\">@color/colorAccent</item> </style> \u5e76\u5728\u60a8\u7684\u6309\u94ae\u4e0a\u5f15\u7528\u8be5\u4e3b\u9898 <Button android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:text=\"@string/action_click_me\" android:theme=\"@style/PrimaryButton\" /> \u6216\u8005\uff0c\u5982\u679c\u60a8\u7684\u76ee\u6807\u662fAPI 21+\uff085.0\uff09\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u5c06android\uff1abackgroundTint\u6dfb\u52a0\u5230\u6309\u94ae\u6765\u8bbe\u7f6e\u80cc\u666f\u989c\u8272\uff0c\u4f46\u8bf7\u6ce8\u610f\uff0c\u8fd9\u5728\u65e7\u7248\u672c\u4e2d\u4e0d\u8d77\u4f5c\u7528 \u6241\u5e73\u5316\u6837\u5f0f\u6309\u94ae \u5728styles.xml\u4e2d\u521b\u5efa\u6241\u5e73\u5316\u6837\u5f0f\u6309\u94ae\u7684\u4e3b\u9898 <style name=\"PrimaryFlatButton\" parent=\"Theme.AppCompat.Light\"> <item name=\"android:buttonStyle\">@style/Widget.AppCompat.Button.Borderless.Colored</item> <item name=\"colorControlHighlight\">@color/colorAccent</item> <item name=\"colorAccent\">@color/colorPrimary</item> </style> \u5e76\u5728\u60a8\u7684\u6309\u94ae\u4e0a\u5f15\u7528\u6837\u5f0f <Button android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:text=\"@string/button_normal\" android:theme=\"@style/PrimaryFlatButton\" /> \u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u6241\u5e73\u5316\u6837\u5f0f\u7684\u6309\u94ae \u539f\u6587\u8fde\u63a5","title":"[\u8bd1]Android Material buttons"},{"location":"android/%E9%9A%8F%E7%AC%94/Android%20Material%20buttons/#android-material-buttons","text":"","title":"[\u8bd1]Android Material buttons"},{"location":"android/%E9%9A%8F%E7%AC%94/Android%20Material%20buttons/#_1","text":"Google Material Design \u7684\u6587\u6863\u4e2d\u63d0\u5230\uff1a\u201c\u5f53\u6309\u94ae\u88ab\u89e6\u6478\u65f6\u5e94\u8be5\u7ed9\u4e0e\u7528\u6237\u76f8\u5e94\u7684\u53cd\u9988\u201d\uff0c\u73b0\u5728\u6709\u4e86 compat \u652f\u6301\u5e93\u5b9e\u73b0\u8fd9\u79cd\u6548\u679c\u5c06\u4f1a\u975e\u5e38\u7b80\u5355\u3002","title":"\u524d\u8a00"},{"location":"android/%E9%9A%8F%E7%AC%94/Android%20Material%20buttons/#_2","text":"\u5c06\u6700\u65b0\u7684appcompat\u5e93\u6dfb\u52a0\u5230\u60a8\u7684\u9879\u76ee\u4e2d dependencies { //replace X.X.X with the latest version compile 'com.android.support:appcompat-v7:X.X.X' } Activity\u5fc5\u987b\u7ee7\u627f AppCompatActivity public class ButtonActivity extends AppCompatActivity { ... } \u5c06button\u6dfb\u52a0\u5230\u5e03\u5c40\u6587\u4ef6 <Button android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:text=\"@string/action_click_me\" /> \u8fd9\u6837\uff0c\u4f60\u7684App\u5c31\u62e5\u6709\u4e86\u4e00\u4e2a\u57fa\u4e8e\u6750\u6599\u8bbe\u8ba1\u7684\u6309\u94ae","title":"\u6dfb\u52a0\u8d44\u6e90"},{"location":"android/%E9%9A%8F%E7%AC%94/Android%20Material%20buttons/#_3","text":"\u8981\u5e94\u7528\u60a8\u7684\u81ea\u5b9a\u4e49\u989c\u8272\uff0c\u60a8\u53ef\u4ee5\u5728styles.xml\u4e2d\u5b9a\u4e49\u6309\u94ae\u6837\u5f0f \u5c06 colorButtonNormal \u548c colorControlHighlight \u6dfb\u52a0\u5230\u60a8\u7684\u4e3b\u9898\u4e2d \u8fd9\u5c06\u4e3a\u5e94\u7528\u4e2d\u7684\u6240\u6709\u6309\u94ae\u5e94\u7528\u76f8\u540c\u7684\u8bbe\u8ba1 <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\"> ... <item name=\"colorButtonNormal\">@color/colorPrimary</item> <item name=\"colorControlHighlight\">@color/colorAccent</item> </style> \u5982\u679c\u4f60\u60f3\u5355\u72ec\u8bbe\u7f6e\u6309\u94ae\u7684\u6837\u5f0f\uff0c\u53ef\u4ee5\u5728styles.xml\u4e2d\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u6309\u94ae\u4e3b\u9898 <style name=\"PrimaryButton\" parent=\"Theme.AppCompat\"> <item name=\"colorButtonNormal\">@color/colorPrimary</item> <item name=\"colorControlHighlight\">@color/colorAccent</item> </style> \u5e76\u5728\u60a8\u7684\u6309\u94ae\u4e0a\u5f15\u7528\u8be5\u4e3b\u9898 <Button android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:text=\"@string/action_click_me\" android:theme=\"@style/PrimaryButton\" /> \u6216\u8005\uff0c\u5982\u679c\u60a8\u7684\u76ee\u6807\u662fAPI 21+\uff085.0\uff09\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u5c06android\uff1abackgroundTint\u6dfb\u52a0\u5230\u6309\u94ae\u6765\u8bbe\u7f6e\u80cc\u666f\u989c\u8272\uff0c\u4f46\u8bf7\u6ce8\u610f\uff0c\u8fd9\u5728\u65e7\u7248\u672c\u4e2d\u4e0d\u8d77\u4f5c\u7528","title":"\u6837\u5f0f"},{"location":"android/%E9%9A%8F%E7%AC%94/Android%20Material%20buttons/#_4","text":"\u5728styles.xml\u4e2d\u521b\u5efa\u6241\u5e73\u5316\u6837\u5f0f\u6309\u94ae\u7684\u4e3b\u9898 <style name=\"PrimaryFlatButton\" parent=\"Theme.AppCompat.Light\"> <item name=\"android:buttonStyle\">@style/Widget.AppCompat.Button.Borderless.Colored</item> <item name=\"colorControlHighlight\">@color/colorAccent</item> <item name=\"colorAccent\">@color/colorPrimary</item> </style> \u5e76\u5728\u60a8\u7684\u6309\u94ae\u4e0a\u5f15\u7528\u6837\u5f0f <Button android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:text=\"@string/button_normal\" android:theme=\"@style/PrimaryFlatButton\" /> \u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u6241\u5e73\u5316\u6837\u5f0f\u7684\u6309\u94ae \u539f\u6587\u8fde\u63a5","title":"\u6241\u5e73\u5316\u6837\u5f0f\u6309\u94ae"},{"location":"android/%E9%9A%8F%E7%AC%94/Android%20Selector%E7%9A%84%E7%AE%80%E5%86%99/","text":"Android Selector\u7684\u7b80\u5199 \u5728Android\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u4e00\u4e2aView\u7684\u70b9\u51fb\u6216\u9009\u4e2d\u6837\u5f0f\u7684\u6539\u53d8\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6211\u4eec\u90fd\u662f\u4f7f\u7528 drawable \u6587\u4ef6\uff0c\u4e5f\u5c31\u662f selector , shape \u7b49\u7ec4\u6210\u7684\u8d44\u6e90\u6587\u4ef6\u3002\u5927\u81f4\u5957\u8def\u5982\u4e0b\u7684\u5e38\u89c4\u5199\u6cd5\uff1a \u5e38\u89c4\u5199\u6cd5 \u6bd4\u5982\u65b0\u5efa\u4e00\u4e2a\u6b63\u5e38\u72b6\u6001\u4e0b\u7684shape\u6587\u4ef6 sp_normal.xml \uff0c\u9009\u4e2d\u72b6\u6001\u7684 sp_checked.xml \uff0c\u7ec4\u5408\u4e24\u4e2ashape\u7684 sr_default.xml \u3002 <?xml version=\"1.0\" encoding=\"utf-8\"?> <!--sp_normal.xml--> <shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\"> <solid android:color=\"@android:color/black\" /> <corners android:radius=\"4dp\" /> </shape> <?xml version=\"1.0\" encoding=\"utf-8\"?> <!--sp_checked.xml--> <shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\"> <solid android:color=\"@android:color/holo_red_light\" /> <corners android:radius=\"4dp\" /> </shape> <?xml version=\"1.0\" encoding=\"utf-8\"?> <!--sr_default.xml--> <selector xmlns:android=\"http://schemas.android.com/apk/res/android\"> <item android:drawable=\"@drawable/sp_normal\" android:state_checked=\"false\" /> <item android:drawable=\"@drawable/sp_checked\" android:state_checked=\"true\" /> </selector> \u7136\u540e\u5c06 sr_default.xml \u8bbe\u7f6e\u7ed9View\u7684 background <CheckedTextView android:id=\"@+id/tv_normal_n\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_marginTop=\"44dp\" android:background=\"@drawable/sr_default\" android:checked=\"false\" android:padding=\"10dp\" android:text=\"\u666e\u901a\u7684 checked == false\" android:textColor=\"@android:color/white\" app:layout_constraintLeft_toLeftOf=\"parent\" app:layout_constraintRight_toRightOf=\"parent\" app:layout_constraintTop_toTopOf=\"parent\" /> <CheckedTextView android:id=\"@+id/tv_normal_c\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_marginTop=\"24dp\" android:background=\"@drawable/sr_default\" android:checked=\"true\" android:padding=\"10dp\" android:text=\"\u666e\u901a\u7684 checked == true\" android:textColor=\"@android:color/white\" app:layout_constraintLeft_toLeftOf=\"parent\" app:layout_constraintRight_toRightOf=\"parent\" app:layout_constraintTop_toBottomOf=\"@id/tv_normal_n\" /> \u663e\u793a\u6548\u679c\u5982\u4e0b\uff1a \u4e0b\u9762\u6211\u4eec\u6765\u770b\u770b\u600e\u4e48\u7b80\u5199\u8fd9\u4e2a\u6837\u5f0f\u3002 \u7b80\u6613\u5199\u6cd5 \u6211\u4eec\u53ea\u9700\u8981\u65b0\u5efa\u4e00\u4e2a sr_simplify.xml \u6587\u4ef6\uff0c\u7236\u6807\u7b7e\u662f selector \uff0c\u5b50shape\u6807\u7b7e\u7528 item \u6807\u7b7e\u5305\u88f9\u3002 <?xml version=\"1.0\" encoding=\"utf-8\"?> <!--sr_simplify.xml--> <selector xmlns:android=\"http://schemas.android.com/apk/res/android\"> <item android:state_checked=\"false\"> <shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\"> <solid android:color=\"@android:color/black\" /> <corners android:radius=\"4dp\" /> </shape> </item> <item android:state_checked=\"true\"> <shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\"> <solid android:color=\"@android:color/holo_red_light\" /> <corners android:radius=\"4dp\" /> </shape> </item> </selector> \u5e03\u5c40\u8ddf\u4e0a\u9762\u5e03\u5c40\u5dee\u4e0d\u591a\uff0c\u76f4\u63a5\u770b\u663e\u793a\u6548\u679c\uff1a \u603b\u7ed3 \u6211\u4eec\u5b9e\u8df5\u53d1\u73b0\u4e24\u79cd\u5199\u6cd5\u90fd\u53ef\u4ee5\u5b9e\u73b0\u540c\u6837\u7684\u9700\u6c42\uff0c\u4f46\u662f\u5177\u4f53\u8981\u4f7f\u7528\u54ea\u79cd\u53ef\u4ee5\u4f9d\u636e\u81ea\u5df1\u7684\u5b9e\u9645\u60c5\u51b5\u6765\u6289\u62e9\u3002 \u65b9\u5f0f\u4e00\u53ef\u4ee5\u5b9e\u73b0\u66f4\u597d\u7684\u89e3\u8026\uff0cshape\u6587\u4ef6\u4e5f\u53ef\u4ee5\u590d\u7528 \u65b9\u5f0f\u4e8c\u5199\u8d77\u6765\u66f4\u52a0\u7b80\u5355\uff0c\u4e5f\u51cf\u5c11\u4e86\u6837\u5f0f\u6587\u4ef6 \u6e90\u7801\u5730\u5740\uff1ahttps://github.com/simplepeng/AndroidExamples/tree/master/example_simplify_selector","title":"Android Selector\u7684\u7b80\u5199"},{"location":"android/%E9%9A%8F%E7%AC%94/Android%20Selector%E7%9A%84%E7%AE%80%E5%86%99/#android-selector","text":"\u5728Android\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u4e00\u4e2aView\u7684\u70b9\u51fb\u6216\u9009\u4e2d\u6837\u5f0f\u7684\u6539\u53d8\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6211\u4eec\u90fd\u662f\u4f7f\u7528 drawable \u6587\u4ef6\uff0c\u4e5f\u5c31\u662f selector , shape \u7b49\u7ec4\u6210\u7684\u8d44\u6e90\u6587\u4ef6\u3002\u5927\u81f4\u5957\u8def\u5982\u4e0b\u7684\u5e38\u89c4\u5199\u6cd5\uff1a","title":"Android Selector\u7684\u7b80\u5199"},{"location":"android/%E9%9A%8F%E7%AC%94/Android%20Selector%E7%9A%84%E7%AE%80%E5%86%99/#_1","text":"\u6bd4\u5982\u65b0\u5efa\u4e00\u4e2a\u6b63\u5e38\u72b6\u6001\u4e0b\u7684shape\u6587\u4ef6 sp_normal.xml \uff0c\u9009\u4e2d\u72b6\u6001\u7684 sp_checked.xml \uff0c\u7ec4\u5408\u4e24\u4e2ashape\u7684 sr_default.xml \u3002 <?xml version=\"1.0\" encoding=\"utf-8\"?> <!--sp_normal.xml--> <shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\"> <solid android:color=\"@android:color/black\" /> <corners android:radius=\"4dp\" /> </shape> <?xml version=\"1.0\" encoding=\"utf-8\"?> <!--sp_checked.xml--> <shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\"> <solid android:color=\"@android:color/holo_red_light\" /> <corners android:radius=\"4dp\" /> </shape> <?xml version=\"1.0\" encoding=\"utf-8\"?> <!--sr_default.xml--> <selector xmlns:android=\"http://schemas.android.com/apk/res/android\"> <item android:drawable=\"@drawable/sp_normal\" android:state_checked=\"false\" /> <item android:drawable=\"@drawable/sp_checked\" android:state_checked=\"true\" /> </selector> \u7136\u540e\u5c06 sr_default.xml \u8bbe\u7f6e\u7ed9View\u7684 background <CheckedTextView android:id=\"@+id/tv_normal_n\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_marginTop=\"44dp\" android:background=\"@drawable/sr_default\" android:checked=\"false\" android:padding=\"10dp\" android:text=\"\u666e\u901a\u7684 checked == false\" android:textColor=\"@android:color/white\" app:layout_constraintLeft_toLeftOf=\"parent\" app:layout_constraintRight_toRightOf=\"parent\" app:layout_constraintTop_toTopOf=\"parent\" /> <CheckedTextView android:id=\"@+id/tv_normal_c\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_marginTop=\"24dp\" android:background=\"@drawable/sr_default\" android:checked=\"true\" android:padding=\"10dp\" android:text=\"\u666e\u901a\u7684 checked == true\" android:textColor=\"@android:color/white\" app:layout_constraintLeft_toLeftOf=\"parent\" app:layout_constraintRight_toRightOf=\"parent\" app:layout_constraintTop_toBottomOf=\"@id/tv_normal_n\" /> \u663e\u793a\u6548\u679c\u5982\u4e0b\uff1a \u4e0b\u9762\u6211\u4eec\u6765\u770b\u770b\u600e\u4e48\u7b80\u5199\u8fd9\u4e2a\u6837\u5f0f\u3002","title":"\u5e38\u89c4\u5199\u6cd5"},{"location":"android/%E9%9A%8F%E7%AC%94/Android%20Selector%E7%9A%84%E7%AE%80%E5%86%99/#_2","text":"\u6211\u4eec\u53ea\u9700\u8981\u65b0\u5efa\u4e00\u4e2a sr_simplify.xml \u6587\u4ef6\uff0c\u7236\u6807\u7b7e\u662f selector \uff0c\u5b50shape\u6807\u7b7e\u7528 item \u6807\u7b7e\u5305\u88f9\u3002 <?xml version=\"1.0\" encoding=\"utf-8\"?> <!--sr_simplify.xml--> <selector xmlns:android=\"http://schemas.android.com/apk/res/android\"> <item android:state_checked=\"false\"> <shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\"> <solid android:color=\"@android:color/black\" /> <corners android:radius=\"4dp\" /> </shape> </item> <item android:state_checked=\"true\"> <shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\"> <solid android:color=\"@android:color/holo_red_light\" /> <corners android:radius=\"4dp\" /> </shape> </item> </selector> \u5e03\u5c40\u8ddf\u4e0a\u9762\u5e03\u5c40\u5dee\u4e0d\u591a\uff0c\u76f4\u63a5\u770b\u663e\u793a\u6548\u679c\uff1a","title":"\u7b80\u6613\u5199\u6cd5"},{"location":"android/%E9%9A%8F%E7%AC%94/Android%20Selector%E7%9A%84%E7%AE%80%E5%86%99/#_3","text":"\u6211\u4eec\u5b9e\u8df5\u53d1\u73b0\u4e24\u79cd\u5199\u6cd5\u90fd\u53ef\u4ee5\u5b9e\u73b0\u540c\u6837\u7684\u9700\u6c42\uff0c\u4f46\u662f\u5177\u4f53\u8981\u4f7f\u7528\u54ea\u79cd\u53ef\u4ee5\u4f9d\u636e\u81ea\u5df1\u7684\u5b9e\u9645\u60c5\u51b5\u6765\u6289\u62e9\u3002 \u65b9\u5f0f\u4e00\u53ef\u4ee5\u5b9e\u73b0\u66f4\u597d\u7684\u89e3\u8026\uff0cshape\u6587\u4ef6\u4e5f\u53ef\u4ee5\u590d\u7528 \u65b9\u5f0f\u4e8c\u5199\u8d77\u6765\u66f4\u52a0\u7b80\u5355\uff0c\u4e5f\u51cf\u5c11\u4e86\u6837\u5f0f\u6587\u4ef6 \u6e90\u7801\u5730\u5740\uff1ahttps://github.com/simplepeng/AndroidExamples/tree/master/example_simplify_selector","title":"\u603b\u7ed3"},{"location":"android/%E9%9A%8F%E7%AC%94/ConstraintLayout-1.1.0%E6%96%B0%E7%89%B9%E6%80%A7/","text":"ConstraintLayout-1.1.0\u65b0\u7279\u6027 \u7ea6\u675f\u5e03\u5c40\u65e0\u7591\u662f\u6700\u9002\u5408\u6784\u5efa\u54cd\u5e94\u5f0f\u7528\u6237\u754c\u9762\u7684\u5e03\u5c40-\u6839\u636e\u5c4f\u5e55\u5927\u5c0f\u81ea\u52a8\u8c03\u6574\u7684\u5e03\u5c40\u3002\u5f88\u9ad8\u5174ConstraintLayout\u53d1\u5e03\u4e861.1.0\u7248\u672c\uff0c1.1.0\u7684\u8fd9\u4e9b\u65b0\u7279\u6027\u8ba9ConstraintLayout\u80fd\u591f\u505a\u51fa\u66f4\u597d\u7684\u5de5\u4f5c\uff0c\u5e76\u4e14\u4e0d\u4e22\u5931\u539f\u6709\u7684\u7279\u6027\u3002 \u5706\u5f62\u5b9a\u4f4d\uff08Circular Positioning\uff09 \u5f53\u4e00\u4e2aView\u9700\u8981\u6839\u636e\u53e6\u4e00\u4e2aView\u8fdb\u884c\u5b9a\u4f4d\u65f6\uff0c\u8be5\u89d2\u5ea6\u548c\u8ddd\u79bb\u662f\u4ece\u4e24\u4e2a\u89c6\u56fe\u7684\u4e2d\u5fc3\u70b9\u6d4b\u91cf\u7684\u3002\u5c31\u50cf\u4ee5\u67d0\u79cd\u89d2\u5ea6\u548c\u8ddd\u79bb\u56f4\u7ed5\u884c\u661f\u65cb\u8f6c\u7684\u536b\u661f\u3002 \u88ab\u7ea6\u675f\u7684View\u53ef\u4ee5\u5bf9\u9f50\u5230\u76f8\u5bf9\u4e8e\u5176\u4e2d\u5fc3View\u7684\u4efb\u4f55\u89d2\u5ea6\u548c\u534a\u5f84 app:layout_constraintCircle \u2014\u5bf9\u9f50\u4e8e\u54ea\u4e2aView app:layout_constraintCircleAngle \u2014\u5bf9\u9f50\u7684\u89d2\u5ea6 app:layout_constraintCircleRadius \u200a\u2014\u5bf9\u9f50View\u7684\u8ddd\u79bb\uff08\u534a\u5f84\uff09 <Button android:id=\"@+id/btCenter\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Center Button\"/> <Button android:id=\"@+id/btAlign\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Aligned Button\" app:layout_constraintCircle=\"@id/btCenter\" app:layout_constraintCircleAngle=\"45\" app:layout_constraintCircleRadius=\"120dp\" /> \u5c4f\u969c\uff08Barrier\uff09 \u5b83\u80fd\u591f\u5728\u8fd0\u884c\u65f6\u6839\u636e\u6307\u5b9a\u7aef\u53ef\u7528\u89c6\u56fe\u7684\u6700\u5927\u5bbd\u5ea6\u521b\u5efa\u5bfc\u7ebf\uff08guideline\uff09\u3002\u8fd9\u610f\u5473\u7740\u89c6\u56fe\u7684\u5bbd\u5ea6\u51cf\u5c0f\u6216\u589e\u52a0\u5bfc\u7ebf\u4f1a\u81ea\u52a8\u79fb\u52a8\u4ee5\u4e0e\u89c6\u56fe\u7684\u5bbd\u5ea6\u4fdd\u6301\u4e00\u81f4\u3002\u5c4f\u969c\u4e0e\u5177\u6709\u6700\u5927\u5bbd\u5ea6\u7684\u89c6\u56fe\u4fdd\u6301\u4e00\u81f4\uff0c\u8be5\u89c6\u56fe\u4e0e\u88ab\u5f15\u7528\u7684\u89c6\u56fe\u7ec4\u4e2d\u7684\u89c6\u56fe\u5177\u6709\u6700\u5927\u5bbd\u5ea6\u3002 \u5c4f\u969c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u5f00\u59cb\uff0c\u7ed3\u675f\uff0c\u9876\u90e8\uff0c\u5e95\u90e8 - \u8fd9\u91cc\u84dd\u8272\u6846\u59cb\u7ec8\u4fdd\u7559\u5728\u5c4f\u969c\u7684\u53f3\u4fa7\uff0c\u6839\u636e\u7070\u8272\u6846\u4e2d\u7684\u6700\u5927\u5bbd\u5ea6\u8ba1\u7b97\u5c4f\u969c\u6307\u5f15\u3002 <Button android:id=\"@+id/btName\" android:layout_width=\"100dp\" android:layout_height=\"wrap_content\" /> <Button android:id=\"@+id/btAge\" android:layout_width=\"150dp\" android:layout_height=\"wrap_content\" app:layout_constraintTop_toBottomOf=\"@+id/btName\" /> <android.support.constraint.Barrier android:id=\"@+id/barrier\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" app:barrierDirection=\"end\" app:constraint_referenced_ids=\"btName,btAge\" /> <Button android:id=\"@+id/btAddress\" android:layout_width=\"120dp\" android:layout_height=\"wrap_content\" app:layout_constraintStart_toEndOf=\"@+id/barrier\" /> \u8fd9\u91cc btAge \u7531\u5177\u6709150dp\u662f\u5927\u4e8e\u7684\u5bbd\u5ea6 btName \u5177\u6709100dp\u6240\u4ee5\u5792\u5bbd\u5ea6150dp\u4e4b\u540e\u5c06\u8bbe\u7f6e\u7684\u5bfc\u7ebf\u3002\u5728\u8fd0\u884c\u671f\u95f4\uff0c\u5982\u679c\u5bbd\u5ea6\u53d8\u5316\u8d85\u8fc7\u5c4f\u969c\uff0c\u5219\u4f1a\u81ea\u52a8\u91cd\u65b0\u8ba1\u7b97\u5bfc\u7ebf\u5e76\u8fdb\u4e00\u6b65\u63a8\u79fb\u5f15\u7528\u7684View\u3002 \u5206\u7ec4\uff08Group\uff09 \u8fd9\u662f\u4ee4\u5f88\u591a\u4eba\u5145\u6ee1\u671f\u5f85\u7684\u529f\u80fd\u3002\u5982\u679c\u591a\u4e2a\u89c6\u56fe\u53ef\u89c1\u6027\uff08visibility \uff09\u9700\u8981\u8bbe\u7f6e\u4e3a\u663e\u793a\u6216\u9690\u85cf\uff0c\u7528Group\u5219\u53ef\u4ee5\u8f7b\u677e\u7684\u5b8c\u6210\u3002\u60f3\u60f3\u4e00\u4e2a\u5305\u542b\u5404\u79cdView\u7684ViewGroup\uff0c\u53ea\u9700\u8981\u8bbe\u7f6eViewGroup\u7684visibility \u4e3a\u663e\u793a\u6216\u9690\u85cf\uff0c\u5b83\u7684\u6240\u6709\u88ab\u5305\u542b\u7684\u5b50View\u4e5f\u4f1a\u540c\u65f6\u88ab\u663e\u793a\u6216\u9690\u85cf\u3002\u73b0\u5728\u4f7f\u7528Group\u5c31\u53ef\u4ee5\u5b8c\u6210\u540c\u6837\u7684\u9700\u6c42\uff0c\u4f46\u4ed6\u5e76\u4e0d\u662f\u4e00\u4e2aViewGroup\uff0c\u5b83\u662f\u5728\u5e73\u9762\u7ed3\u6784\u4e0a\u7684\u4e00\u4e2aGroup\uff0c\u53ea\u9700\u8981\u5f15\u7528\u76f8\u5173View\u7684Id\u5373\u53ef\u3002 <Button android:id=\"@+id/btCenter\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Center Button\" android:textAllCaps=\"false\" app:layout_constraintBottom_toBottomOf=\"parent\" app:layout_constraintLeft_toLeftOf=\"parent\" app:layout_constraintRight_toRightOf=\"parent\" app:layout_constraintTop_toTopOf=\"parent\" /> <Button android:id=\"@+id/btAlign\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Aligned Button\" android:textAllCaps=\"false\" app:layout_constraintCircle=\"@id/btCenter\" app:layout_constraintCircleAngle=\"45\" app:layout_constraintCircleRadius=\"120dp\" /> <android.support.constraint.Group android:id=\"@+id/group\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:visibility=\"gone\" app:constraint_referenced_ids=\"btAlign,btCenter\" /> \u5360\u4f4d\u7b26\uff08PlaceHolder\uff09 \u5b83\u7528\u4e8e\u5728\u5c4f\u5e55\u4e0a\u52a8\u6001\u8bbe\u7f6e\u5185\u5bb9\uff0c\u53ea\u9700\u4f20\u9012\u5b83\u7684id\u5373\u53ef\u5c06\u4efb\u4f55\u89c6\u56fe\u8bbe\u7f6e\u4e3a\u5360\u4f4d\u7b26\u3002\u5982\u679c\u89c6\u56fe\u4e0e\u5360\u4f4d\u7b26\u5728\u540c\u4e00\u5c4f\u5e55\u4e0a\u5b58\u5728\uff0c\u5219\u5176\u53ef\u89c1\u6027\u5c06\u81ea\u52a8\u8bbe\u7f6e\u4e3a\u6d88\u5931\u3002 < ImageView android\uff1aid =\u201c@ + id / iv_call\u201d android\uff1alayout_width =\u201cwrap_content\u201d android\uff1alayout_height =\u201cwrap_content\u201d android\uff1asrc =\u201c@ drawable / ic_launcher_background\u201d /> < android.support.constraint.Placeholder android\uff1alayout_width =\u201cmatch_parent\u201d android\uff1alayout_height =\u201c100dp\u201d app\uff1acontent =\u201c@ + id / iv_call\u201d app\uff1alayout_constraintBottom_toBottomOf =\u201cparent\u201d /> \u4ee5\u7f16\u7a0b\u65b9\u5f0f\u8bbe\u7f6e\u5185\u5bb9\uff0c\u8bf7\u4f7f\u7528 placeholder.setContentId\uff08viewId\uff09 \u5c3a\u5bf8\u7ea6\u675f\uff08Dimension constraints\uff09 \u901a\u5e38\u9700\u8981\u5c06\u89c6\u56fe\u5bbd\u5ea6\u6216\u9ad8\u5ea6\u4fdd\u6301\u4e3a\u5305\u88f9\u5185\u5bb9\uff08wrap content\uff09\u800c\u4e0d\u662f\u5339\u914d\u7ea6\u675f\uff08match constraint\uff09\u6216\u5339\u914d\u7236\u9879\uff08match parent\uff09\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\u5305\u88f9\u5185\u5bb9\u4f1a\u8986\u76d6\u5e94\u7528\u7684\u7ea6\u675f\uff0c\u5e76\u4e14\u5728\u5bbd\u5ea6\u6216\u9ad8\u5ea6\u66f4\u6539\u65f6\u4e0e\u7ea6\u675f\u91cd\u53e0 \u57281.1.0\u7248\u672c\u4e2d\uff0c\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 app:layout_constrainedWidth=\u201dtrue\u201d \u6216 app:layout_constrainedHeight=\u201dtrue\u201d \u6765\u89e3\u51b3\uff0c\u5b83\u6240\u505a\u7684\u662f\u5f3a\u5236\u7ea6\u675f\uff0c\u5e76\u8ba9\u89c6\u56fe\u5bbd\u5ea6/\u9ad8\u5ea6\u4fdd\u6301\u4e3a\u5305\u88f9\u5185\u5bb9 <Button android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Hello this is an example with constraint width\" app:layout_constrainedWidth=\"true\" app:layout_constraintLeft_toLeftOf=\"parent\" app:layout_constraintRight_toRightOf=\"@+id/guideline_50\"/> \u767e\u5206\u6bd4\u7ea6\u675f \u7ea6\u675f\u5e03\u5c40\u771f\u6b63\u7f3a\u5c11\u7684\u4e00\u4ef6\u4e8b\u5c31\u662f\u80fd\u591f\u6309\u767e\u5206\u6bd4\u5b9a\u4e49\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\u5728\u767e\u5206\u6bd4\u4e2d\u5b9a\u4e49\u5bbd\u5ea6\u6216\u9ad8\u5ea6\u5bf9\u4e8e\u521b\u5efa\u5bcc\u6709\u8868\u73b0\u529b\u7684UI\u6765\u8bf4\u975e\u5e38\u6709\u7528\uff0c\u56e0\u4e3a\u5728\u79fb\u52a8\u8bbe\u5907\u6216\u5e73\u677f\u7535\u8111\u4e0a\u67e5\u770b\u65f6\uff0cdp\u4e2d\u7684\u5bbd\u5ea6\u6216\u9ad8\u5ea6\u5e76\u4e0d\u80fd\u5f88\u597d\u5730\u5de5\u4f5c\u3002 \u4f46\u662f\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528 layout_constraintWidth_percent layout_constraintHeight_percent \u4ee5\u767e\u5206\u6bd4\u7684\u5f62\u5f0f\u5b9a\u4e49\u5bbd\u5ea6\u548c\u9ad8\u5ea6 \u3002 \u6ce8\u610f \u4e3a\u4e86\u4f7f\u7528\u767e\u5206\u6bd4\u6765\u8868\u793a\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u5c3a\u5bf8\u5e94\u8be5\u662f\u5339\u914d\u7ea6\u675f\uff080dp\uff09\uff0c\u800c app\uff1alayout_constraintWidth_default =\u201cpercent \u6216 app\uff1alayout_constraintHeight_default =\u201dpercent\u201c \u9700\u8981\u8bbe\u7f6e\u4e3a\u767e\u5206\u6bd4\u5f62\u5f0f < TextView android\uff1aid =\u201c@ + id / bt\u201d android\uff1alayout_width =\u201c0dp\u201d android\uff1alayout_height =\u201cwrap_content\u201d android\uff1atext =\u201cHello\u5bbd\u5ea6\u767e\u5206\u6bd4\u201d app\uff1alayout_constraintWidth_default =\u201cpercent\u201d app\uff1alayout_constraintWidth_percent =\u201c0.5 \u201c app\uff1alayout_constraintLeft_toLeftOf =\u201dparent\u201c /> \u767e\u5206\u6bd4\u53ef\u4ee5\u5b9a\u4e49\u57280\u52301\u4e4b\u95f4\uff0c\u5176\u4e2d1\u8868\u793a100\uff05\u3002\u8fd9\u91cc\u5bbd\u5ea6\u901a\u8fc7\u4f7f\u75280.5\u88ab\u5b9a\u4e49\u4e3a50\uff05\u3002 \u901a\u8fc7\u4f7f\u7528\u7ea6\u675f\u96c6\u6765\u5b9e\u73b0\u52a8\u753b\u7684\u7ea6\u675f\u5e03\u5c40\u66f4\u52a0\u9177\u70ab\uff0c\u4f7f\u7528\u7ea6\u675f\u4f18\u5316\u5668\u548c\u590d\u6742\u94fe\u652f\u6301\u6765\u4f18\u5316\u5e03\u5c40\u3002\u5f88\u9ad8\u5174\u770b\u5230\u7ea6\u675f\u5e03\u5c40\u6b63\u5728\u589e\u52a0\u6784\u5efa\u5353\u8d8aUI\u7684\u80fd\u529b\u3002","title":"ConstraintLayout-1.1.0\u65b0\u7279\u6027"},{"location":"android/%E9%9A%8F%E7%AC%94/ConstraintLayout-1.1.0%E6%96%B0%E7%89%B9%E6%80%A7/#constraintlayout-110","text":"\u7ea6\u675f\u5e03\u5c40\u65e0\u7591\u662f\u6700\u9002\u5408\u6784\u5efa\u54cd\u5e94\u5f0f\u7528\u6237\u754c\u9762\u7684\u5e03\u5c40-\u6839\u636e\u5c4f\u5e55\u5927\u5c0f\u81ea\u52a8\u8c03\u6574\u7684\u5e03\u5c40\u3002\u5f88\u9ad8\u5174ConstraintLayout\u53d1\u5e03\u4e861.1.0\u7248\u672c\uff0c1.1.0\u7684\u8fd9\u4e9b\u65b0\u7279\u6027\u8ba9ConstraintLayout\u80fd\u591f\u505a\u51fa\u66f4\u597d\u7684\u5de5\u4f5c\uff0c\u5e76\u4e14\u4e0d\u4e22\u5931\u539f\u6709\u7684\u7279\u6027\u3002","title":"ConstraintLayout-1.1.0\u65b0\u7279\u6027"},{"location":"android/%E9%9A%8F%E7%AC%94/ConstraintLayout-1.1.0%E6%96%B0%E7%89%B9%E6%80%A7/#circular-positioning","text":"\u5f53\u4e00\u4e2aView\u9700\u8981\u6839\u636e\u53e6\u4e00\u4e2aView\u8fdb\u884c\u5b9a\u4f4d\u65f6\uff0c\u8be5\u89d2\u5ea6\u548c\u8ddd\u79bb\u662f\u4ece\u4e24\u4e2a\u89c6\u56fe\u7684\u4e2d\u5fc3\u70b9\u6d4b\u91cf\u7684\u3002\u5c31\u50cf\u4ee5\u67d0\u79cd\u89d2\u5ea6\u548c\u8ddd\u79bb\u56f4\u7ed5\u884c\u661f\u65cb\u8f6c\u7684\u536b\u661f\u3002 \u88ab\u7ea6\u675f\u7684View\u53ef\u4ee5\u5bf9\u9f50\u5230\u76f8\u5bf9\u4e8e\u5176\u4e2d\u5fc3View\u7684\u4efb\u4f55\u89d2\u5ea6\u548c\u534a\u5f84 app:layout_constraintCircle \u2014\u5bf9\u9f50\u4e8e\u54ea\u4e2aView app:layout_constraintCircleAngle \u2014\u5bf9\u9f50\u7684\u89d2\u5ea6 app:layout_constraintCircleRadius \u200a\u2014\u5bf9\u9f50View\u7684\u8ddd\u79bb\uff08\u534a\u5f84\uff09 <Button android:id=\"@+id/btCenter\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Center Button\"/> <Button android:id=\"@+id/btAlign\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Aligned Button\" app:layout_constraintCircle=\"@id/btCenter\" app:layout_constraintCircleAngle=\"45\" app:layout_constraintCircleRadius=\"120dp\" />","title":"\u5706\u5f62\u5b9a\u4f4d\uff08Circular Positioning\uff09"},{"location":"android/%E9%9A%8F%E7%AC%94/ConstraintLayout-1.1.0%E6%96%B0%E7%89%B9%E6%80%A7/#barrier","text":"\u5b83\u80fd\u591f\u5728\u8fd0\u884c\u65f6\u6839\u636e\u6307\u5b9a\u7aef\u53ef\u7528\u89c6\u56fe\u7684\u6700\u5927\u5bbd\u5ea6\u521b\u5efa\u5bfc\u7ebf\uff08guideline\uff09\u3002\u8fd9\u610f\u5473\u7740\u89c6\u56fe\u7684\u5bbd\u5ea6\u51cf\u5c0f\u6216\u589e\u52a0\u5bfc\u7ebf\u4f1a\u81ea\u52a8\u79fb\u52a8\u4ee5\u4e0e\u89c6\u56fe\u7684\u5bbd\u5ea6\u4fdd\u6301\u4e00\u81f4\u3002\u5c4f\u969c\u4e0e\u5177\u6709\u6700\u5927\u5bbd\u5ea6\u7684\u89c6\u56fe\u4fdd\u6301\u4e00\u81f4\uff0c\u8be5\u89c6\u56fe\u4e0e\u88ab\u5f15\u7528\u7684\u89c6\u56fe\u7ec4\u4e2d\u7684\u89c6\u56fe\u5177\u6709\u6700\u5927\u5bbd\u5ea6\u3002 \u5c4f\u969c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u5f00\u59cb\uff0c\u7ed3\u675f\uff0c\u9876\u90e8\uff0c\u5e95\u90e8 - \u8fd9\u91cc\u84dd\u8272\u6846\u59cb\u7ec8\u4fdd\u7559\u5728\u5c4f\u969c\u7684\u53f3\u4fa7\uff0c\u6839\u636e\u7070\u8272\u6846\u4e2d\u7684\u6700\u5927\u5bbd\u5ea6\u8ba1\u7b97\u5c4f\u969c\u6307\u5f15\u3002 <Button android:id=\"@+id/btName\" android:layout_width=\"100dp\" android:layout_height=\"wrap_content\" /> <Button android:id=\"@+id/btAge\" android:layout_width=\"150dp\" android:layout_height=\"wrap_content\" app:layout_constraintTop_toBottomOf=\"@+id/btName\" /> <android.support.constraint.Barrier android:id=\"@+id/barrier\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" app:barrierDirection=\"end\" app:constraint_referenced_ids=\"btName,btAge\" /> <Button android:id=\"@+id/btAddress\" android:layout_width=\"120dp\" android:layout_height=\"wrap_content\" app:layout_constraintStart_toEndOf=\"@+id/barrier\" /> \u8fd9\u91cc btAge \u7531\u5177\u6709150dp\u662f\u5927\u4e8e\u7684\u5bbd\u5ea6 btName \u5177\u6709100dp\u6240\u4ee5\u5792\u5bbd\u5ea6150dp\u4e4b\u540e\u5c06\u8bbe\u7f6e\u7684\u5bfc\u7ebf\u3002\u5728\u8fd0\u884c\u671f\u95f4\uff0c\u5982\u679c\u5bbd\u5ea6\u53d8\u5316\u8d85\u8fc7\u5c4f\u969c\uff0c\u5219\u4f1a\u81ea\u52a8\u91cd\u65b0\u8ba1\u7b97\u5bfc\u7ebf\u5e76\u8fdb\u4e00\u6b65\u63a8\u79fb\u5f15\u7528\u7684View\u3002","title":"\u5c4f\u969c\uff08Barrier\uff09"},{"location":"android/%E9%9A%8F%E7%AC%94/ConstraintLayout-1.1.0%E6%96%B0%E7%89%B9%E6%80%A7/#group","text":"\u8fd9\u662f\u4ee4\u5f88\u591a\u4eba\u5145\u6ee1\u671f\u5f85\u7684\u529f\u80fd\u3002\u5982\u679c\u591a\u4e2a\u89c6\u56fe\u53ef\u89c1\u6027\uff08visibility \uff09\u9700\u8981\u8bbe\u7f6e\u4e3a\u663e\u793a\u6216\u9690\u85cf\uff0c\u7528Group\u5219\u53ef\u4ee5\u8f7b\u677e\u7684\u5b8c\u6210\u3002\u60f3\u60f3\u4e00\u4e2a\u5305\u542b\u5404\u79cdView\u7684ViewGroup\uff0c\u53ea\u9700\u8981\u8bbe\u7f6eViewGroup\u7684visibility \u4e3a\u663e\u793a\u6216\u9690\u85cf\uff0c\u5b83\u7684\u6240\u6709\u88ab\u5305\u542b\u7684\u5b50View\u4e5f\u4f1a\u540c\u65f6\u88ab\u663e\u793a\u6216\u9690\u85cf\u3002\u73b0\u5728\u4f7f\u7528Group\u5c31\u53ef\u4ee5\u5b8c\u6210\u540c\u6837\u7684\u9700\u6c42\uff0c\u4f46\u4ed6\u5e76\u4e0d\u662f\u4e00\u4e2aViewGroup\uff0c\u5b83\u662f\u5728\u5e73\u9762\u7ed3\u6784\u4e0a\u7684\u4e00\u4e2aGroup\uff0c\u53ea\u9700\u8981\u5f15\u7528\u76f8\u5173View\u7684Id\u5373\u53ef\u3002 <Button android:id=\"@+id/btCenter\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Center Button\" android:textAllCaps=\"false\" app:layout_constraintBottom_toBottomOf=\"parent\" app:layout_constraintLeft_toLeftOf=\"parent\" app:layout_constraintRight_toRightOf=\"parent\" app:layout_constraintTop_toTopOf=\"parent\" /> <Button android:id=\"@+id/btAlign\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Aligned Button\" android:textAllCaps=\"false\" app:layout_constraintCircle=\"@id/btCenter\" app:layout_constraintCircleAngle=\"45\" app:layout_constraintCircleRadius=\"120dp\" /> <android.support.constraint.Group android:id=\"@+id/group\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:visibility=\"gone\" app:constraint_referenced_ids=\"btAlign,btCenter\" />","title":"\u5206\u7ec4\uff08Group\uff09"},{"location":"android/%E9%9A%8F%E7%AC%94/ConstraintLayout-1.1.0%E6%96%B0%E7%89%B9%E6%80%A7/#placeholder","text":"\u5b83\u7528\u4e8e\u5728\u5c4f\u5e55\u4e0a\u52a8\u6001\u8bbe\u7f6e\u5185\u5bb9\uff0c\u53ea\u9700\u4f20\u9012\u5b83\u7684id\u5373\u53ef\u5c06\u4efb\u4f55\u89c6\u56fe\u8bbe\u7f6e\u4e3a\u5360\u4f4d\u7b26\u3002\u5982\u679c\u89c6\u56fe\u4e0e\u5360\u4f4d\u7b26\u5728\u540c\u4e00\u5c4f\u5e55\u4e0a\u5b58\u5728\uff0c\u5219\u5176\u53ef\u89c1\u6027\u5c06\u81ea\u52a8\u8bbe\u7f6e\u4e3a\u6d88\u5931\u3002 < ImageView android\uff1aid =\u201c@ + id / iv_call\u201d android\uff1alayout_width =\u201cwrap_content\u201d android\uff1alayout_height =\u201cwrap_content\u201d android\uff1asrc =\u201c@ drawable / ic_launcher_background\u201d /> < android.support.constraint.Placeholder android\uff1alayout_width =\u201cmatch_parent\u201d android\uff1alayout_height =\u201c100dp\u201d app\uff1acontent =\u201c@ + id / iv_call\u201d app\uff1alayout_constraintBottom_toBottomOf =\u201cparent\u201d /> \u4ee5\u7f16\u7a0b\u65b9\u5f0f\u8bbe\u7f6e\u5185\u5bb9\uff0c\u8bf7\u4f7f\u7528 placeholder.setContentId\uff08viewId\uff09","title":"\u5360\u4f4d\u7b26\uff08PlaceHolder\uff09"},{"location":"android/%E9%9A%8F%E7%AC%94/ConstraintLayout-1.1.0%E6%96%B0%E7%89%B9%E6%80%A7/#dimension-constraints","text":"\u901a\u5e38\u9700\u8981\u5c06\u89c6\u56fe\u5bbd\u5ea6\u6216\u9ad8\u5ea6\u4fdd\u6301\u4e3a\u5305\u88f9\u5185\u5bb9\uff08wrap content\uff09\u800c\u4e0d\u662f\u5339\u914d\u7ea6\u675f\uff08match constraint\uff09\u6216\u5339\u914d\u7236\u9879\uff08match parent\uff09\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\u5305\u88f9\u5185\u5bb9\u4f1a\u8986\u76d6\u5e94\u7528\u7684\u7ea6\u675f\uff0c\u5e76\u4e14\u5728\u5bbd\u5ea6\u6216\u9ad8\u5ea6\u66f4\u6539\u65f6\u4e0e\u7ea6\u675f\u91cd\u53e0 \u57281.1.0\u7248\u672c\u4e2d\uff0c\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 app:layout_constrainedWidth=\u201dtrue\u201d \u6216 app:layout_constrainedHeight=\u201dtrue\u201d \u6765\u89e3\u51b3\uff0c\u5b83\u6240\u505a\u7684\u662f\u5f3a\u5236\u7ea6\u675f\uff0c\u5e76\u8ba9\u89c6\u56fe\u5bbd\u5ea6/\u9ad8\u5ea6\u4fdd\u6301\u4e3a\u5305\u88f9\u5185\u5bb9 <Button android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Hello this is an example with constraint width\" app:layout_constrainedWidth=\"true\" app:layout_constraintLeft_toLeftOf=\"parent\" app:layout_constraintRight_toRightOf=\"@+id/guideline_50\"/>","title":"\u5c3a\u5bf8\u7ea6\u675f\uff08Dimension constraints\uff09"},{"location":"android/%E9%9A%8F%E7%AC%94/ConstraintLayout-1.1.0%E6%96%B0%E7%89%B9%E6%80%A7/#_1","text":"\u7ea6\u675f\u5e03\u5c40\u771f\u6b63\u7f3a\u5c11\u7684\u4e00\u4ef6\u4e8b\u5c31\u662f\u80fd\u591f\u6309\u767e\u5206\u6bd4\u5b9a\u4e49\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\u5728\u767e\u5206\u6bd4\u4e2d\u5b9a\u4e49\u5bbd\u5ea6\u6216\u9ad8\u5ea6\u5bf9\u4e8e\u521b\u5efa\u5bcc\u6709\u8868\u73b0\u529b\u7684UI\u6765\u8bf4\u975e\u5e38\u6709\u7528\uff0c\u56e0\u4e3a\u5728\u79fb\u52a8\u8bbe\u5907\u6216\u5e73\u677f\u7535\u8111\u4e0a\u67e5\u770b\u65f6\uff0cdp\u4e2d\u7684\u5bbd\u5ea6\u6216\u9ad8\u5ea6\u5e76\u4e0d\u80fd\u5f88\u597d\u5730\u5de5\u4f5c\u3002 \u4f46\u662f\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528 layout_constraintWidth_percent layout_constraintHeight_percent \u4ee5\u767e\u5206\u6bd4\u7684\u5f62\u5f0f\u5b9a\u4e49\u5bbd\u5ea6\u548c\u9ad8\u5ea6 \u3002 \u6ce8\u610f \u4e3a\u4e86\u4f7f\u7528\u767e\u5206\u6bd4\u6765\u8868\u793a\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u5c3a\u5bf8\u5e94\u8be5\u662f\u5339\u914d\u7ea6\u675f\uff080dp\uff09\uff0c\u800c app\uff1alayout_constraintWidth_default =\u201cpercent \u6216 app\uff1alayout_constraintHeight_default =\u201dpercent\u201c \u9700\u8981\u8bbe\u7f6e\u4e3a\u767e\u5206\u6bd4\u5f62\u5f0f < TextView android\uff1aid =\u201c@ + id / bt\u201d android\uff1alayout_width =\u201c0dp\u201d android\uff1alayout_height =\u201cwrap_content\u201d android\uff1atext =\u201cHello\u5bbd\u5ea6\u767e\u5206\u6bd4\u201d app\uff1alayout_constraintWidth_default =\u201cpercent\u201d app\uff1alayout_constraintWidth_percent =\u201c0.5 \u201c app\uff1alayout_constraintLeft_toLeftOf =\u201dparent\u201c /> \u767e\u5206\u6bd4\u53ef\u4ee5\u5b9a\u4e49\u57280\u52301\u4e4b\u95f4\uff0c\u5176\u4e2d1\u8868\u793a100\uff05\u3002\u8fd9\u91cc\u5bbd\u5ea6\u901a\u8fc7\u4f7f\u75280.5\u88ab\u5b9a\u4e49\u4e3a50\uff05\u3002 \u901a\u8fc7\u4f7f\u7528\u7ea6\u675f\u96c6\u6765\u5b9e\u73b0\u52a8\u753b\u7684\u7ea6\u675f\u5e03\u5c40\u66f4\u52a0\u9177\u70ab\uff0c\u4f7f\u7528\u7ea6\u675f\u4f18\u5316\u5668\u548c\u590d\u6742\u94fe\u652f\u6301\u6765\u4f18\u5316\u5e03\u5c40\u3002\u5f88\u9ad8\u5174\u770b\u5230\u7ea6\u675f\u5e03\u5c40\u6b63\u5728\u589e\u52a0\u6784\u5efa\u5353\u8d8aUI\u7684\u80fd\u529b\u3002","title":"\u767e\u5206\u6bd4\u7ea6\u675f"},{"location":"android/%E9%9A%8F%E7%AC%94/EventBus%E6%90%AD%E9%85%8DLifeCycle%E5%8F%AF%E8%83%BD%E6%9B%B4%E7%BE%8E%E5%91%B3/","text":"EventBus\u642d\u914dLifeCycle\u53ef\u80fd\u66f4\u7f8e\u5473 \u7b80\u8981\u4ecb\u7ecd EventBus\uff1a\u4e00\u4e2a\u7528\u6765\u5728\u7ec4\u4ef6\u4e4b\u95f4\u53d1\u901a\u77e5\u901a\u4fe1\u7684\u5f00\u6e90\u5e93\u3002 LifeCycle\uff1aJetPack\u5e93\u4e2d\u4e00\u4e2a\u80fd\u611f\u77e5\u751f\u547d\u5468\u671f\u7684\u7ec4\u4ef6\u3002 Kotlin\u6269\u5c55\u51fd\u6570\uff1a\u53ef\u4ee5\u4e3a\u5df2\u7ecf\u5b58\u5728\u7684\u7c7b\u6dfb\u52a0\u65b0\u7684\u65b9\u6cd5\u7684\u9ed1\u9b54\u6cd5\u3002 \u89e3\u51b3\u7684\u95ee\u9898 \u5728\u4f7f\u7528 EventBus \u65f6\uff0c\u6211\u4eec\u6bcf\u6b21\u5728\u9700\u8981\u63a5\u53d7\u901a\u77e5\u7684\u5730\u65b9\uff0c\u90fd\u9700\u8981 \u6ce8\u518c \u548c \u89e3\u7ed1 \u76d1\u542c\u51fd\u6570\u3002\u7c7b\u4f3c\u4e0b\u9762\u7684\u6a21\u677f\u4ee3\u7801\uff1a @Override protected void onStart() { super.onStart(); EventBus.getDefault().register(this); } @Override protected void onStop() { super.onStop(); EventBus.getDefault().unregister(this); } \u5982\u679c\u5fd8\u8bb0\u4e86 unregister \u51fd\u6570\uff0c\u53ef\u80fd\u5c31\u4f1a\u9020\u6210 \u5185\u5b58\u6cc4\u9732 \uff0c \u7a7a\u6307\u9488 \u7b49\u5947\u602a\u95ee\u9898\u3002\u5f53\u8fd9\u4e2a\u7c7b\u4e0d\u9700\u8981\u901a\u77e5\u76d1\u542c\u65f6\uff0c\u5220\u9664\u4e5f\u633a\u9ebb\u70e6\u7684\u3002\u6240\u4ee5\u5f88\u591a\u4eba\u53ef\u80fd\u6295\u5411\u4e86 LiveDataBus \u7684\u6000\u62b1\u3002 \u90a3\u4e48\u5c06 EventBus \u548c LifeCycle \u642d\u914d\u4e0a\u4e86\uff0c\u6ce8\u518c\u51fd\u6570\u53ef\u4ee5\u600e\u4e48\u5199\u5462\uff1f //Activity|Fragment,\u6240\u6709\u5b9e\u73b0\u4e86LifecycleOwner\u7684\u7c7b EventBus.getDefault().registerOnStart(this); \u8fd9\u5c31\u7b80\u5355\u591a\u4e86\uff0c\u5bf9\u5427\uff01\u6709\u70b9 LiveDataBus \u90a3\u5473\u4e86\u3002\u4e0a\u9762\u7684\u51fd\u6570\u4f1a\u5728 onStart \u751f\u547d\u5468\u671f\u51fd\u6570\u4e2d\u81ea\u52a8 \u6ce8\u518c EventBus\u76d1\u542c\uff0c\u5e76\u5728 onStop \u751f\u547d\u5468\u671f\u51fd\u6570\u4e2d\u81ea\u52a8 \u89e3\u7ed1 \u76d1\u542c\u3002 \u53ef\u7528\u65b9\u6cd5 //\u751f\u547d\u5468\u671f\u6ce8\u518c\u76d1\u542c EventBus.getDefault().registerOnStart(lifecycleOwner); EventBus.getDefault().registerOnStart(lifecycleOwner); EventBus.getDefault().registerOnStart(lifecycleOwner); //\u5b89\u5168\u8c03\u7528\u6ce8\u518c/\u89e3\u7ed1 EventBus.getDefault().safeRegister(obj); EventBus.getDefault().safeUnregister(obj); \u5b9e\u73b0\u601d\u8def \u7ed9EventBus\u6dfb\u52a0\u6269\u5c55\u51fd\u6570 /** * \u5728onCreate\u4e2d\u6ce8\u518c\u4e8b\u4ef6\uff0c\u81ea\u52a8\u5728onDestroy\u4e2d\u6ce8\u9500\u4e8b\u4ef6 */ fun <T : LifecycleOwner> EventBus.registerOnCreate(owner: T) { if (this.isRegistered(owner)) return owner.lifecycle.addObserver(OnCreateLifecycleObserver(this, owner)) } \u5b9e\u73b0 OnCreateLifecycleObserver class OnCreateLifecycleObserver<T>( private val eventBus: EventBus, private val owner: T ) : LifecycleObserver { } \u5728\u5bf9\u5e94\u7684\u751f\u547d\u5468\u671f\u51fd\u6570\u4e2d\u6dfb\u52a0 \u6ce8\u518c\\\u89e3\u7ed1 \u51fd\u6570 class OnCreateLifecycleObserver<T>( private val eventBus: EventBus, private val owner: T ) : LifecycleObserver { @OnLifecycleEvent(Lifecycle.Event.ON_CREATE) fun onCreate() { if (eventBus.isRegistered(owner)) return eventBus.register(owner) } @OnLifecycleEvent(Lifecycle.Event.ON_DESTROY) fun onDestroy() { if (!eventBus.isRegistered(owner)) return eventBus.unregister(owner) } } LifeCycle \u4e0d\u600e\u4e48\u4f1a\u7684\u53ef\u4ee5\u76f4\u63a5\u770b \u5b98\u65b9\u6587\u6863 \uff0c\u4f7f\u7528\u8fd8\u662f\u86ee\u7b80\u5355\u3002 \u5176\u4ed6\u751f\u547d\u5468\u671f\u5b9e\u73b0\u7c7b\u4f3c\uff0c\u5177\u4f53\u53ef\u770b\u6e90\u7801\u5b9e\u73b0\u3002 \u6e90\u7801 https://github.com/simplepeng/NiceKTX","title":"EventBus\u642d\u914dLifeCycle\u53ef\u80fd\u66f4\u7f8e\u5473"},{"location":"android/%E9%9A%8F%E7%AC%94/EventBus%E6%90%AD%E9%85%8DLifeCycle%E5%8F%AF%E8%83%BD%E6%9B%B4%E7%BE%8E%E5%91%B3/#eventbuslifecycle","text":"","title":"EventBus\u642d\u914dLifeCycle\u53ef\u80fd\u66f4\u7f8e\u5473"},{"location":"android/%E9%9A%8F%E7%AC%94/EventBus%E6%90%AD%E9%85%8DLifeCycle%E5%8F%AF%E8%83%BD%E6%9B%B4%E7%BE%8E%E5%91%B3/#_1","text":"EventBus\uff1a\u4e00\u4e2a\u7528\u6765\u5728\u7ec4\u4ef6\u4e4b\u95f4\u53d1\u901a\u77e5\u901a\u4fe1\u7684\u5f00\u6e90\u5e93\u3002 LifeCycle\uff1aJetPack\u5e93\u4e2d\u4e00\u4e2a\u80fd\u611f\u77e5\u751f\u547d\u5468\u671f\u7684\u7ec4\u4ef6\u3002 Kotlin\u6269\u5c55\u51fd\u6570\uff1a\u53ef\u4ee5\u4e3a\u5df2\u7ecf\u5b58\u5728\u7684\u7c7b\u6dfb\u52a0\u65b0\u7684\u65b9\u6cd5\u7684\u9ed1\u9b54\u6cd5\u3002","title":"\u7b80\u8981\u4ecb\u7ecd"},{"location":"android/%E9%9A%8F%E7%AC%94/EventBus%E6%90%AD%E9%85%8DLifeCycle%E5%8F%AF%E8%83%BD%E6%9B%B4%E7%BE%8E%E5%91%B3/#_2","text":"\u5728\u4f7f\u7528 EventBus \u65f6\uff0c\u6211\u4eec\u6bcf\u6b21\u5728\u9700\u8981\u63a5\u53d7\u901a\u77e5\u7684\u5730\u65b9\uff0c\u90fd\u9700\u8981 \u6ce8\u518c \u548c \u89e3\u7ed1 \u76d1\u542c\u51fd\u6570\u3002\u7c7b\u4f3c\u4e0b\u9762\u7684\u6a21\u677f\u4ee3\u7801\uff1a @Override protected void onStart() { super.onStart(); EventBus.getDefault().register(this); } @Override protected void onStop() { super.onStop(); EventBus.getDefault().unregister(this); } \u5982\u679c\u5fd8\u8bb0\u4e86 unregister \u51fd\u6570\uff0c\u53ef\u80fd\u5c31\u4f1a\u9020\u6210 \u5185\u5b58\u6cc4\u9732 \uff0c \u7a7a\u6307\u9488 \u7b49\u5947\u602a\u95ee\u9898\u3002\u5f53\u8fd9\u4e2a\u7c7b\u4e0d\u9700\u8981\u901a\u77e5\u76d1\u542c\u65f6\uff0c\u5220\u9664\u4e5f\u633a\u9ebb\u70e6\u7684\u3002\u6240\u4ee5\u5f88\u591a\u4eba\u53ef\u80fd\u6295\u5411\u4e86 LiveDataBus \u7684\u6000\u62b1\u3002 \u90a3\u4e48\u5c06 EventBus \u548c LifeCycle \u642d\u914d\u4e0a\u4e86\uff0c\u6ce8\u518c\u51fd\u6570\u53ef\u4ee5\u600e\u4e48\u5199\u5462\uff1f //Activity|Fragment,\u6240\u6709\u5b9e\u73b0\u4e86LifecycleOwner\u7684\u7c7b EventBus.getDefault().registerOnStart(this); \u8fd9\u5c31\u7b80\u5355\u591a\u4e86\uff0c\u5bf9\u5427\uff01\u6709\u70b9 LiveDataBus \u90a3\u5473\u4e86\u3002\u4e0a\u9762\u7684\u51fd\u6570\u4f1a\u5728 onStart \u751f\u547d\u5468\u671f\u51fd\u6570\u4e2d\u81ea\u52a8 \u6ce8\u518c EventBus\u76d1\u542c\uff0c\u5e76\u5728 onStop \u751f\u547d\u5468\u671f\u51fd\u6570\u4e2d\u81ea\u52a8 \u89e3\u7ed1 \u76d1\u542c\u3002","title":"\u89e3\u51b3\u7684\u95ee\u9898"},{"location":"android/%E9%9A%8F%E7%AC%94/EventBus%E6%90%AD%E9%85%8DLifeCycle%E5%8F%AF%E8%83%BD%E6%9B%B4%E7%BE%8E%E5%91%B3/#_3","text":"//\u751f\u547d\u5468\u671f\u6ce8\u518c\u76d1\u542c EventBus.getDefault().registerOnStart(lifecycleOwner); EventBus.getDefault().registerOnStart(lifecycleOwner); EventBus.getDefault().registerOnStart(lifecycleOwner); //\u5b89\u5168\u8c03\u7528\u6ce8\u518c/\u89e3\u7ed1 EventBus.getDefault().safeRegister(obj); EventBus.getDefault().safeUnregister(obj);","title":"\u53ef\u7528\u65b9\u6cd5"},{"location":"android/%E9%9A%8F%E7%AC%94/EventBus%E6%90%AD%E9%85%8DLifeCycle%E5%8F%AF%E8%83%BD%E6%9B%B4%E7%BE%8E%E5%91%B3/#_4","text":"\u7ed9EventBus\u6dfb\u52a0\u6269\u5c55\u51fd\u6570 /** * \u5728onCreate\u4e2d\u6ce8\u518c\u4e8b\u4ef6\uff0c\u81ea\u52a8\u5728onDestroy\u4e2d\u6ce8\u9500\u4e8b\u4ef6 */ fun <T : LifecycleOwner> EventBus.registerOnCreate(owner: T) { if (this.isRegistered(owner)) return owner.lifecycle.addObserver(OnCreateLifecycleObserver(this, owner)) } \u5b9e\u73b0 OnCreateLifecycleObserver class OnCreateLifecycleObserver<T>( private val eventBus: EventBus, private val owner: T ) : LifecycleObserver { } \u5728\u5bf9\u5e94\u7684\u751f\u547d\u5468\u671f\u51fd\u6570\u4e2d\u6dfb\u52a0 \u6ce8\u518c\\\u89e3\u7ed1 \u51fd\u6570 class OnCreateLifecycleObserver<T>( private val eventBus: EventBus, private val owner: T ) : LifecycleObserver { @OnLifecycleEvent(Lifecycle.Event.ON_CREATE) fun onCreate() { if (eventBus.isRegistered(owner)) return eventBus.register(owner) } @OnLifecycleEvent(Lifecycle.Event.ON_DESTROY) fun onDestroy() { if (!eventBus.isRegistered(owner)) return eventBus.unregister(owner) } } LifeCycle \u4e0d\u600e\u4e48\u4f1a\u7684\u53ef\u4ee5\u76f4\u63a5\u770b \u5b98\u65b9\u6587\u6863 \uff0c\u4f7f\u7528\u8fd8\u662f\u86ee\u7b80\u5355\u3002 \u5176\u4ed6\u751f\u547d\u5468\u671f\u5b9e\u73b0\u7c7b\u4f3c\uff0c\u5177\u4f53\u53ef\u770b\u6e90\u7801\u5b9e\u73b0\u3002","title":"\u5b9e\u73b0\u601d\u8def"},{"location":"android/%E9%9A%8F%E7%AC%94/EventBus%E6%90%AD%E9%85%8DLifeCycle%E5%8F%AF%E8%83%BD%E6%9B%B4%E7%BE%8E%E5%91%B3/#_5","text":"https://github.com/simplepeng/NiceKTX","title":"\u6e90\u7801"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%85%A5%E9%97%A8%E8%AE%B2%E8%A7%A3/","text":"Kotlin\u5165\u95e8\u8bb2\u89e3 Kotlin\u7b80\u4ecb \u662f\u4e00\u95e8\u9759\u6001\u7c7b\u578b\u7f16\u7a0b\u8bed\u8a00\uff0c\u53d8\u91cf\u7684\u7c7b\u578b\u5728\u5b9a\u4e49\u7684\u65f6\u5019\u5c31\u5fc5\u987b\u786e\u5b9a\u3002(\u53e4\u8bed\u4e91\uff1a\u52a8\u6001\u7c7b\u578b\u4e00\u65f6\u723d\uff0c\u4ee3\u7801\u91cd\u6784\u706b\u846c\u573a) \u7531 JetBrians \u516c\u53f8\u5f00\u53d1\u8bbe\u8ba1\uff0c\u8be5\u516c\u53f8\u662f\u4e00\u5bb6\u6377\u514b\u7684\u8f6f\u4ef6\u516c\u53f8\uff0c\u662f\u8457\u540d\u7684IDE\u5f00\u53d1\u5546\uff0c\u5bf9\u5f88\u591a\u7684\u5f00\u53d1\u8bed\u8a00\u548c\u5e73\u53f0\u90fd\u63d0\u4f9b\u4e86\u76f8\u5e94\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff0c\u6bd4\u5982Java\u7684\uff0cOC\u7684\uff0cJavaScript\uff0cPHP\uff0cC/C++\u7b49\u3002\u800c\u5176\u4e2d\u6700\u8457\u540d\u7684\u662fIntelliJ IDEA \uff0cJava\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff0c\u88ab\u79f0\u4e3a\u76ee\u524d\u6700\u597d\u7528\u7684java IDE\u3002\u800c\u4e14Android Studio\u5c31\u662fGoogle\u57fa\u4e8eIntelliJ IDEA \u5f00\u53d1\u7684\u3002 Kotlin\u662f\u5f00\u6e90\u7684\uff0c\u57fa\u4e8eApache2.0\u534f\u8bae\u3002 Kotlin\u662f\u5b8c\u5168\u517c\u5bb9Java\uff0c\u6240\u4ee5\u5207\u6362\u6210\u672c\u6781\u4f4e\u3002 \u7b80\u6613\u5165\u95e8 \u5b9a\u4e49\u53d8\u91cf/\u5e38\u91cf var a:Int = 1 var a = 1//\u81ea\u52a8\u63a8\u5bfc\u51fa\u7c7b\u578b \u5b9a\u4e49\u65b9\u6cd5 fun haha(a:String,b:Int):String{ } \u5b9a\u4e49\u65b9\u6cd5\u4f7f\u7528 fun \u5173\u952e\u5b57\uff0c\u8fd4\u56de\u503c\u4e3a\u62ec\u53f7\u7ed3\u5c3e : \u540e\u9762\u7684\u7c7b\u578b\u53c2\u6570\uff0c\u6ca1\u6709\u8fd4\u56de\u503c\u53ef\u4ee5\u4e0d\u5199 \u903b\u8f91\u63a7\u5236 \u53cd\u6b63\u5c31\u662f if-else fun maxOf(a: Int, b: Int): Int { if (a > b) { return a } else { return b } } //\u4e0a\u9762\u7684\u7b80\u5199 fun maxOf(a: Int, b: Int) = if (a > b) a else b kotlin\u7684 switch -> when ,when\u76f8\u5bf9\u4e8eswitch\u6765\u8bf4\uff0c\u667a\u80fd\u592a\u591a\u4e86\u3002 fun describe(obj: Any): String = when (obj) { 1 -> \"One\" \"Hello\" -> \"Greeting\" is Long -> \"Long\" !is String -> \"Not a string\" else -> \"Unknown\" } \u904d\u5386\uff0c\u5faa\u73af \u53cd\u6b63\u4e5f\u662f for,while val items = listOf(\"apple\", \"banana\", \"kiwifruit\") for (item in items) { println(item) } //\u533a\u95f4 for (item in 0..100) { println(item) } val items = listOf(\"apple\", \"banana\", \"kiwifruit\") var index = 0 while (index < items.size) { println(\"item at $index is ${items[index]}\") index++ } \u76f8\u5bf9\u4e8eJava\u7684\u4f18\u52bf \u5b9a\u4e49\u53d8\u91cf\uff0c\u8c03\u7528\u65b9\u6cd5\u53ef\u4ee5\u4e0d\u7528 \uff1b \u7ed3\u5c3e 1.\u7a7a\u5b89\u5168 \u5199Java\u53ef\u80fd\u9047\u5230\u6700\u591a\u7684\u5c31\u662f NullPointerException \u5f02\u5e38\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e5f\u662fKotlin\u5f15\u5165 \u7a7a\u5b89\u5168 \u7684\u539f\u56e0\u3002 \u5728Kotlin\u4e2d\uff0c\u5bf9\u8c61\u58f0\u660e\u5206\u4e3a \u53ef\u7a7a\u5f15\u7528 \u548c \u975e\u7a7a\u5f15\u7528 \u4e24\u79cd\u3002 var a:String = \"110\"//\u975e\u7a7a\u5f15\u7528 var b:String? = \"120\"//\u53ef\u7a7a\u5f15\u7528 a = null//\u5f53\u5bf9\u975e\u7a7a\u5f15\u7528\u8d4bnull\u503c\u65f6\uff0c\u7f16\u8bd1\u5668\u76f4\u63a5\u62a5\u9519 b?.length()//\u5f53\u8c03\u7528\u53ef\u7a7a\u5f15\u7528\u65f6\u5fc5\u987b\u5e26\u4e0a\u00b7?\u00b7\u53f7 //\u5f53b\u4e3anull\u65f6\u5019\uff0c\u5c31\u4e0d\u4f1a\u8c03\u7528\u6539\u65b9\u6cd5\uff0c\u6240\u4ee5\u4e5f\u5c31\u907f\u514d\u4e86\u7a7a\u6307\u9488\u5f02\u5e38 2.\u7c7b\u578b\u667a\u80fd\u8f6c\u6362 //java if (animal instanceof Dog){ ((Dog) animal).wangwang(); }else if (animal instanceof Cat){ ((Cat) animal).miaomiao(); }else if (animal instanceof Sheep){ ((Sheep) animal).meimei(); } Kotlin\u4f7f\u7528\u5173\u952e\u5b57 is \u4ee3\u66ffJava\u4e2d\u7684 instanceof \uff0c\u4f46\u5b83\u5177\u6709\u81ea\u5df1\u7684\u5f3a\u5927\u529f\u80fd\u3002\u7f16\u8bd1\u5668\u68c0\u67e5if\u58f0\u660e\u4e2d\u7684\u5bf9\u8c61\u5c5e\u4e8e\u54ea\u79cd\u5b9e\u4f8b\uff0c\u7136\u540e\u8f6c\u6362if\u4ee3\u7801\u5757\u4e2d\u7684\u5b9e\u4f8b\u5c5e\u6027 //kotlin if (animal is Dog) { animal.wangwang() } else if (animal is Cat) { animal.miaomiao() } else if (animal is Sheep) { animal.meimei() } //\u66f4\u7b80\u6d01\u7684 \u4f7f\u7528 when \u5173\u952e\u5b57 when (animal) { is Dog -> animal.wangwang() is Cat -> animal.miaomiao() is Sheep -> animal.meimei() } 3.\u51fd\u6570\u9ed8\u8ba4\u53c2\u6570 //java public void wuJianDao(String a, Integer b, Long c) { String result = a+\"\u5bf9\u4e0d\u8d77\uff0c\u6211\u662f\u8b66\u5bdf\"; call(b); kill(c); } public void wuJianDao(Integer b, Long c) { wuJianDao(\"\u7ed9\u4e2a\u673a\u4f1a\uff0c\u6211\u73b0\u5728\u60f3\u505a\u4e2a\u597d\u4eba\", b, c); } public void wuJianDao(Long c) { wuJianDao(110, c); } //kotlin fun wuJianDao(a: String = \"\u7ed9\u4e2a\u673a\u4f1a\uff0c\u6211\u73b0\u5728\u60f3\u505a\u4e2a\u597d\u4eba\", b: Int = 110, c: Long) { var result: String = a + \"\u5bf9\u4e0d\u8d77\uff0c\u6211\u662f\u8b66\u5bdf\" call(b) kill(c) } //\u8c03\u7528\u65b9\u6cd5\u65f6\u524d\u9762\u4e24\u4e2a\u53c2\u6570\u4e0d\u4f20\u5c31\u662f\u9ed8\u8ba4\u503c\uff0c\u4f20\u4e86\u5c31\u662f\u4f20\u5165\u7684\u503c 4.\u6269\u5c55\u5c5e\u6027/\u65b9\u6cd5 \u7b80\u5355\u6765\u8bb2\u5c31\u662f\u7ed9\u4e00\u4e9b\u5df2\u7ecf\u6709\u7684\u7c7b\u6269\u5c55\u4e00\u4e9b\u4e1c\u897f\u51fa\u6765\uff0c\u4e0d\u7528\u7ee7\u627f\u6216\u8005\u5305\u88c5\u3002 //\u7ed9\u96c6\u5408\u6269\u5c55\u4e86\u4e00\u4e2alastIndex\u7684\u5c5e\u6027 val <T> List<T>.lastIndex: Int get() = size - 1 //\u6bd4\u5982\u7ed9String\u6269\u5c55\u4e86 haha \u65b9\u6cd5 fun String.haha(a:String){ var result = this+\" --- \" +a print(result) } var b:String = \"hehe\" b.haha(a)//hehe --- haha \u770b\u770bJava\u6ca1\u6709\u6269\u5c55\u529f\u80fd\u662f\u600e\u4e48\u64cd\u4f5c\u7684 //ListUtils public static int getLastIndex(List<T> list){ return list.size -1; } //StringUtils public static void haha(String a,String b){ String result = a+\" --- \"+b; print(result) } \u8fd9\u5c31\u662f\u4e3a\u5565\u5206\u5305\u603b\u6709\u4e2a utils \uff0c\u624b\u52a8\u659c\u773c 5.\u5b57\u7b26\u4e32\u6a21\u677f \u5148\u6765\u6bb5java\u4ee3\u7801 String a = \"hello\"; String b = \"world\"; int c = 110; String result = \"\u6211\u662f\" + a + \"\u4f60\u662f\" + b + \"\u6211\u62a5\u8b66\u4e86---\" + c;//\u4f46\u662f\u4e00\u822c\u4e0d\u63a8\u8350\u8fd9\u4e48\u7528 String result = String.format(\"\u6211\u662f%s,\u4f60\u662f%s,\u6211\u62a5\u8b66\u4e86---%d\",a,b,c); \u518d\u770b\u770bKotlin\u7528\u5b57\u7b26\u4e32\u6a21\u677f\u600e\u4e48\u505a var a = \"hello\"; var b = \"world\"; var c = 110; var result = \"\u6211\u662f${a} \u4f60\u662f${b} \u6211\u62a5\u8b66\u4e86--- ${c}\";//\u5982\u679c\u662f\u5355\u4e2a\u53d8\u91cf{}\u53ef\u4ee5\u7701\u7565\uff0c\u8fd9\u91cc\u7684\u5c31\u53ef\u4ee5\u7701\u7565\uff0c\u4f46\u662f\u6211\u559c\u6b22\u52a0\u4e0a 6.\u5e38\u7528\u7684\u5185\u7f6e\u6269\u5c55\u51fd\u6570 let //let\u6269\u5c55\u51fd\u6570\u7684\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u4f5c\u7528\u57df\u51fd\u6570\uff0c\u5f53\u4f60\u9700\u8981\u53bb\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\u5728\u4e00\u4e2a\u7279\u5b9a\u7684\u4f5c\u7528\u57df\u8303\u56f4\u5185\uff0clet\u51fd\u6570\u7684\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff1blet\u51fd\u6570\u53e6\u4e00\u4e2a\u4f5c\u7528\u5c31\u662f\u53ef\u4ee5\u907f\u514d\u5199\u4e00\u4e9b\u5224\u65adnull\u7684\u64cd\u4f5c\u3002 var person:Person? = Person() // if(person != null){ person.eat() person.look() person.run() } // person?.let{ //it\u6307\u4ee3\u7684\u5c31\u662fperson\u672c\u8eab it.eat() it.look() it.run() } apply \u6211\u7684\u7406\u89e3 apply \u6269\u5c55\u51fd\u6570\u662f\u7528\u6765\u505a\u5bf9\u8c61\u521d\u59cb\u5316\u7684\uff0capply\u4f1a\u8fd4\u56de\u8c03\u7528\u7684\u5bf9\u8c61 Person person = new Person(); person.name = \"zhang san\"; person.age = \"18\"; person.sex = \"\u7537\"; var person = Person().apply{ name = \"zhang san\" age = \"18\" sex = \"\u7537\" } run run \u6269\u5c55\u4e5f\u53ef\u4ee5\u6765\u505a\u4e00\u7cfb\u5217\u521d\u59cb\u5316\u7684\u5de5\u4f5c\uff0c\u4f46\u662f\u5b83\u4e0d\u4f1a\u8fd4\u56de\u8c03\u7528\u8005\u672c\u8eab\u3002\u5f53\u7136\u5b83\u4e5f\u53ef\u4ee5\u7528\u6765\u5224\u7a7a textView?.run{ text = \"hello\" textColor = Color.Black textSize = 12 } \u5176\u4ed6\u7684\u6682\u65f6\u4e0d\u8bf4\u4e86\uff0c\u56e0\u4e3a\u6211\u4e5f\u8fd8\u662f\u4e2a\u83dc\u3002","title":"Kotlin\u5165\u95e8\u8bb2\u89e3"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%85%A5%E9%97%A8%E8%AE%B2%E8%A7%A3/#kotlin","text":"","title":"Kotlin\u5165\u95e8\u8bb2\u89e3"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%85%A5%E9%97%A8%E8%AE%B2%E8%A7%A3/#kotlin_1","text":"\u662f\u4e00\u95e8\u9759\u6001\u7c7b\u578b\u7f16\u7a0b\u8bed\u8a00\uff0c\u53d8\u91cf\u7684\u7c7b\u578b\u5728\u5b9a\u4e49\u7684\u65f6\u5019\u5c31\u5fc5\u987b\u786e\u5b9a\u3002(\u53e4\u8bed\u4e91\uff1a\u52a8\u6001\u7c7b\u578b\u4e00\u65f6\u723d\uff0c\u4ee3\u7801\u91cd\u6784\u706b\u846c\u573a) \u7531 JetBrians \u516c\u53f8\u5f00\u53d1\u8bbe\u8ba1\uff0c\u8be5\u516c\u53f8\u662f\u4e00\u5bb6\u6377\u514b\u7684\u8f6f\u4ef6\u516c\u53f8\uff0c\u662f\u8457\u540d\u7684IDE\u5f00\u53d1\u5546\uff0c\u5bf9\u5f88\u591a\u7684\u5f00\u53d1\u8bed\u8a00\u548c\u5e73\u53f0\u90fd\u63d0\u4f9b\u4e86\u76f8\u5e94\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff0c\u6bd4\u5982Java\u7684\uff0cOC\u7684\uff0cJavaScript\uff0cPHP\uff0cC/C++\u7b49\u3002\u800c\u5176\u4e2d\u6700\u8457\u540d\u7684\u662fIntelliJ IDEA \uff0cJava\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff0c\u88ab\u79f0\u4e3a\u76ee\u524d\u6700\u597d\u7528\u7684java IDE\u3002\u800c\u4e14Android Studio\u5c31\u662fGoogle\u57fa\u4e8eIntelliJ IDEA \u5f00\u53d1\u7684\u3002 Kotlin\u662f\u5f00\u6e90\u7684\uff0c\u57fa\u4e8eApache2.0\u534f\u8bae\u3002 Kotlin\u662f\u5b8c\u5168\u517c\u5bb9Java\uff0c\u6240\u4ee5\u5207\u6362\u6210\u672c\u6781\u4f4e\u3002","title":"Kotlin\u7b80\u4ecb"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%85%A5%E9%97%A8%E8%AE%B2%E8%A7%A3/#_1","text":"","title":"\u7b80\u6613\u5165\u95e8"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%85%A5%E9%97%A8%E8%AE%B2%E8%A7%A3/#_2","text":"var a:Int = 1 var a = 1//\u81ea\u52a8\u63a8\u5bfc\u51fa\u7c7b\u578b","title":"\u5b9a\u4e49\u53d8\u91cf/\u5e38\u91cf"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%85%A5%E9%97%A8%E8%AE%B2%E8%A7%A3/#_3","text":"fun haha(a:String,b:Int):String{ } \u5b9a\u4e49\u65b9\u6cd5\u4f7f\u7528 fun \u5173\u952e\u5b57\uff0c\u8fd4\u56de\u503c\u4e3a\u62ec\u53f7\u7ed3\u5c3e : \u540e\u9762\u7684\u7c7b\u578b\u53c2\u6570\uff0c\u6ca1\u6709\u8fd4\u56de\u503c\u53ef\u4ee5\u4e0d\u5199","title":"\u5b9a\u4e49\u65b9\u6cd5"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%85%A5%E9%97%A8%E8%AE%B2%E8%A7%A3/#_4","text":"\u53cd\u6b63\u5c31\u662f if-else fun maxOf(a: Int, b: Int): Int { if (a > b) { return a } else { return b } } //\u4e0a\u9762\u7684\u7b80\u5199 fun maxOf(a: Int, b: Int) = if (a > b) a else b kotlin\u7684 switch -> when ,when\u76f8\u5bf9\u4e8eswitch\u6765\u8bf4\uff0c\u667a\u80fd\u592a\u591a\u4e86\u3002 fun describe(obj: Any): String = when (obj) { 1 -> \"One\" \"Hello\" -> \"Greeting\" is Long -> \"Long\" !is String -> \"Not a string\" else -> \"Unknown\" }","title":"\u903b\u8f91\u63a7\u5236"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%85%A5%E9%97%A8%E8%AE%B2%E8%A7%A3/#_5","text":"\u53cd\u6b63\u4e5f\u662f for,while val items = listOf(\"apple\", \"banana\", \"kiwifruit\") for (item in items) { println(item) } //\u533a\u95f4 for (item in 0..100) { println(item) } val items = listOf(\"apple\", \"banana\", \"kiwifruit\") var index = 0 while (index < items.size) { println(\"item at $index is ${items[index]}\") index++ }","title":"\u904d\u5386\uff0c\u5faa\u73af"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%85%A5%E9%97%A8%E8%AE%B2%E8%A7%A3/#java","text":"\u5b9a\u4e49\u53d8\u91cf\uff0c\u8c03\u7528\u65b9\u6cd5\u53ef\u4ee5\u4e0d\u7528 \uff1b \u7ed3\u5c3e","title":"\u76f8\u5bf9\u4e8eJava\u7684\u4f18\u52bf"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%85%A5%E9%97%A8%E8%AE%B2%E8%A7%A3/#1","text":"\u5199Java\u53ef\u80fd\u9047\u5230\u6700\u591a\u7684\u5c31\u662f NullPointerException \u5f02\u5e38\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e5f\u662fKotlin\u5f15\u5165 \u7a7a\u5b89\u5168 \u7684\u539f\u56e0\u3002 \u5728Kotlin\u4e2d\uff0c\u5bf9\u8c61\u58f0\u660e\u5206\u4e3a \u53ef\u7a7a\u5f15\u7528 \u548c \u975e\u7a7a\u5f15\u7528 \u4e24\u79cd\u3002 var a:String = \"110\"//\u975e\u7a7a\u5f15\u7528 var b:String? = \"120\"//\u53ef\u7a7a\u5f15\u7528 a = null//\u5f53\u5bf9\u975e\u7a7a\u5f15\u7528\u8d4bnull\u503c\u65f6\uff0c\u7f16\u8bd1\u5668\u76f4\u63a5\u62a5\u9519 b?.length()//\u5f53\u8c03\u7528\u53ef\u7a7a\u5f15\u7528\u65f6\u5fc5\u987b\u5e26\u4e0a\u00b7?\u00b7\u53f7 //\u5f53b\u4e3anull\u65f6\u5019\uff0c\u5c31\u4e0d\u4f1a\u8c03\u7528\u6539\u65b9\u6cd5\uff0c\u6240\u4ee5\u4e5f\u5c31\u907f\u514d\u4e86\u7a7a\u6307\u9488\u5f02\u5e38","title":"1.\u7a7a\u5b89\u5168"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%85%A5%E9%97%A8%E8%AE%B2%E8%A7%A3/#2","text":"//java if (animal instanceof Dog){ ((Dog) animal).wangwang(); }else if (animal instanceof Cat){ ((Cat) animal).miaomiao(); }else if (animal instanceof Sheep){ ((Sheep) animal).meimei(); } Kotlin\u4f7f\u7528\u5173\u952e\u5b57 is \u4ee3\u66ffJava\u4e2d\u7684 instanceof \uff0c\u4f46\u5b83\u5177\u6709\u81ea\u5df1\u7684\u5f3a\u5927\u529f\u80fd\u3002\u7f16\u8bd1\u5668\u68c0\u67e5if\u58f0\u660e\u4e2d\u7684\u5bf9\u8c61\u5c5e\u4e8e\u54ea\u79cd\u5b9e\u4f8b\uff0c\u7136\u540e\u8f6c\u6362if\u4ee3\u7801\u5757\u4e2d\u7684\u5b9e\u4f8b\u5c5e\u6027 //kotlin if (animal is Dog) { animal.wangwang() } else if (animal is Cat) { animal.miaomiao() } else if (animal is Sheep) { animal.meimei() } //\u66f4\u7b80\u6d01\u7684 \u4f7f\u7528 when \u5173\u952e\u5b57 when (animal) { is Dog -> animal.wangwang() is Cat -> animal.miaomiao() is Sheep -> animal.meimei() }","title":"2.\u7c7b\u578b\u667a\u80fd\u8f6c\u6362"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%85%A5%E9%97%A8%E8%AE%B2%E8%A7%A3/#3","text":"//java public void wuJianDao(String a, Integer b, Long c) { String result = a+\"\u5bf9\u4e0d\u8d77\uff0c\u6211\u662f\u8b66\u5bdf\"; call(b); kill(c); } public void wuJianDao(Integer b, Long c) { wuJianDao(\"\u7ed9\u4e2a\u673a\u4f1a\uff0c\u6211\u73b0\u5728\u60f3\u505a\u4e2a\u597d\u4eba\", b, c); } public void wuJianDao(Long c) { wuJianDao(110, c); } //kotlin fun wuJianDao(a: String = \"\u7ed9\u4e2a\u673a\u4f1a\uff0c\u6211\u73b0\u5728\u60f3\u505a\u4e2a\u597d\u4eba\", b: Int = 110, c: Long) { var result: String = a + \"\u5bf9\u4e0d\u8d77\uff0c\u6211\u662f\u8b66\u5bdf\" call(b) kill(c) } //\u8c03\u7528\u65b9\u6cd5\u65f6\u524d\u9762\u4e24\u4e2a\u53c2\u6570\u4e0d\u4f20\u5c31\u662f\u9ed8\u8ba4\u503c\uff0c\u4f20\u4e86\u5c31\u662f\u4f20\u5165\u7684\u503c","title":"3.\u51fd\u6570\u9ed8\u8ba4\u53c2\u6570"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%85%A5%E9%97%A8%E8%AE%B2%E8%A7%A3/#4","text":"\u7b80\u5355\u6765\u8bb2\u5c31\u662f\u7ed9\u4e00\u4e9b\u5df2\u7ecf\u6709\u7684\u7c7b\u6269\u5c55\u4e00\u4e9b\u4e1c\u897f\u51fa\u6765\uff0c\u4e0d\u7528\u7ee7\u627f\u6216\u8005\u5305\u88c5\u3002 //\u7ed9\u96c6\u5408\u6269\u5c55\u4e86\u4e00\u4e2alastIndex\u7684\u5c5e\u6027 val <T> List<T>.lastIndex: Int get() = size - 1 //\u6bd4\u5982\u7ed9String\u6269\u5c55\u4e86 haha \u65b9\u6cd5 fun String.haha(a:String){ var result = this+\" --- \" +a print(result) } var b:String = \"hehe\" b.haha(a)//hehe --- haha \u770b\u770bJava\u6ca1\u6709\u6269\u5c55\u529f\u80fd\u662f\u600e\u4e48\u64cd\u4f5c\u7684 //ListUtils public static int getLastIndex(List<T> list){ return list.size -1; } //StringUtils public static void haha(String a,String b){ String result = a+\" --- \"+b; print(result) } \u8fd9\u5c31\u662f\u4e3a\u5565\u5206\u5305\u603b\u6709\u4e2a utils \uff0c\u624b\u52a8\u659c\u773c","title":"4.\u6269\u5c55\u5c5e\u6027/\u65b9\u6cd5"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%85%A5%E9%97%A8%E8%AE%B2%E8%A7%A3/#5","text":"\u5148\u6765\u6bb5java\u4ee3\u7801 String a = \"hello\"; String b = \"world\"; int c = 110; String result = \"\u6211\u662f\" + a + \"\u4f60\u662f\" + b + \"\u6211\u62a5\u8b66\u4e86---\" + c;//\u4f46\u662f\u4e00\u822c\u4e0d\u63a8\u8350\u8fd9\u4e48\u7528 String result = String.format(\"\u6211\u662f%s,\u4f60\u662f%s,\u6211\u62a5\u8b66\u4e86---%d\",a,b,c); \u518d\u770b\u770bKotlin\u7528\u5b57\u7b26\u4e32\u6a21\u677f\u600e\u4e48\u505a var a = \"hello\"; var b = \"world\"; var c = 110; var result = \"\u6211\u662f${a} \u4f60\u662f${b} \u6211\u62a5\u8b66\u4e86--- ${c}\";//\u5982\u679c\u662f\u5355\u4e2a\u53d8\u91cf{}\u53ef\u4ee5\u7701\u7565\uff0c\u8fd9\u91cc\u7684\u5c31\u53ef\u4ee5\u7701\u7565\uff0c\u4f46\u662f\u6211\u559c\u6b22\u52a0\u4e0a","title":"5.\u5b57\u7b26\u4e32\u6a21\u677f"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%85%A5%E9%97%A8%E8%AE%B2%E8%A7%A3/#6","text":"","title":"6.\u5e38\u7528\u7684\u5185\u7f6e\u6269\u5c55\u51fd\u6570"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%85%A5%E9%97%A8%E8%AE%B2%E8%A7%A3/#let","text":"//let\u6269\u5c55\u51fd\u6570\u7684\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u4f5c\u7528\u57df\u51fd\u6570\uff0c\u5f53\u4f60\u9700\u8981\u53bb\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\u5728\u4e00\u4e2a\u7279\u5b9a\u7684\u4f5c\u7528\u57df\u8303\u56f4\u5185\uff0clet\u51fd\u6570\u7684\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff1blet\u51fd\u6570\u53e6\u4e00\u4e2a\u4f5c\u7528\u5c31\u662f\u53ef\u4ee5\u907f\u514d\u5199\u4e00\u4e9b\u5224\u65adnull\u7684\u64cd\u4f5c\u3002 var person:Person? = Person() // if(person != null){ person.eat() person.look() person.run() } // person?.let{ //it\u6307\u4ee3\u7684\u5c31\u662fperson\u672c\u8eab it.eat() it.look() it.run() }","title":"let"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%85%A5%E9%97%A8%E8%AE%B2%E8%A7%A3/#apply","text":"\u6211\u7684\u7406\u89e3 apply \u6269\u5c55\u51fd\u6570\u662f\u7528\u6765\u505a\u5bf9\u8c61\u521d\u59cb\u5316\u7684\uff0capply\u4f1a\u8fd4\u56de\u8c03\u7528\u7684\u5bf9\u8c61 Person person = new Person(); person.name = \"zhang san\"; person.age = \"18\"; person.sex = \"\u7537\"; var person = Person().apply{ name = \"zhang san\" age = \"18\" sex = \"\u7537\" }","title":"apply"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%85%A5%E9%97%A8%E8%AE%B2%E8%A7%A3/#run","text":"run \u6269\u5c55\u4e5f\u53ef\u4ee5\u6765\u505a\u4e00\u7cfb\u5217\u521d\u59cb\u5316\u7684\u5de5\u4f5c\uff0c\u4f46\u662f\u5b83\u4e0d\u4f1a\u8fd4\u56de\u8c03\u7528\u8005\u672c\u8eab\u3002\u5f53\u7136\u5b83\u4e5f\u53ef\u4ee5\u7528\u6765\u5224\u7a7a textView?.run{ text = \"hello\" textColor = Color.Black textSize = 12 } \u5176\u4ed6\u7684\u6682\u65f6\u4e0d\u8bf4\u4e86\uff0c\u56e0\u4e3a\u6211\u4e5f\u8fd8\u662f\u4e2a\u83dc\u3002","title":"run"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/","text":"Kotlin\u5185\u5efa\u51fd\u6570 let \u5b9a\u4e49 /** * Calls the specified function [block] with `this` value as its argument and returns its result. */ public inline fun <T, R> T.let(block: (T) -> R): R = block(this) \u88ab\u8c03\u7528\u5bf9\u8c61\u901a\u8fc7\u53c2\u6570\u4f20\u5165 \u8fd4\u56de\u7c7b\u578b\u662flambda\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u5185\u5bb9 \u5178\u578b\u7528\u6cd5 \u4ece\u4e00\u79cd\u7c7b\u578b\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u7c7b\u578b \u5904\u7406\u53ef\u7a7a\u6027 //\u4ece\u4e00\u79cd\u7c7b\u578b\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u7c7b\u578b val result = StringBuilder().let { it.append(\"hello\") it.append(\"world\") 42 } println(result)//42 //\u5904\u7406\u53ef\u7a7a\u6027 str?.let { print(it) } apply \u5b9a\u4e49 /** * Calls the specified function [block] with `this` value as its receiver and returns `this` value. */ public inline fun <T> T.apply(block: T.() -> Unit): T { block(); return this } \u8fd4\u56de\u88ab\u8c03\u7528\u7684\u5bf9\u8c61 \u5178\u578b\u7528\u6cd5 \u521d\u59cb\u5316\u6216\u914d\u7f6e\u5bf9\u8c61 // \u65e7\u7684\u5efa\u7acb\u5bf9\u8c61\u7684\u65b9\u5f0f val andre = Person() andre.name = \"andre\" andre.company = \"Viacom\" andre.hobby = \"losing in ping pong\" // \u4f7f\u7528apply\u540e val andre = Person().apply { name = \"Andre\" company = \"Viacom\" hobby = \"losing in ping pong\" } also \u5b9a\u4e49 /** * Calls the specified function [block] with `this` value as its argument and returns `this` value. */ @SinceKotlin(\"1.1\") public inline fun <T> T.also(block: (T) -> Unit): T { block(this); return this } \u88ab\u8c03\u7528\u5bf9\u8c61\u901a\u8fc7\u53c2\u6570\u4f20\u5165 \u8fd4\u56de\u88ab\u8c03\u7528\u5bf9\u8c61 \u5178\u578b\u7528\u6cd5 // \u7528\u4e2d\u95f4\u53d8\u91cf\u8f6c\u6362\u6765\u81eaapi\u7684\u6570\u636e val rawData = api.getData() Log.debug(rawData) rawData.map { /** other stuff */ } // \u4f7f\u7528 'also' \u4fdd\u6301\u65b9\u6cd5\u94fe\u7684\u8c03\u7528 api.getData() .also { Log.debug(it) } .map { /** other stuff */ } with \u5b9a\u4e49 /** * Calls the specified function [block] with the given [receiver] as its receiver and returns its result. */ public inline fun <T, R> with(receiver: T, block: T.() -> R): R = receiver.block() \u4e0d\u662f\u6269\u5c55\u529f\u80fd \u76f8\u5173\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 \u8fd4\u56delambda\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u503c \u5178\u578b\u7528\u6cd5 \u5bf9\u5bf9\u8c61\u8fdb\u884c\u903b\u8f91\u5206\u7ec4\u8c03\u7528 //\u65e7\u7684\u8c03\u7528\u65b9\u5f0f messageBoard.init(\u201chttps://url.com\u201d) messageBoard.login(token) messageBoard.post(\u201cKotlin\u2019s a way of life bro\") // \u4f7f\u7528 'with' \u907f\u514d\u91cd\u590d\u5f15\u7528\u6807\u8bc6\u7b26 with(messageBoard) { init(\u201chttps://url.com\u201d) login(token) post(\u201cKotlin\u2019s a way of life bro\") } run \u5b9a\u4e49 /** * Calls the specified function [block] with `this` value as its receiver and returns its result. */ public inline fun <T, R> T.run(block: T.() -> R): R = block() \u8fd4\u56de\u7c7b\u578b\u662flambda\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u5185\u5bb9 \u5178\u578b\u7528\u6cd5 aegonTargaryen = jonSnow.run { makeKingOfTheNorth() swearsFealtyTo(daenerysTargaryen) realIdentityRevealed(\u201cAegon Targaryen\u201d) }","title":"Kotlin\u5185\u5efa\u51fd\u6570"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/#kotlin","text":"","title":"Kotlin\u5185\u5efa\u51fd\u6570"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/#let","text":"","title":"let"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/#_1","text":"/** * Calls the specified function [block] with `this` value as its argument and returns its result. */ public inline fun <T, R> T.let(block: (T) -> R): R = block(this) \u88ab\u8c03\u7528\u5bf9\u8c61\u901a\u8fc7\u53c2\u6570\u4f20\u5165 \u8fd4\u56de\u7c7b\u578b\u662flambda\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u5185\u5bb9","title":"\u5b9a\u4e49"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/#_2","text":"\u4ece\u4e00\u79cd\u7c7b\u578b\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u7c7b\u578b \u5904\u7406\u53ef\u7a7a\u6027 //\u4ece\u4e00\u79cd\u7c7b\u578b\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u7c7b\u578b val result = StringBuilder().let { it.append(\"hello\") it.append(\"world\") 42 } println(result)//42 //\u5904\u7406\u53ef\u7a7a\u6027 str?.let { print(it) }","title":"\u5178\u578b\u7528\u6cd5"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/#apply","text":"","title":"apply"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/#_3","text":"/** * Calls the specified function [block] with `this` value as its receiver and returns `this` value. */ public inline fun <T> T.apply(block: T.() -> Unit): T { block(); return this } \u8fd4\u56de\u88ab\u8c03\u7528\u7684\u5bf9\u8c61","title":"\u5b9a\u4e49"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/#_4","text":"\u521d\u59cb\u5316\u6216\u914d\u7f6e\u5bf9\u8c61 // \u65e7\u7684\u5efa\u7acb\u5bf9\u8c61\u7684\u65b9\u5f0f val andre = Person() andre.name = \"andre\" andre.company = \"Viacom\" andre.hobby = \"losing in ping pong\" // \u4f7f\u7528apply\u540e val andre = Person().apply { name = \"Andre\" company = \"Viacom\" hobby = \"losing in ping pong\" }","title":"\u5178\u578b\u7528\u6cd5"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/#also","text":"","title":"also"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/#_5","text":"/** * Calls the specified function [block] with `this` value as its argument and returns `this` value. */ @SinceKotlin(\"1.1\") public inline fun <T> T.also(block: (T) -> Unit): T { block(this); return this } \u88ab\u8c03\u7528\u5bf9\u8c61\u901a\u8fc7\u53c2\u6570\u4f20\u5165 \u8fd4\u56de\u88ab\u8c03\u7528\u5bf9\u8c61","title":"\u5b9a\u4e49"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/#_6","text":"// \u7528\u4e2d\u95f4\u53d8\u91cf\u8f6c\u6362\u6765\u81eaapi\u7684\u6570\u636e val rawData = api.getData() Log.debug(rawData) rawData.map { /** other stuff */ } // \u4f7f\u7528 'also' \u4fdd\u6301\u65b9\u6cd5\u94fe\u7684\u8c03\u7528 api.getData() .also { Log.debug(it) } .map { /** other stuff */ }","title":"\u5178\u578b\u7528\u6cd5"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/#with","text":"","title":"with"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/#_7","text":"/** * Calls the specified function [block] with the given [receiver] as its receiver and returns its result. */ public inline fun <T, R> with(receiver: T, block: T.() -> R): R = receiver.block() \u4e0d\u662f\u6269\u5c55\u529f\u80fd \u76f8\u5173\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 \u8fd4\u56delambda\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u503c","title":"\u5b9a\u4e49"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/#_8","text":"\u5bf9\u5bf9\u8c61\u8fdb\u884c\u903b\u8f91\u5206\u7ec4\u8c03\u7528 //\u65e7\u7684\u8c03\u7528\u65b9\u5f0f messageBoard.init(\u201chttps://url.com\u201d) messageBoard.login(token) messageBoard.post(\u201cKotlin\u2019s a way of life bro\") // \u4f7f\u7528 'with' \u907f\u514d\u91cd\u590d\u5f15\u7528\u6807\u8bc6\u7b26 with(messageBoard) { init(\u201chttps://url.com\u201d) login(token) post(\u201cKotlin\u2019s a way of life bro\") }","title":"\u5178\u578b\u7528\u6cd5"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/#run","text":"","title":"run"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/#_9","text":"/** * Calls the specified function [block] with `this` value as its receiver and returns its result. */ public inline fun <T, R> T.run(block: T.() -> R): R = block() \u8fd4\u56de\u7c7b\u578b\u662flambda\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u5185\u5bb9","title":"\u5b9a\u4e49"},{"location":"android/%E9%9A%8F%E7%AC%94/Kotlin%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/#_10","text":"aegonTargaryen = jonSnow.run { makeKingOfTheNorth() swearsFealtyTo(daenerysTargaryen) realIdentityRevealed(\u201cAegon Targaryen\u201d) }","title":"\u5178\u578b\u7528\u6cd5"},{"location":"android/%E9%9A%8F%E7%AC%94/ManifestPlaceholders%E7%9A%84%E5%A6%99%E7%94%A8/","text":"ManifestPlaceholders\u7684\u5999\u7528 \u5f00\u53d1\u4e2d\u5f88\u591a\u65f6\u5019\u6211\u4eec\u4f1a\u9047\u5230\u8fd9\u79cd\u573a\u666f\uff0c\u6bd4\u5982\u8bf4\uff1a\u5728\u7528\u5230\u4e00\u4e2a\u7b2c\u4e09\u65b9sdk\uff0c\u4f46\u662f\u8fd9\u4e2asdk\u5e76\u6ca1\u6709\u533a\u5206\u5f00\u53d1\u73af\u5883\u548c\u7ebf\u4e0a\u73af\u5883\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u80fd\u4f1a\u7533\u8bf7\u4e24\u4e2a\u4e0d\u540c\u7684key\u6807\u8bc6\uff0c\u800c\u4e14\u5f88\u591akey\u6807\u8bc6\u90fd\u53ea\u80fd\u5728androidmanifest\u91cc\u9762\u914d\u7f6e\u3002\u6240\u4ee5\u6bcf\u6b21\u4e0a\u7ebf\u751f\u6210apk\u5c31\u5fc5\u987b\u624b\u52a8\u53bb\u66f4\u6539key\u6807\u8bc6\uff0c\u5982\u679c\u6e20\u9053\u7248\u672c\u5c11\u4e5f\u8fd8\u597d\uff0c\u6253\u5305\u901f\u5ea6\u5feb\u4e5f\u8fd8\u884c\uff0c\u9700\u8981\u533a\u5206\u73af\u5883\u7684\u7684key\u6807\u8bc6\u76f8\u5bf9\u8f83\u5c11\u4e5f\u8fd8\u4e0d\u9519 \uff0c\u4f46\u662f\u5982\u679c\u4f60\u4e00\u9879\u90fd\u6cbe\u4e0d\u5230\u8fb9\uff0c\u5230\u65f6\u5fd8\u8bb0\u54ea\u4e2akey\u5fd8\u8bb0\u66ff\u6362\u4e86\uff0c\u4e00\u5b9a\u4f1a\u6709\u79cd\u201c\u8eab\u4f53\u88ab\u638f\u7a7a\u7684\u8d76\u811a\u201d\uff0c\u522b\u95ee\u6211\u4e3a\u4ec0\u4e48\u77e5\u9053\uff0c\u611f\u89c9\u8eab\u4f53\u88ab\u638f\u7a7a\uff01\uff01\uff01 \u5148\u5728androidmanifest\u6587\u4ef6\u914d\u7f6e\u4e00\u4e2a\u8282\u70b9\uff0c\u8fd9\u91cc\u4ee5\u6781\u5149\u4e3a\u4f8b <meta-data android:name=\"JPUSH_APPKEY\" android:value=\"${jpush_appkey}\"/> \u518d\u770b\u770bbuild.gradle\u91cc\u9762\u600e\u4e48\u5199 \u5728bulidtypes\u8282\u70b9\u4e0b\u6709release\u8282\u70b9\u548cdebug\u8282\u70b9\uff0c\u6b63\u5f0f\u7b7e\u540d\u65f6\u5c31\u4f1a\u8d70release\u8282\u70b9\u7684\u4e0b\u7f16\u8bd1\u811a\u672c\uff0c\u8c03\u8bd5\u7b7e\u540d\u65f6\u5c31\u4f1a\u8d70debug\u8282\u70b9\u3002 \u672c\u6587\u4e3b\u8981\u70b9\u5c31\u662f\u7ea2\u6846\u6807\u8bb0\u7684manifestPlaceholders\u7684\u7528\u6cd5\uff0cjpush_appkey\u5bf9\u5e94\u7684\u5c31\u662f\u4e4b\u524d\u5728androidmanifest\u6587\u4ef6\u914d\u7f6e\u7684${jpush_appkey}\u7684\u8fd9\u4e2a\u503c\u3002 \u70b9\u8fdb\u6e90\u7801\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0manifestPlaceholders\u63a5\u6536\u662f\u4e00\u4e2aMap\u7684\u53c2\u6570\uff0c\u6240\u4ee5\u8fd9\u6837\u5176\u5b9e\u8fd8\u6709\u5f88\u591a\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\u5730\u65b9\u3002 \u6bd4\u5982\u8bf4\u5728\u591a\u6e20\u9053\u6253\u5305\u6211\u4eec\u4e5f\u7528\u5230\u4e86manifestPlaceholders\uff0candroidstudio\u591a\u6e20\u9053\u6253\u5305\u65b9\u5f0f\u7f51\u4e0a\u6559\u7a0b\u5df2\u7ecf\u5f88\u591a\u4e86\uff0c \u8fd9\u91cc\u5c31\u4e0d\u591a\u8bf4\u4e86\uff0c\u5177\u4f53\u5185\u5bb9\u53ef\u4ee5google\u6216\u8005bing\uff0c\u767e\u5ea6\u5c31\u4e0d\u63a8\u8350\uff0c\u4ee5\u514d\u88ab\u5751\uff0c\u563f\u563f\u563f\u3002 \u6211\u4eec\u5728\u7a0b\u5e8f\u5165\u53e3\u51fa\u6253\u4e0alog\uff0c\u7528\u6765\u8f93\u51fakey\u7684\u503c String jpush_appkey; try { ApplicationInfo appInfo = getPackageManager() .getApplicationInfo(getPackageName(), PackageManager.GET_META_DATA); jpush_appkey = appInfo.metaData.getString(\"JPUSH_APPKEY\"); Logger.d(\"jpush_appkey=\" + jpush_appkey); } catch (PackageManager.NameNotFoundException e) { e.printStackTrace(); } \u6b63\u5f0f\u73af\u5883\u7684key\u503c \u6d4b\u8bd5\u73af\u5883\u7684key\u503c \u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u548c\u4e4b\u524d\u6211\u4eec\u5728build.gradle\u53ea\u914d\u7f6e\u7684\u4e00\u6837\u7684\u3002 \u603b\u7ed3 manifestPlaceholders \u53ef\u4ee5\u66ff\u6362androidmanifest\u6587\u4ef6\u4e2d\u7684\u6807\u7b7e\uff0c\u53ef\u4f5c\u4e3a\u5feb\u901f\u6e20\u9053\u6253\u5305\u66ff\u6362\u6e20\u9053\u540d\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6807\u7b7e\u7528\u6765\u66ff\u6362\u9700\u8981\u7684\u6587\u672c\uff0c\u591a\u4f5c\u4e3a\u4e0d\u540c\u73af\u5883\u4e0d\u540ckey\u7684\u4fee\u6539\u3002","title":"ManifestPlaceholders\u7684\u5999\u7528"},{"location":"android/%E9%9A%8F%E7%AC%94/ManifestPlaceholders%E7%9A%84%E5%A6%99%E7%94%A8/#manifestplaceholders","text":"\u5f00\u53d1\u4e2d\u5f88\u591a\u65f6\u5019\u6211\u4eec\u4f1a\u9047\u5230\u8fd9\u79cd\u573a\u666f\uff0c\u6bd4\u5982\u8bf4\uff1a\u5728\u7528\u5230\u4e00\u4e2a\u7b2c\u4e09\u65b9sdk\uff0c\u4f46\u662f\u8fd9\u4e2asdk\u5e76\u6ca1\u6709\u533a\u5206\u5f00\u53d1\u73af\u5883\u548c\u7ebf\u4e0a\u73af\u5883\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u80fd\u4f1a\u7533\u8bf7\u4e24\u4e2a\u4e0d\u540c\u7684key\u6807\u8bc6\uff0c\u800c\u4e14\u5f88\u591akey\u6807\u8bc6\u90fd\u53ea\u80fd\u5728androidmanifest\u91cc\u9762\u914d\u7f6e\u3002\u6240\u4ee5\u6bcf\u6b21\u4e0a\u7ebf\u751f\u6210apk\u5c31\u5fc5\u987b\u624b\u52a8\u53bb\u66f4\u6539key\u6807\u8bc6\uff0c\u5982\u679c\u6e20\u9053\u7248\u672c\u5c11\u4e5f\u8fd8\u597d\uff0c\u6253\u5305\u901f\u5ea6\u5feb\u4e5f\u8fd8\u884c\uff0c\u9700\u8981\u533a\u5206\u73af\u5883\u7684\u7684key\u6807\u8bc6\u76f8\u5bf9\u8f83\u5c11\u4e5f\u8fd8\u4e0d\u9519 \uff0c\u4f46\u662f\u5982\u679c\u4f60\u4e00\u9879\u90fd\u6cbe\u4e0d\u5230\u8fb9\uff0c\u5230\u65f6\u5fd8\u8bb0\u54ea\u4e2akey\u5fd8\u8bb0\u66ff\u6362\u4e86\uff0c\u4e00\u5b9a\u4f1a\u6709\u79cd\u201c\u8eab\u4f53\u88ab\u638f\u7a7a\u7684\u8d76\u811a\u201d\uff0c\u522b\u95ee\u6211\u4e3a\u4ec0\u4e48\u77e5\u9053\uff0c\u611f\u89c9\u8eab\u4f53\u88ab\u638f\u7a7a\uff01\uff01\uff01 \u5148\u5728androidmanifest\u6587\u4ef6\u914d\u7f6e\u4e00\u4e2a\u8282\u70b9\uff0c\u8fd9\u91cc\u4ee5\u6781\u5149\u4e3a\u4f8b <meta-data android:name=\"JPUSH_APPKEY\" android:value=\"${jpush_appkey}\"/> \u518d\u770b\u770bbuild.gradle\u91cc\u9762\u600e\u4e48\u5199 \u5728bulidtypes\u8282\u70b9\u4e0b\u6709release\u8282\u70b9\u548cdebug\u8282\u70b9\uff0c\u6b63\u5f0f\u7b7e\u540d\u65f6\u5c31\u4f1a\u8d70release\u8282\u70b9\u7684\u4e0b\u7f16\u8bd1\u811a\u672c\uff0c\u8c03\u8bd5\u7b7e\u540d\u65f6\u5c31\u4f1a\u8d70debug\u8282\u70b9\u3002 \u672c\u6587\u4e3b\u8981\u70b9\u5c31\u662f\u7ea2\u6846\u6807\u8bb0\u7684manifestPlaceholders\u7684\u7528\u6cd5\uff0cjpush_appkey\u5bf9\u5e94\u7684\u5c31\u662f\u4e4b\u524d\u5728androidmanifest\u6587\u4ef6\u914d\u7f6e\u7684${jpush_appkey}\u7684\u8fd9\u4e2a\u503c\u3002 \u70b9\u8fdb\u6e90\u7801\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0manifestPlaceholders\u63a5\u6536\u662f\u4e00\u4e2aMap\u7684\u53c2\u6570\uff0c\u6240\u4ee5\u8fd9\u6837\u5176\u5b9e\u8fd8\u6709\u5f88\u591a\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\u5730\u65b9\u3002 \u6bd4\u5982\u8bf4\u5728\u591a\u6e20\u9053\u6253\u5305\u6211\u4eec\u4e5f\u7528\u5230\u4e86manifestPlaceholders\uff0candroidstudio\u591a\u6e20\u9053\u6253\u5305\u65b9\u5f0f\u7f51\u4e0a\u6559\u7a0b\u5df2\u7ecf\u5f88\u591a\u4e86\uff0c \u8fd9\u91cc\u5c31\u4e0d\u591a\u8bf4\u4e86\uff0c\u5177\u4f53\u5185\u5bb9\u53ef\u4ee5google\u6216\u8005bing\uff0c\u767e\u5ea6\u5c31\u4e0d\u63a8\u8350\uff0c\u4ee5\u514d\u88ab\u5751\uff0c\u563f\u563f\u563f\u3002 \u6211\u4eec\u5728\u7a0b\u5e8f\u5165\u53e3\u51fa\u6253\u4e0alog\uff0c\u7528\u6765\u8f93\u51fakey\u7684\u503c String jpush_appkey; try { ApplicationInfo appInfo = getPackageManager() .getApplicationInfo(getPackageName(), PackageManager.GET_META_DATA); jpush_appkey = appInfo.metaData.getString(\"JPUSH_APPKEY\"); Logger.d(\"jpush_appkey=\" + jpush_appkey); } catch (PackageManager.NameNotFoundException e) { e.printStackTrace(); } \u6b63\u5f0f\u73af\u5883\u7684key\u503c \u6d4b\u8bd5\u73af\u5883\u7684key\u503c \u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u548c\u4e4b\u524d\u6211\u4eec\u5728build.gradle\u53ea\u914d\u7f6e\u7684\u4e00\u6837\u7684\u3002","title":"ManifestPlaceholders\u7684\u5999\u7528"},{"location":"android/%E9%9A%8F%E7%AC%94/ManifestPlaceholders%E7%9A%84%E5%A6%99%E7%94%A8/#_1","text":"manifestPlaceholders \u53ef\u4ee5\u66ff\u6362androidmanifest\u6587\u4ef6\u4e2d\u7684\u6807\u7b7e\uff0c\u53ef\u4f5c\u4e3a\u5feb\u901f\u6e20\u9053\u6253\u5305\u66ff\u6362\u6e20\u9053\u540d\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6807\u7b7e\u7528\u6765\u66ff\u6362\u9700\u8981\u7684\u6587\u672c\uff0c\u591a\u4f5c\u4e3a\u4e0d\u540c\u73af\u5883\u4e0d\u540ckey\u7684\u4fee\u6539\u3002","title":"\u603b\u7ed3"},{"location":"android/%E9%9A%8F%E7%AC%94/MaxLineLayoutManager/","text":"MaxLineLayoutManager \u6709\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u9047\u5230\u8fd9\u79cd\u9700\u6c42\uff1a\u4e00\u4e2a\u7ebf\u6027\u7684\u5217\u8868\u5e03\u5c40\uff0c\u5f53item\u91cf\u5f88\u5c11\u7684\u65f6\u5019\uff0c\u5c31\u662f wrap_content \u76f4\u63a5\u5c55\u793a\u5b8c\u6240\u6709item\uff0c\u4f46\u662f\u5f53item\u6570\u91cf\u8d85\u8fc7\u67d0\u4e2a\u6570\u65f6\u5c31\u8981 \u56fa\u5b9a\u9ad8\u5ea6 \uff0c\u8ba9\u5176\u53d8\u6210\u53ef\u6ed1\u52a8\u5c55\u793a\u66f4\u591a\u7684item\u3002\u6240\u4ee5\u6211\u4eec\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u5c31\u662f\u7528 RecyclerView \uff0c\u5e94\u8be5\u6ca1\u4eba\u4f1a\u7528 ListView \u6216\u81ea\u5df1\u5199\u4e2a \u81ea\u5b9a\u4e49ViewGroup \u5427\u3002 \u4f46\u662f\u5f53\u6211\u4eec\u4f7f\u7528 RecyclerView + maxHeight \u7684\u65f6\u5019\uff0c\u4f1a\u53d1\u73b0\u5176\u5b9e maxHeight \u662f\u4e0d\u8d77\u4f5c\u7528\u7684\u3002 <androidx.recyclerview.widget.RecyclerView android:id=\"@+id/recyclerView\" android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:maxHeight=\"100dp\" /> \u90a3\u4e48\u4e3a\u4ec0\u4e48\u4f1a\u9020\u6210\u8fd9\u79cd\u539f\u56e0\u5462\uff1f\u5176\u5b9e\u5728\u6211\u4e4b\u524d\u5199\u7684\u4e00\u7bc7\u535a\u5ba2\u4e5f\u63d0\u5230\u8fc7\uff1a RecyclerView \u5c06 onMeasure \u7684\u8f6c\u4ea4\u7ed9\u4e86 LayoutManager \uff0c\u5e76\u4e14 LayoutManager \u91cc\u9762\u6709\u4e2a isAutoMeasureEnabled\uff08\uff09 \u65b9\u6cd5\u7528\u6765\u914d\u7f6e LayoutManager \u662f\u5426\u5f00\u542f \u81ea\u6d4b\u91cf \u3002\u6211\u4eec\u5e38\u7528\u7684 LinearLayoutManager \u6216 GridLayoutManager \u90fd\u662f\u9ed8\u8ba4\u8fd4\u56de true \u7684\u3002 \u535a\u5ba2\u5730\u5740 \u5b9e\u73b0\u601d\u8def \u6240\u4ee5\u5b9e\u73b0\u601d\u8def\u5c31\u5f88\u7b80\u5355\u4e86\uff1a\u8bbe\u5b9a\u4e00\u4e2a maxLine \u53c2\u6570\uff0c\u5f53 RecyclerView \u7684 itemCount \u5c0f\u4e8e\u8fd9\u4e2a\u503c isAutoMeasureEnabled() \u90fd\u662f\u8fd4\u56de true \uff0c\u8ba9 LayoutManager \u53bb \u81ea\u6d4b\u91cf \u3002\u5f53 itemCount \u5927\u4e8e maxLine \u65f6\u5c31\u91cd\u5199 onMeasure \u65b9\u6cd5\uff0c\u5728\u91cc\u9762\u53bb\u8bbe\u7f6e RecyclerView \u7684 \u9650\u5b9a\u5bbd\u9ad8 \u3002 \u4ee3\u7801\u5b9e\u73b0 class MaxLineLinearLayoutManager : LinearLayoutManager { private var mMaxLine = 0 constructor( context: Context?, maxLine: Int ) : super(context) { Helper.checkMaxCount(maxLine) this.mMaxLine = maxLine } constructor( context: Context?, orientation: Int, reverseLayout: Boolean, maxLine: Int ) : super(context, orientation, reverseLayout) { Helper.checkMaxCount(maxLine) this.mMaxLine = maxLine } override fun onMeasure( recycler: RecyclerView.Recycler, state: RecyclerView.State, widthSpec: Int, heightSpec: Int ) { if (itemCount <= mMaxLine || itemCount == 0) { super.onMeasure(recycler, state, widthSpec, heightSpec) return } val child = recycler.getViewForPosition(0) // addView(child) measureChildWithMargins(child, 0, 0) val itemWidth = getDecoratedMeasuredWidth(child) val itemHeight = getDecoratedMeasuredHeight(child) removeAndRecycleView(child, recycler) val widthMode = View.MeasureSpec.getMode(widthSpec) val heightMode = View.MeasureSpec.getMode(heightSpec) var width = 0 var height = 0 if (orientation == HORIZONTAL) { height = if (heightMode == View.MeasureSpec.EXACTLY) { View.MeasureSpec.getSize(heightSpec) } else { itemHeight } width = itemWidth * mMaxLine } else { width = if (widthMode == View.MeasureSpec.EXACTLY) { View.MeasureSpec.getSize(widthSpec) } else { itemWidth } height = itemHeight * mMaxLine } setMeasuredDimension(width, height) } override fun isAutoMeasureEnabled(): Boolean { if (itemCount <= mMaxLine) { return super.isAutoMeasureEnabled() } return false } } \u4ee3\u7801\u5f88\u7b80\u5355\uff0c\u5e94\u8be5\u4e0d\u52a0\u6ce8\u91ca\u4e5f\u80fd\u770b\u61c2\u3002\u5982\u679c\u770b\u4e0d\u61c2\u7684\u53ef\u4ee5\u53bb\u770b\u770b\u6211\u4e4b\u524d\u7684\u90a3\u7bc7\u5206\u6790 \u81ea\u5b9a\u4e49LayoutManager \u7684\u6587\u7ae0\u3002 \u535a\u5ba2\u5730\u5740 recyclerView.layoutManager = MaxLineLinearLayoutManager(this, maxLine = 3) \u6e90\u7801\u5730\u5740 https://github.com/simplepeng/MaxLineLayoutManager","title":"MaxLineLayoutManager"},{"location":"android/%E9%9A%8F%E7%AC%94/MaxLineLayoutManager/#maxlinelayoutmanager","text":"\u6709\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u9047\u5230\u8fd9\u79cd\u9700\u6c42\uff1a\u4e00\u4e2a\u7ebf\u6027\u7684\u5217\u8868\u5e03\u5c40\uff0c\u5f53item\u91cf\u5f88\u5c11\u7684\u65f6\u5019\uff0c\u5c31\u662f wrap_content \u76f4\u63a5\u5c55\u793a\u5b8c\u6240\u6709item\uff0c\u4f46\u662f\u5f53item\u6570\u91cf\u8d85\u8fc7\u67d0\u4e2a\u6570\u65f6\u5c31\u8981 \u56fa\u5b9a\u9ad8\u5ea6 \uff0c\u8ba9\u5176\u53d8\u6210\u53ef\u6ed1\u52a8\u5c55\u793a\u66f4\u591a\u7684item\u3002\u6240\u4ee5\u6211\u4eec\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u5c31\u662f\u7528 RecyclerView \uff0c\u5e94\u8be5\u6ca1\u4eba\u4f1a\u7528 ListView \u6216\u81ea\u5df1\u5199\u4e2a \u81ea\u5b9a\u4e49ViewGroup \u5427\u3002 \u4f46\u662f\u5f53\u6211\u4eec\u4f7f\u7528 RecyclerView + maxHeight \u7684\u65f6\u5019\uff0c\u4f1a\u53d1\u73b0\u5176\u5b9e maxHeight \u662f\u4e0d\u8d77\u4f5c\u7528\u7684\u3002 <androidx.recyclerview.widget.RecyclerView android:id=\"@+id/recyclerView\" android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:maxHeight=\"100dp\" /> \u90a3\u4e48\u4e3a\u4ec0\u4e48\u4f1a\u9020\u6210\u8fd9\u79cd\u539f\u56e0\u5462\uff1f\u5176\u5b9e\u5728\u6211\u4e4b\u524d\u5199\u7684\u4e00\u7bc7\u535a\u5ba2\u4e5f\u63d0\u5230\u8fc7\uff1a RecyclerView \u5c06 onMeasure \u7684\u8f6c\u4ea4\u7ed9\u4e86 LayoutManager \uff0c\u5e76\u4e14 LayoutManager \u91cc\u9762\u6709\u4e2a isAutoMeasureEnabled\uff08\uff09 \u65b9\u6cd5\u7528\u6765\u914d\u7f6e LayoutManager \u662f\u5426\u5f00\u542f \u81ea\u6d4b\u91cf \u3002\u6211\u4eec\u5e38\u7528\u7684 LinearLayoutManager \u6216 GridLayoutManager \u90fd\u662f\u9ed8\u8ba4\u8fd4\u56de true \u7684\u3002 \u535a\u5ba2\u5730\u5740","title":"MaxLineLayoutManager"},{"location":"android/%E9%9A%8F%E7%AC%94/MaxLineLayoutManager/#_1","text":"\u6240\u4ee5\u5b9e\u73b0\u601d\u8def\u5c31\u5f88\u7b80\u5355\u4e86\uff1a\u8bbe\u5b9a\u4e00\u4e2a maxLine \u53c2\u6570\uff0c\u5f53 RecyclerView \u7684 itemCount \u5c0f\u4e8e\u8fd9\u4e2a\u503c isAutoMeasureEnabled() \u90fd\u662f\u8fd4\u56de true \uff0c\u8ba9 LayoutManager \u53bb \u81ea\u6d4b\u91cf \u3002\u5f53 itemCount \u5927\u4e8e maxLine \u65f6\u5c31\u91cd\u5199 onMeasure \u65b9\u6cd5\uff0c\u5728\u91cc\u9762\u53bb\u8bbe\u7f6e RecyclerView \u7684 \u9650\u5b9a\u5bbd\u9ad8 \u3002","title":"\u5b9e\u73b0\u601d\u8def"},{"location":"android/%E9%9A%8F%E7%AC%94/MaxLineLayoutManager/#_2","text":"class MaxLineLinearLayoutManager : LinearLayoutManager { private var mMaxLine = 0 constructor( context: Context?, maxLine: Int ) : super(context) { Helper.checkMaxCount(maxLine) this.mMaxLine = maxLine } constructor( context: Context?, orientation: Int, reverseLayout: Boolean, maxLine: Int ) : super(context, orientation, reverseLayout) { Helper.checkMaxCount(maxLine) this.mMaxLine = maxLine } override fun onMeasure( recycler: RecyclerView.Recycler, state: RecyclerView.State, widthSpec: Int, heightSpec: Int ) { if (itemCount <= mMaxLine || itemCount == 0) { super.onMeasure(recycler, state, widthSpec, heightSpec) return } val child = recycler.getViewForPosition(0) // addView(child) measureChildWithMargins(child, 0, 0) val itemWidth = getDecoratedMeasuredWidth(child) val itemHeight = getDecoratedMeasuredHeight(child) removeAndRecycleView(child, recycler) val widthMode = View.MeasureSpec.getMode(widthSpec) val heightMode = View.MeasureSpec.getMode(heightSpec) var width = 0 var height = 0 if (orientation == HORIZONTAL) { height = if (heightMode == View.MeasureSpec.EXACTLY) { View.MeasureSpec.getSize(heightSpec) } else { itemHeight } width = itemWidth * mMaxLine } else { width = if (widthMode == View.MeasureSpec.EXACTLY) { View.MeasureSpec.getSize(widthSpec) } else { itemWidth } height = itemHeight * mMaxLine } setMeasuredDimension(width, height) } override fun isAutoMeasureEnabled(): Boolean { if (itemCount <= mMaxLine) { return super.isAutoMeasureEnabled() } return false } } \u4ee3\u7801\u5f88\u7b80\u5355\uff0c\u5e94\u8be5\u4e0d\u52a0\u6ce8\u91ca\u4e5f\u80fd\u770b\u61c2\u3002\u5982\u679c\u770b\u4e0d\u61c2\u7684\u53ef\u4ee5\u53bb\u770b\u770b\u6211\u4e4b\u524d\u7684\u90a3\u7bc7\u5206\u6790 \u81ea\u5b9a\u4e49LayoutManager \u7684\u6587\u7ae0\u3002 \u535a\u5ba2\u5730\u5740 recyclerView.layoutManager = MaxLineLinearLayoutManager(this, maxLine = 3)","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"android/%E9%9A%8F%E7%AC%94/MaxLineLayoutManager/#_3","text":"https://github.com/simplepeng/MaxLineLayoutManager","title":"\u6e90\u7801\u5730\u5740"},{"location":"android/%E9%9A%8F%E7%AC%94/PopupMenu%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/","text":"PopupMenu\u7b80\u5355\u4f7f\u7528 PopupMenu \u662f\u951a\u5b9a\u5230 View \u7684\u6a21\u6001\u83dc\u5355\u3002\u5982\u679c\u7a7a\u95f4\u8db3\u591f\uff0c\u5b83\u5c06\u663e\u793a\u5728\u5b9a\u4f4d\u89c6\u56fe\u4e0b\u65b9\uff0c\u5426\u5219\u663e\u793a\u5728\u5176\u4e0a\u65b9 public void popup(View view) { //\u521d\u59cb\u5316PopupMenu PopupMenu pm = new PopupMenu(MainActivity.this, view); //\u586b\u5145menu api14\u53ca\u4ee5\u4e0a\u53ef\u8fd9\u4e48\u7528 pm.inflate(R.menu.item_menu); //\u4f4e\u7248\u672c\u7528\u6cd5 //pm.getMenuInflater().inflate(R.menu.item_menu, pm.getMenu()); //\u663e\u793a pm.show(); //\u8bbe\u7f6eitem\u70b9\u51fb\u4e8b\u4ef6 pm.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() { @Override public boolean onMenuItemClick(MenuItem item) { int itemId = item.getItemId(); return false; } }); //\u8bbe\u7f6ePopupMenu\u5173\u95ed\u7684\u76d1\u542c pm.setOnDismissListener(new PopupMenu.OnDismissListener() { @Override public void onDismiss(PopupMenu menu) { } }); } \u5728res\u6587\u4ef6\u5939\u4e0b\u521b\u5efamenu\u6587\u4ef6\u5939\uff0c\u5e76\u521b\u5efa\u5bf9\u5e94\u7684menu.xml <?xml version=\"1.0\" encoding=\"utf-8\"?> <menu xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\"> <item android:id=\"@+id/item1\" android:icon=\"@mipmap/ic_launcher\" android:title=\"item1\" /> <item android:id=\"@+id/item2\" android:icon=\"@mipmap/ic_launcher\" android:title=\"item2\" /> <item android:id=\"@+id/item3\" android:icon=\"@mipmap/ic_launcher\" android:title=\"item3\" /> <item android:id=\"@+id/item4\" android:icon=\"@mipmap/ic_launcher\" android:title=\"item4\" /> </menu> \u521b\u5efa\u83dc\u5355\u7ec4 \u83dc\u5355\u7ec4\u662f\u6307\u4e00\u7cfb\u5217\u5177\u6709\u67d0\u4e9b\u5171\u540c\u7279\u5f81\u7684\u83dc\u5355\u9879\u3002\u901a\u8fc7\u83dc\u5355\u7ec4\uff0c\u60a8\u53ef\u4ee5\uff1a \u4f7f\u7528 setGroupVisible() \u663e\u793a\u6216\u9690\u85cf\u6240\u6709\u9879\u76ee \u4f7f\u7528 setGroupEnabled() \u542f\u7528\u6216\u7981\u7528\u6240\u6709\u9879\u76ee \u4f7f\u7528 setGroupCheckable() \u6307\u5b9a\u6240\u6709\u9879\u76ee\u662f\u5426\u53ef\u9009\u4e2d \u901a\u8fc7\u5c06 <item> \u5143\u7d20\u5d4c\u5957\u5728\u83dc\u5355\u8d44\u6e90\u4e2d\u7684 <group> \u5143\u7d20\u5185\uff0c\u6216\u8005\u901a\u8fc7\u4f7f\u7528 add() \u65b9\u6cd5\u6307\u5b9a\u7ec4 ID\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u7ec4\u3002 <menu xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\"> <item android:id=\"@+id/item1\" android:icon=\"@mipmap/ic_launcher\" android:title=\"item1\" /> <group> <item android:id=\"@+id/g_item1\" android:icon=\"@mipmap/ic_launcher\" android:title=\"g_item1\" /> <item android:id=\"@+id/g_item2\" android:icon=\"@mipmap/ic_launcher\" android:title=\"g_item2\" /> </group> </menu> \u663e\u793a\u56fe\u6807 \u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684menu\u6587\u4ef6\u6211\u4eec\u8bbe\u7f6eicon\u5c5e\u6027\u4f46\u662f\u5e76\u6ca1\u6709\u663e\u793a\u51fa\u6765\uff0c\u8fd9\u662f\u600e\u4e48\u56de\u4e8b\u5462\uff1f\u90a3\u5c31\u770b\u770b\u6e90\u7801\u5427. \u521a\u597d\u6211\u627e\u5230\u8fd9\u4e48\u4e00\u4e2a\u65b9\u6cd5 public void setForceShowIcon(boolean forceShowIcon) { mForceShowIcon = forceShowIcon; if (mPopup != null) { mPopup.setForceShowIcon(forceShowIcon); } } \u6211\u7528\u8e69\u811a\u7684\u82f1\u8bed\u7ffb\u8bd1\u4e00\u4e0b\u5b50\uff0c\u610f\u601d\u5c31\u662f\uff1a\u8bbe\u7f6e\u5f39\u51fa\u83dc\u5355\u7684\u9002\u914d\u5668\u662f\u5426\u88ab\u5f3a\u5236\u663e\u793a\u56fe\u6807\uff0c\u611f\u89c9\u8fd9\u65b9\u6cd5\u6ca1\u6bdb\u75c5\u3002\u7136\u540e\u8fd9\u4e2a\u65b9\u6cd5\u5c5e\u4e8eMenuPopupHelper\u8fd9\u4e2a\u7c7b\uff0c\u518d\u627e\u5230PopupMenu\u8fd9\u7c7b\u4e2d\u7528\u5230MenuPopupHelper\u7684\u5730\u65b9\uff0c\u7136\u540e\u6211\u53c8\u50bb\u773c\u4e86\u3002 public class PopupMenu { private final Context mContext; private final MenuBuilder mMenu; private final View mAnchor; final MenuPopupHelper mPopup; ....... } \u8fd9\u4e2amPopup\u53d8\u91cf\u662f\u9ed8\u8ba4\u4fee\u9970\u7b26\u4fee\u9970\u7684\uff0c\u5e76\u4e14\u4e5f\u6ca1\u6709\u66b4\u9732get\u65b9\u6cd5\uff0c\u770b\u6765\u53ea\u6709\u4ee5\u66b4\u5236\u66b4\u4e86-\u90a3\u5c31\u662f\u7528java\u7684\u53cd\u5c04\u673a\u5236\u4e86\uff0c\u4e0a\u4ee3\u7801\u3002 try { Field mPopup = pm.getClass().getDeclaredField(\"mPopup\"); mPopup.setAccessible(true); MenuPopupHelper menuPopupHelper = (MenuPopupHelper) mPopup.get(pm); menuPopupHelper.setForceShowIcon(true); } catch (NoSuchFieldException e) { e.printStackTrace(); } catch (IllegalAccessException e) { e.printStackTrace(); } run \u4e00\u4e0b\u770b\u770b\uff01 \u5dee\u4e0d\u591a\u662f\u8fd9\u4e2a\u6837\u5b50","title":"PopupMenu\u7b80\u5355\u4f7f\u7528"},{"location":"android/%E9%9A%8F%E7%AC%94/PopupMenu%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/#popupmenu","text":"PopupMenu \u662f\u951a\u5b9a\u5230 View \u7684\u6a21\u6001\u83dc\u5355\u3002\u5982\u679c\u7a7a\u95f4\u8db3\u591f\uff0c\u5b83\u5c06\u663e\u793a\u5728\u5b9a\u4f4d\u89c6\u56fe\u4e0b\u65b9\uff0c\u5426\u5219\u663e\u793a\u5728\u5176\u4e0a\u65b9 public void popup(View view) { //\u521d\u59cb\u5316PopupMenu PopupMenu pm = new PopupMenu(MainActivity.this, view); //\u586b\u5145menu api14\u53ca\u4ee5\u4e0a\u53ef\u8fd9\u4e48\u7528 pm.inflate(R.menu.item_menu); //\u4f4e\u7248\u672c\u7528\u6cd5 //pm.getMenuInflater().inflate(R.menu.item_menu, pm.getMenu()); //\u663e\u793a pm.show(); //\u8bbe\u7f6eitem\u70b9\u51fb\u4e8b\u4ef6 pm.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() { @Override public boolean onMenuItemClick(MenuItem item) { int itemId = item.getItemId(); return false; } }); //\u8bbe\u7f6ePopupMenu\u5173\u95ed\u7684\u76d1\u542c pm.setOnDismissListener(new PopupMenu.OnDismissListener() { @Override public void onDismiss(PopupMenu menu) { } }); } \u5728res\u6587\u4ef6\u5939\u4e0b\u521b\u5efamenu\u6587\u4ef6\u5939\uff0c\u5e76\u521b\u5efa\u5bf9\u5e94\u7684menu.xml <?xml version=\"1.0\" encoding=\"utf-8\"?> <menu xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\"> <item android:id=\"@+id/item1\" android:icon=\"@mipmap/ic_launcher\" android:title=\"item1\" /> <item android:id=\"@+id/item2\" android:icon=\"@mipmap/ic_launcher\" android:title=\"item2\" /> <item android:id=\"@+id/item3\" android:icon=\"@mipmap/ic_launcher\" android:title=\"item3\" /> <item android:id=\"@+id/item4\" android:icon=\"@mipmap/ic_launcher\" android:title=\"item4\" /> </menu>","title":"PopupMenu\u7b80\u5355\u4f7f\u7528"},{"location":"android/%E9%9A%8F%E7%AC%94/PopupMenu%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/#_1","text":"\u83dc\u5355\u7ec4\u662f\u6307\u4e00\u7cfb\u5217\u5177\u6709\u67d0\u4e9b\u5171\u540c\u7279\u5f81\u7684\u83dc\u5355\u9879\u3002\u901a\u8fc7\u83dc\u5355\u7ec4\uff0c\u60a8\u53ef\u4ee5\uff1a \u4f7f\u7528 setGroupVisible() \u663e\u793a\u6216\u9690\u85cf\u6240\u6709\u9879\u76ee \u4f7f\u7528 setGroupEnabled() \u542f\u7528\u6216\u7981\u7528\u6240\u6709\u9879\u76ee \u4f7f\u7528 setGroupCheckable() \u6307\u5b9a\u6240\u6709\u9879\u76ee\u662f\u5426\u53ef\u9009\u4e2d \u901a\u8fc7\u5c06 <item> \u5143\u7d20\u5d4c\u5957\u5728\u83dc\u5355\u8d44\u6e90\u4e2d\u7684 <group> \u5143\u7d20\u5185\uff0c\u6216\u8005\u901a\u8fc7\u4f7f\u7528 add() \u65b9\u6cd5\u6307\u5b9a\u7ec4 ID\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u7ec4\u3002 <menu xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\"> <item android:id=\"@+id/item1\" android:icon=\"@mipmap/ic_launcher\" android:title=\"item1\" /> <group> <item android:id=\"@+id/g_item1\" android:icon=\"@mipmap/ic_launcher\" android:title=\"g_item1\" /> <item android:id=\"@+id/g_item2\" android:icon=\"@mipmap/ic_launcher\" android:title=\"g_item2\" /> </group> </menu>","title":"\u521b\u5efa\u83dc\u5355\u7ec4"},{"location":"android/%E9%9A%8F%E7%AC%94/PopupMenu%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/#_2","text":"\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684menu\u6587\u4ef6\u6211\u4eec\u8bbe\u7f6eicon\u5c5e\u6027\u4f46\u662f\u5e76\u6ca1\u6709\u663e\u793a\u51fa\u6765\uff0c\u8fd9\u662f\u600e\u4e48\u56de\u4e8b\u5462\uff1f\u90a3\u5c31\u770b\u770b\u6e90\u7801\u5427. \u521a\u597d\u6211\u627e\u5230\u8fd9\u4e48\u4e00\u4e2a\u65b9\u6cd5 public void setForceShowIcon(boolean forceShowIcon) { mForceShowIcon = forceShowIcon; if (mPopup != null) { mPopup.setForceShowIcon(forceShowIcon); } } \u6211\u7528\u8e69\u811a\u7684\u82f1\u8bed\u7ffb\u8bd1\u4e00\u4e0b\u5b50\uff0c\u610f\u601d\u5c31\u662f\uff1a\u8bbe\u7f6e\u5f39\u51fa\u83dc\u5355\u7684\u9002\u914d\u5668\u662f\u5426\u88ab\u5f3a\u5236\u663e\u793a\u56fe\u6807\uff0c\u611f\u89c9\u8fd9\u65b9\u6cd5\u6ca1\u6bdb\u75c5\u3002\u7136\u540e\u8fd9\u4e2a\u65b9\u6cd5\u5c5e\u4e8eMenuPopupHelper\u8fd9\u4e2a\u7c7b\uff0c\u518d\u627e\u5230PopupMenu\u8fd9\u7c7b\u4e2d\u7528\u5230MenuPopupHelper\u7684\u5730\u65b9\uff0c\u7136\u540e\u6211\u53c8\u50bb\u773c\u4e86\u3002 public class PopupMenu { private final Context mContext; private final MenuBuilder mMenu; private final View mAnchor; final MenuPopupHelper mPopup; ....... } \u8fd9\u4e2amPopup\u53d8\u91cf\u662f\u9ed8\u8ba4\u4fee\u9970\u7b26\u4fee\u9970\u7684\uff0c\u5e76\u4e14\u4e5f\u6ca1\u6709\u66b4\u9732get\u65b9\u6cd5\uff0c\u770b\u6765\u53ea\u6709\u4ee5\u66b4\u5236\u66b4\u4e86-\u90a3\u5c31\u662f\u7528java\u7684\u53cd\u5c04\u673a\u5236\u4e86\uff0c\u4e0a\u4ee3\u7801\u3002 try { Field mPopup = pm.getClass().getDeclaredField(\"mPopup\"); mPopup.setAccessible(true); MenuPopupHelper menuPopupHelper = (MenuPopupHelper) mPopup.get(pm); menuPopupHelper.setForceShowIcon(true); } catch (NoSuchFieldException e) { e.printStackTrace(); } catch (IllegalAccessException e) { e.printStackTrace(); } run \u4e00\u4e0b\u770b\u770b\uff01 \u5dee\u4e0d\u591a\u662f\u8fd9\u4e2a\u6837\u5b50","title":"\u663e\u793a\u56fe\u6807"},{"location":"android/%E9%9A%8F%E7%AC%94/RxJava%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%AC%A6/","text":"RxJava\u5e38\u7528\u64cd\u4f5c\u7b26 \u539f\u6587\u5730\u5740 http://reactivex.io/documentation/operators.html#alphabetical \u521b\u5efa\u64cd\u4f5c \u7528\u4e8e\u521b\u5efaObservable\uff08\u88ab\u89c2\u5bdf\u8005\uff09\u7684\u64cd\u4f5c\u7b26 Create\uff08\u521b\u5efa\uff09 \u2014 \u901a\u8fc7\u8c03\u7528\u89c2\u5bdf\u8005\uff08observer\uff09\u7684\u65b9\u6cd5\u4ece\u5934\u5f00\u59cb\u521b\u5efa\u4e00\u4e2aObservable Defer\uff08\u63a8\u8fdf\uff09 \u2014 \u5728\u89c2\u5bdf\u8005\u8ba2\u9605\u4e4b\u524d\u4e0d\u521b\u5efa\u8fd9\u4e2aObservable\uff0c\u4e3a\u6bcf\u4e00\u4e2a\u89c2\u5bdf\u8005\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Observable Empty/Never/Throw \u2014 \u521b\u5efa\u884c\u4e3a\u6709\u9650\u548c\u975e\u5e38\u7cbe\u786e\u7684\u7279\u6b8aObservable From\uff08\u6765\u81ea\uff09 \u2014 \u5c06\u4e00\u4e9b\u5176\u5b83\u7684\u5bf9\u8c61\u6216\u6570\u636e\u7ed3\u6784\u8f6c\u6362\u4e3aObservable Interval\uff08\u95f4\u9694\uff09 \u2014 \u521b\u5efa\u4e00\u4e2aObservable\uff0c\u5b83\u53d1\u51fa\u4ee5\u7279\u5b9a\u65f6\u95f4\u95f4\u65ad\u7684\u6574\u6570\u5e8f\u5217 Just\uff08\u4ec5\u4ec5\uff09 \u2014 \u5c06\u4e00\u4e2a\u5bf9\u8c61\u6216\u8005\u4e00\u7ec4\u5bf9\u8c61\u8f6c\u6362\u4e3a\u4e00\u4e2a\u4f1a\u53d1\u51fa\u8be5\u5bf9\u8c61\u6216\u90a3\u4e9b\u5bf9\u8c61\u7684Observable Range\uff08\u8303\u56f4\uff09 \u2014 \u521b\u5efa\u4e00\u4e2a\u53d1\u51fa\u6307\u5b9a\u8303\u56f4\u7684\u6574\u6570\u5e8f\u5217\u7684Observable Repeat\uff08\u91cd\u590d\uff09 \u2014 \u521b\u5efa\u4e00\u4e2a\u91cd\u590d\u53d1\u51fa\u7279\u5b9a\u7684\u6570\u636e\u9879\u6216\u5e8f\u5217\u7684Observable Start\uff08\u5f00\u59cb\uff09 \u2014 \u521b\u5efa\u4e00\u4e2a\u53d1\u51fa\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7684Observable Timer\uff08\u5b9a\u65f6\u5668\uff09 \u2014 \u521b\u5efa\u5728\u4e00\u4e2a\u6307\u5b9a\u7684\u5ef6\u8fdf\u4e4b\u540e\u53d1\u51fa\u5355\u4e2a\u6570\u636e\u9879\u7684Observable \u53d8\u6362\u64cd\u4f5c \u7528\u4e8e\u5bf9Observable\u53d1\u51fa\u7684\u6570\u636e\u8fdb\u884c\u53d8\u6362\u7684\u64cd\u4f5c\u7b26 Buffer\uff08\u7f13\u51b2\uff09 \u2014 \u5b9a\u671f\u4eceObservable\u6536\u96c6\u6570\u636e\u5230\u4e00\u4e2a\u96c6\u5408\uff0c\u5e76\u5c06\u8fd9\u4e9b\u6570\u636e\u9879\u6253\u5305\u53d1\u51fa\uff0c\u800c\u4e0d\u662f\u4e00\u6b21\u53d1\u51fa\u4e00\u4e2a FlatMap\uff08\u6241\u5e73\u6620\u5c04\uff09 \u2014 \u5c06Observable\u53d1\u51fa\u7684\u6570\u636e\u53d8\u6362\u4e3aObservables\u96c6\u5408\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b Observable\u53d1\u51fa\u7684\u6570\u636e\u5e73\u5766\u5316\u7684\u653e\u8fdb\u4e00\u4e2a\u5355\u72ec\u7684Observable\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5c06\u5d4c\u5957\u7684\u6570\u636e\u7ed3\u6784\u5c55\u5f00\u7684\u8fc7\u7a0b GroupBy\uff08\u5206\u7ec4\uff09 \u2014 \u5c06Observable\u5206\u62c6\u4e3a\u4e00\u7ec4Observable\uff0c\u5c06\u539f\u59cbObservable\u53d1\u51fa\u7684\u6570\u636e\u6309Key\u5206\u7ec4\uff0c\u6bcf\u4e00\u4e2aObservable\u53d1\u51fa\u4e00\u7ec4\u4e0d\u540c\u7684\u6570\u636e\u9879 Map\uff08\u6620\u5c04\uff09 \u2014 \u901a\u8fc7\u5bf9\u5e8f\u5217\u7684\u6bcf\u4e00\u9879\u90fd\u5e94\u7528\u4e00\u4e2a\u51fd\u6570\u53d8\u6362Observable\u53d1\u51fa\u7684\u6570\u636e\uff0c\u5b9e\u8d28\u662f\u5bf9\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u9879\u6267\u884c\u4e00\u4e2a\u51fd\u6570\uff0c\u51fd\u6570\u7684\u53c2\u6570\u5c31\u662f\u8fd9\u4e2a\u6570\u636e\u9879 Scan\uff08\u626b\u63cf\uff09 \u2014 \u5bf9Observable\u53d1\u51fa\u7684\u6bcf\u4e00\u9879\u6570\u636e\u5e94\u7528\u4e00\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u6309\u987a\u5e8f\u4f9d\u6b21\u53d1\u51fa\u8fd9\u4e9b\u503c Window\uff08\u7a97\u53e3\uff09 \u2014 \u5b9a\u671f\u5c06\u6765\u81eaObservable\u7684\u6570\u636e\u5206\u62c6\u6210\u4e00\u4e9bObservable\u7a97\u53e3\uff0c\u7136\u540e\u53d1\u51fa\u8fd9\u4e9b\u7a97\u53e3\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u53d1\u51fa\u4e00\u9879\u3002\u7c7b\u4f3c\u4e8eBuffer\uff0c\u4f46Buffer\u53d1\u51fa\u7684\u662f\u6570\u636e\uff0cWindow\u53d1\u51fa\u7684\u662fObservable\uff0c\u6bcf\u4e00\u4e2aObservable\u53d1\u51fa\u539f\u59cbObservable\u7684\u6570\u636e\u7684\u4e00\u4e2a\u5b50\u96c6 cast\uff08\u5f3a\u8f6c\uff09 \u2014 \u5728\u53d1\u51fa\u6570\u636e\u4e4b\u524d\u5f3a\u5236\u5c06Observable\u53d1\u51fa\u7684\u6240\u6709\u6570\u636e\u8f6c\u6362\u4e3a\u6307\u5b9a\u7c7b\u578b \u8fc7\u6ee4\u64cd\u4f5c \u7528\u4e8e\u4eceObservable\u53d1\u5c04\u7684\u6570\u636e\u4e2d\u9009\u62e9\u6027\u7684\u8fc7\u6ee4\u4e00\u4e9b\u6570\u636e\u7684\u64cd\u4f5c\u7b26 Debounce\uff08\u9632\u53cd\u8df3\uff09\u2014 \u5982\u679c\u5728\u7279\u5b9a\u7684\u65f6\u95f4\u8de8\u5ea6\u5df2\u7ecf\u8fc7\u53bb\u800c\u6ca1\u6709\u53d1\u51fa\u53e6\u4e00\u4e2a\u6570\u636e\u9879\uff0c\u5219\u53ea\u4eceObservable\u53d1\u51fa\u4e00\u4e2a\u6570\u636e\u9879 Distinct\uff08\u53bb\u91cd\uff09 \u2014 \u6291\u5236Observable\u53d1\u51fa\u7684\u91cd\u590d\u6570\u636e ElementAt\uff08\u53d6\u503c\uff09 \u2014 \u53d6\u503c\u53d6\u7279\u5b9a\u4f4d\u7f6e\u7684\u90a3\u4e00\u9879\u6570\u636e Filter\uff08\u8fc7\u6ee4\uff09 \u2014 \u8fc7\u6ee4\u6389\u6ca1\u6709\u901a\u8fc7\u65ad\u8a00\u6d4b\u8bd5\u7684\u6570\u636e\u9879\uff0c\u53ea\u53d1\u5c04\u901a\u8fc7\u6d4b\u8bd5\u7684 First\uff08\u9996\u9009\uff09 \u2014 \u53ea\u4eceObservable\u53d1\u51fa\u7b2c\u4e00\u4e2a\u6570\u636e\u9879\u6ee1\u8db3\u6761\u4ef6\u7684\u7b2c\u4e00\u4e2a\u6570\u636e\u9879 IgnoreElements\uff08\u5ffd\u7565\u6240\u6709\u7684\u6570\u636e\uff09 \u2014 \u4e0d\u4eceObservable\u53d1\u51fa\u4efb\u4f55\u6570\u636e\u9879\uff0c\u4f46\u4fdd\u7559\u7ec8\u6b62\u901a\u77e5(onError\u6216 onCompleted) Last\uff08\u672b\u9879\uff09 \u2014 \u53ea\u53d1\u51faObservable\u53d1\u51fa\u6700\u540e\u4e00\u6761\u6570\u636e Sample\uff08\u62bd\u6837\u68c0\u67e5\uff09 \u2014 \u5b9a\u671f\u53d1\u5c04\u6700\u65b0\u7684\u6570\u636e\uff0c\u7b49\u4e8e\u5c31\u662f\u6570\u636e\u62bd\u6837\uff0c\u6709\u7684\u5b9e\u73b0\u91cc\u53ebThrottleFirst Skip\uff08\u8df3\u8fc7\uff09 \u2014 \u8df3\u8fc7\u7531Observable\u53d1\u51fa\u7684\u524dn\u4e2a\u6570\u636e\u9879 SkipLast\uff08\u8df3\u8fc7\u672b\u9879\uff09 \u2014 \u8df3\u8fc7\u7531Observable\u53d1\u51fa\u7684\u6700\u597dn\u4e2a\u6570\u636e\u9879 Take \u2014 \u53ea\u53d1\u51fa\u7531Observable\u53d1\u51fa\u7684\u524dn\u9879\u6570\u636e TakeLast \u2014 \u53ea\u53d1\u51fa\u7531Observable\u53d1\u51fa\u7684\u6700\u597dn\u9879\u6570\u636e \u7ec4\u5408\u64cd\u4f5c \u7528\u4e8e\u5c06\u591a\u4e2aObservable\u7ec4\u5408\u6210\u4e00\u4e2a\u5355\u4e00\u7684Observable\u7684\u64cd\u4f5c\u7b26 And/ Then/When - \u5c06\u4e24\u4e2a\u6216\u66f4\u591a\u4e2aObservables\u901a\u8fc7Pattern\uff08\u6a21\u5f0f\uff09\u548cPlan\uff08\u8ba1\u5212\uff09\u53d1\u51fa\u7684\u6570\u636e\u7ec4\u5408\u6210\u4e00\u4e2a\u6570\u636e\u96c6\u5408 CombineLatest - \u5f53\u9879\u7531\u4e24\u4e2aObservable\u4e2d\u7684\u4efb\u4e00\u4e2a\u53d1\u51fa\u65f6\uff0c\u901a\u8fc7\u6307\u5b9a\u7684\u51fd\u6570\u7ec4\u5408\u6bcf\u4e2aObservable\u53d1\u51fa\u7684\u6700\u65b0\u9879\uff0c\u5e76\u57fa\u4e8e\u6b64\u51fd\u6570\u7684\u7ed3\u679c\u53d1\u51fa\u9879 Join - \u5f53\u5728\u6839\u636e\u7531\u53e6\u4e00Observable\u53d1\u5c04\u7684\u9879\u76ee\u5b9a\u4e49\u7684\u65f6\u95f4\u7a97\u671f\u95f4\u53d1\u51fa\u6765\u81ea\u4e00\u4e2aObservable\u7684\u9879\u76ee\u65f6\uff0c\u5c31\u5c06\u4e24\u4e2aObservable\u53d1\u5c04\u7684\u6570\u636e\u7ec4\u5408\u6210\u4e00\u4e2a\u5e76\u53d1\u5c04 Merge\uff08\u5408\u5e76\uff09 - \u5c06\u591a\u4e2aObservable\u53d1\u5c04\u7684\u6570\u636e\u7ec4\u5408\u5e76\u6210\u4e00\u4e2a StartWith\uff08\u4ee5...\u5f00\u59cb\uff09 - \u5728\u5f00\u59cb\u4ece\u6e90Observable\u53d1\u51fa\u9879\u4e4b\u524d\uff0c\u5148\u53d1\u51fa\u6307\u5b9a\u7684\u6570\u636e\u9879\u6216\u6570\u636e\u5e8f\u5217 Switch\uff08\u5207\u6362\uff09 - \u5c06\u4e00\u4e2a\u53d1\u51faObservable\u7684Observable\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2aObservable\uff0c\u5e76\u9010\u4e2a\u53d1\u5c04\u539f\u6765Observable\u6700\u8fd1\u53d1\u5c04\u7684\u6570\u636e Zip - \u901a\u8fc7\u6307\u5b9a\u7684\u51fd\u6570\u5c06\u591a\u4e2aObservable\u7684\u53d1\u5c04\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u5e76\u6839\u636e\u6b64\u51fd\u6570\u7684\u7ed3\u679c\u4e3a\u6bcf\u4e2a\u7ec4\u5408\u53d1\u51fa\u5355\u4e2a\u6570\u636e\u9879 \u9519\u8bef\u5904\u7406\u64cd\u4f5c \u6709\u52a9\u4e8e\u4eceObservable\u7684\u9519\u8bef\u901a\u77e5\u4e2d\u6062\u590d\u7684\u64cd\u4f5c\u7b26 Catch\uff08\u6355\u83b7\uff09 \u2014 \u7ee7\u7eed\u5e8f\u5217\u64cd\u4f5c\uff0c\u5c06\u9519\u8bef\u66ff\u6362\u4e3a\u6b63\u5e38\u7684\u6570\u636e\uff0c\u4eceonError\u901a\u77e5\u4e2d\u6062\u590d Retry\uff08\u91cd\u8bd5\uff09 \u2014 \u5982\u679cObservable\u53d1\u5c04\u4e86\u4e00\u4e2aonError\u901a\u77e5\uff0c\u91cd\u65b0\u8ba2\u9605\u5b83\uff0c\u5e0c\u671b\u5b83\u5c06\u5b8c\u6210\u5e76\u6ca1\u6709\u9519\u8bef \u8f85\u52a9\u64cd\u4f5c \u7528\u4e8e\u5904\u7406Observable\u7684\u64cd\u4f5c\u7b26 Delay \u2014 \u5ef6\u8fdf\u4e00\u6bb5\u65f6\u95f4\u53d1\u5c04\u7ed3\u679c\u6570\u636e Do \u2014 \u6ce8\u518c\u5bf9\u5404\u79cdObservable\u751f\u547d\u5468\u671f\u4e8b\u4ef6\u91c7\u53d6\u7684\u64cd\u4f5c Materialize/Dematerialize \u2014 \u5c06\u53d1\u5c04\u7684\u6570\u636e\u548c\u901a\u77e5\u90fd\u5f53\u505a\u6570\u636e\u53d1\u5c04\uff0c\u6216\u8005\u53cd\u8fc7\u6765 ObserveOn\uff08\u89c2\u5bdf\u5728\uff09 \u2014 \u6307\u5b9aObserver\u89c2\u5bdfObservable\u7684\u8c03\u5ea6\u5668\uff08Scheduler\uff09\uff08\u5de5\u4f5c\u7ebf\u7a0b\uff09 Serialize\uff08\u5e8f\u5217\u5316\uff09 \u2014 \u5f3a\u5236Observable\u6309\u6b21\u5e8f\u53d1\u5c04\u6570\u636e\u5e76\u4e14\u529f\u80fd\u662f\u6709\u6548\u7684 Subscribe\uff08\u8ba2\u9605\uff09 \u2014 \u6536\u5230Observable\u53d1\u5c04\u7684\u6570\u636e\u548c\u901a\u77e5\u540e\u6267\u884c\u7684\u64cd\u4f5c SubscribeOn\uff08\u8ba2\u9605\u5728\uff09 \u2014 \u6307\u5b9aObservable\u5e94\u8be5\u5728\u54ea\u4e2a\u8c03\u5ea6\u5668\u4e0a\u6267\u884c TimeInterval(\u65f6\u95f4\u95f4\u9694) \u2014 \u5c06\u4e00\u4e2aObservable\u8f6c\u6362\u4e3a\u53d1\u5c04\u4e24\u4e2a\u6570\u636e\u4e4b\u95f4\u6240\u8017\u8d39\u65f6\u95f4\u7684Observable Timeout\uff08\u8d85\u65f6\uff09 \u2014 \u5982\u679c\u8fc7\u4e86\u6307\u5b9a\u7684\u4e00\u6bb5\u65f6\u95f4\u6ca1\u6709\u53d1\u5c04\u6570\u636e\uff0c\u5219\u53d1\u5c04\u9519\u8bef\u901a\u77e5 Timestamp\uff08\u65f6\u95f4\u6233\uff09 \u2014 \u7ed9Observable\u53d1\u5c04\u7684\u6bcf\u4e2a\u6570\u636e\u9879\u6dfb\u52a0\u4e00\u4e2a\u65f6\u95f4\u6233 Using \u2014 \u521b\u5efa\u4e00\u4e2a\u4e0eObservable\u76f8\u540c\u751f\u547d\u5468\u671f\u5185\u5b58\u5728\u7684\u4e00\u6b21\u6027\u8d44\u6e90 \u6761\u4ef6\u548c\u5e03\u5c14\u64cd\u4f5c \u7528\u4e8e\u8bc4\u4f30\uff0c\u5224\u65ad\u4e00\u4e2a\u6216\u591a\u4e2aObservable\u6216Observable\u4e2d\u53d1\u51fa\u7684\u6570\u636e\u9879\u7684\u64cd\u4f5c\u7b26 All \u2014 \u5224\u65adObservable\u53d1\u5c04\u7684\u6240\u6709\u7684\u6570\u636e\u9879\u662f\u5426\u90fd\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6 Amb \u2014 \u7ed9\u5b9a\u4e24\u4e2a\u6216\u8005\u591a\u4e2a\u6e90Observe\uff0c\u53ea\u8ba9\u7b2c\u4e00\u4e2a\u53d1\u51fa\u6570\u636e\u7684Observable\u53d1\u51fa\u5168\u90e8\u6570\u636e Contains \u2014 \u5224\u65adObservable\u662f\u5426\u53d1\u5c04\u6307\u5b9a\u7684\u6570\u636e\u9879 DefaultIfEmpty \u2014 \u53d1\u5c04\u6765\u81ea\u539f\u59cbObservable\u7684\u6570\u636e\uff0c\u5982\u679c\u539f\u59cbObservable\u6ca1\u6709\u53d1\u5c04\u6570\u636e\uff0c\u5c31\u53d1\u5c04\u4e00\u4e2a\u9ed8\u8ba4\u6570\u636e SequenceEqual \u2014 \u5224\u65ad\u4e24\u4e2aObservable\u662f\u5426\u53d1\u51fa\u76f8\u540c\u7684\u6570\u636e\u5e8f\u5217 SkipUntil \u2014 \u4e22\u5f03\u539f\u59cbObservable\u53d1\u5c04\u7684\u6570\u636e\uff0c\u76f4\u5230\u7b2c\u4e8c\u4e2aObservable\u53d1\u5c04\u4e86\u4e00\u4e2a\u6570\u636e\uff0c\u7136\u540e\u53d1\u5c04\u539f\u59cbObservable\u7684\u5269\u4f59\u6570\u636e SkipWhile \u2014 \u4e22\u5f03\u539f\u59cbObservable\u53d1\u5c04\u7684\u6570\u636e\uff0c\u76f4\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u6761\u4ef6\u4e3afalse\uff0c\u7136\u540e\u53d1\u5c04\u539f\u59cbObservable\u5269\u4f59\u7684\u6570\u636e TakeUntil \u2014 \u4e22\u5f03\u5728\u7b2c\u4e8c\u4e2aObservable\u53d1\u51fa\u6570\u636e\u9879\u6216\u7ec8\u6b62\u540e\u7531Observable\u53d1\u51fa\u7684\u6570\u636e\u9879 TakeWhile \u2014 \u4e22\u5f03\u5728\u6307\u5b9a\u6761\u4ef6\u53d8\u4e3afalse\u4e4b\u540e\u7531Observable\u53d1\u51fa\u7684\u9879 \u6570\u5b66\u548c\u805a\u5408\u64cd\u4f5c \u5bf9Observable\u53d1\u51fa\u7684\u6574\u4e2a\u5e8f\u5217\u8fdb\u884c\u64cd\u4f5c\u7684\u64cd\u4f5c\u7b26 Average\uff08\u5e73\u5747\u503c\uff09 \u2014 \u8ba1\u7b97Observable\u53d1\u5c04\u7684\u6570\u636e\u5e8f\u5217\u7684\u5e73\u5747\u503c\uff0c\u7136\u540e\u53d1\u5c04\u8fd9\u4e2a\u7ed3\u679c Concat \u2014 \u4e0d\u4ea4\u9519\u7684\u8fde\u63a5\u591a\u4e2aObservable\u7684\u6570\u636e Count\uff08\u6570\u91cf\uff09 \u2014 \u8ba1\u7b97Observable\u53d1\u5c04\u7684\u6570\u636e\u4e2a\u6570\uff0c\u5e76\u53ea\u53d1\u9001\u6b64\u503c Max\uff08\u6700\u5927\u503c\uff09 \u2014 \u8ba1\u7b97\u5e76\u53d1\u5c04\u6570\u636e\u5e8f\u5217\u7684\u6700\u5927\u503c Min\uff08\u6700\u5c0f\u503c\uff09 \u2014 \u8ba1\u7b97\u5e76\u53d1\u5c04\u6570\u636e\u5e8f\u5217\u7684\u6700\u5c0f\u503c Reduce\uff08\u5f52\u7eb3\uff09 \u2014 \u6309\u987a\u5e8f\u5bf9\u6570\u636e\u5e8f\u5217\u7684\u6bcf\u4e00\u4e2a\u5e94\u7528\u67d0\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u8fd4\u56de\u8fd9\u4e2a\u503c Sum\uff08\u603b\u548c\uff09 \u2014 \u8ba1\u7b97\u5e76\u53d1\u5c04\u6570\u636e\u5e8f\u5217\u7684\u548c \u80cc\u538b\u64cd\u4f5c backpressure operators - \u4e3a\u4e86\u5e94\u5bf9\u89c2\u5bdf\u8005\u6d88\u8d39\u4e8b\u4ef6\u6bd4\u88ab\u89c2\u5bdf\u8005\u751f\u4ea7\u4e8b\u4ef6\u66f4\u5feb\uff0c\u6240\u4ee5\u9700\u8981\u80cc\u538b \u8fde\u63a5\u64cd\u4f5c \u4e00\u4e9b\u6709\u7cbe\u786e\u53ef\u63a7\u7684\u8ba2\u9605\u884c\u4e3a\u7684\u7279\u6b8aObservable Connect\uff08\u8fde\u63a5\uff09 \u2014 \u6307\u793a\u53ef\u8fde\u63a5\u7684Observable\u5f00\u59cb\u53d1\u9001\u6570\u636e\u7ed9\u8ba2\u9605\u8005 Publish \u2014 \u5c06\u666e\u901a\u7684Observable\u8f6c\u6362\u4e3a\u53ef\u8fde\u63a5\u7684Observable RefCount \u2014 \u4f7f\u4e00\u4e2a\u53ef\u8fde\u63a5\u7684Observable\u8868\u73b0\u5f97\u50cf\u4e00\u4e2a\u666e\u901a\u7684Observable Replay \u2014 \u786e\u4fdd\u6240\u6709\u7684\u89c2\u5bdf\u8005\u6536\u5230\u540c\u6837\u7684\u6570\u636e\u5e8f\u5217\uff0c\u5373\u4f7f\u4ed6\u4eec\u5728Observable\u5f00\u59cb\u53d1\u5c04\u6570\u636e\u4e4b\u540e\u624d\u8ba2\u9605 \u8f6c\u6362\u64cd\u4f5c To\uff08\u53d8\u6210\uff09 \u2014 \u5c06Observable\u8f6c\u6362\u4e3a\u5176\u5b83\u7684\u5bf9\u8c61\u6216\u6570\u636e\u7ed3\u6784 Blocking\uff08\u963b\u585e\uff09 \u2014 \u963b\u585eObservable\u7684\u64cd\u4f5c\u7b26","title":"RxJava\u5e38\u7528\u64cd\u4f5c\u7b26"},{"location":"android/%E9%9A%8F%E7%AC%94/RxJava%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%AC%A6/#rxjava","text":"","title":"RxJava\u5e38\u7528\u64cd\u4f5c\u7b26"},{"location":"android/%E9%9A%8F%E7%AC%94/RxJava%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%AC%A6/#_1","text":"http://reactivex.io/documentation/operators.html#alphabetical","title":"\u539f\u6587\u5730\u5740"},{"location":"android/%E9%9A%8F%E7%AC%94/RxJava%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%AC%A6/#_2","text":"\u7528\u4e8e\u521b\u5efaObservable\uff08\u88ab\u89c2\u5bdf\u8005\uff09\u7684\u64cd\u4f5c\u7b26 Create\uff08\u521b\u5efa\uff09 \u2014 \u901a\u8fc7\u8c03\u7528\u89c2\u5bdf\u8005\uff08observer\uff09\u7684\u65b9\u6cd5\u4ece\u5934\u5f00\u59cb\u521b\u5efa\u4e00\u4e2aObservable Defer\uff08\u63a8\u8fdf\uff09 \u2014 \u5728\u89c2\u5bdf\u8005\u8ba2\u9605\u4e4b\u524d\u4e0d\u521b\u5efa\u8fd9\u4e2aObservable\uff0c\u4e3a\u6bcf\u4e00\u4e2a\u89c2\u5bdf\u8005\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Observable Empty/Never/Throw \u2014 \u521b\u5efa\u884c\u4e3a\u6709\u9650\u548c\u975e\u5e38\u7cbe\u786e\u7684\u7279\u6b8aObservable From\uff08\u6765\u81ea\uff09 \u2014 \u5c06\u4e00\u4e9b\u5176\u5b83\u7684\u5bf9\u8c61\u6216\u6570\u636e\u7ed3\u6784\u8f6c\u6362\u4e3aObservable Interval\uff08\u95f4\u9694\uff09 \u2014 \u521b\u5efa\u4e00\u4e2aObservable\uff0c\u5b83\u53d1\u51fa\u4ee5\u7279\u5b9a\u65f6\u95f4\u95f4\u65ad\u7684\u6574\u6570\u5e8f\u5217 Just\uff08\u4ec5\u4ec5\uff09 \u2014 \u5c06\u4e00\u4e2a\u5bf9\u8c61\u6216\u8005\u4e00\u7ec4\u5bf9\u8c61\u8f6c\u6362\u4e3a\u4e00\u4e2a\u4f1a\u53d1\u51fa\u8be5\u5bf9\u8c61\u6216\u90a3\u4e9b\u5bf9\u8c61\u7684Observable Range\uff08\u8303\u56f4\uff09 \u2014 \u521b\u5efa\u4e00\u4e2a\u53d1\u51fa\u6307\u5b9a\u8303\u56f4\u7684\u6574\u6570\u5e8f\u5217\u7684Observable Repeat\uff08\u91cd\u590d\uff09 \u2014 \u521b\u5efa\u4e00\u4e2a\u91cd\u590d\u53d1\u51fa\u7279\u5b9a\u7684\u6570\u636e\u9879\u6216\u5e8f\u5217\u7684Observable Start\uff08\u5f00\u59cb\uff09 \u2014 \u521b\u5efa\u4e00\u4e2a\u53d1\u51fa\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7684Observable Timer\uff08\u5b9a\u65f6\u5668\uff09 \u2014 \u521b\u5efa\u5728\u4e00\u4e2a\u6307\u5b9a\u7684\u5ef6\u8fdf\u4e4b\u540e\u53d1\u51fa\u5355\u4e2a\u6570\u636e\u9879\u7684Observable","title":"\u521b\u5efa\u64cd\u4f5c"},{"location":"android/%E9%9A%8F%E7%AC%94/RxJava%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%AC%A6/#_3","text":"\u7528\u4e8e\u5bf9Observable\u53d1\u51fa\u7684\u6570\u636e\u8fdb\u884c\u53d8\u6362\u7684\u64cd\u4f5c\u7b26 Buffer\uff08\u7f13\u51b2\uff09 \u2014 \u5b9a\u671f\u4eceObservable\u6536\u96c6\u6570\u636e\u5230\u4e00\u4e2a\u96c6\u5408\uff0c\u5e76\u5c06\u8fd9\u4e9b\u6570\u636e\u9879\u6253\u5305\u53d1\u51fa\uff0c\u800c\u4e0d\u662f\u4e00\u6b21\u53d1\u51fa\u4e00\u4e2a FlatMap\uff08\u6241\u5e73\u6620\u5c04\uff09 \u2014 \u5c06Observable\u53d1\u51fa\u7684\u6570\u636e\u53d8\u6362\u4e3aObservables\u96c6\u5408\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b Observable\u53d1\u51fa\u7684\u6570\u636e\u5e73\u5766\u5316\u7684\u653e\u8fdb\u4e00\u4e2a\u5355\u72ec\u7684Observable\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5c06\u5d4c\u5957\u7684\u6570\u636e\u7ed3\u6784\u5c55\u5f00\u7684\u8fc7\u7a0b GroupBy\uff08\u5206\u7ec4\uff09 \u2014 \u5c06Observable\u5206\u62c6\u4e3a\u4e00\u7ec4Observable\uff0c\u5c06\u539f\u59cbObservable\u53d1\u51fa\u7684\u6570\u636e\u6309Key\u5206\u7ec4\uff0c\u6bcf\u4e00\u4e2aObservable\u53d1\u51fa\u4e00\u7ec4\u4e0d\u540c\u7684\u6570\u636e\u9879 Map\uff08\u6620\u5c04\uff09 \u2014 \u901a\u8fc7\u5bf9\u5e8f\u5217\u7684\u6bcf\u4e00\u9879\u90fd\u5e94\u7528\u4e00\u4e2a\u51fd\u6570\u53d8\u6362Observable\u53d1\u51fa\u7684\u6570\u636e\uff0c\u5b9e\u8d28\u662f\u5bf9\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u9879\u6267\u884c\u4e00\u4e2a\u51fd\u6570\uff0c\u51fd\u6570\u7684\u53c2\u6570\u5c31\u662f\u8fd9\u4e2a\u6570\u636e\u9879 Scan\uff08\u626b\u63cf\uff09 \u2014 \u5bf9Observable\u53d1\u51fa\u7684\u6bcf\u4e00\u9879\u6570\u636e\u5e94\u7528\u4e00\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u6309\u987a\u5e8f\u4f9d\u6b21\u53d1\u51fa\u8fd9\u4e9b\u503c Window\uff08\u7a97\u53e3\uff09 \u2014 \u5b9a\u671f\u5c06\u6765\u81eaObservable\u7684\u6570\u636e\u5206\u62c6\u6210\u4e00\u4e9bObservable\u7a97\u53e3\uff0c\u7136\u540e\u53d1\u51fa\u8fd9\u4e9b\u7a97\u53e3\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u53d1\u51fa\u4e00\u9879\u3002\u7c7b\u4f3c\u4e8eBuffer\uff0c\u4f46Buffer\u53d1\u51fa\u7684\u662f\u6570\u636e\uff0cWindow\u53d1\u51fa\u7684\u662fObservable\uff0c\u6bcf\u4e00\u4e2aObservable\u53d1\u51fa\u539f\u59cbObservable\u7684\u6570\u636e\u7684\u4e00\u4e2a\u5b50\u96c6 cast\uff08\u5f3a\u8f6c\uff09 \u2014 \u5728\u53d1\u51fa\u6570\u636e\u4e4b\u524d\u5f3a\u5236\u5c06Observable\u53d1\u51fa\u7684\u6240\u6709\u6570\u636e\u8f6c\u6362\u4e3a\u6307\u5b9a\u7c7b\u578b","title":"\u53d8\u6362\u64cd\u4f5c"},{"location":"android/%E9%9A%8F%E7%AC%94/RxJava%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%AC%A6/#_4","text":"\u7528\u4e8e\u4eceObservable\u53d1\u5c04\u7684\u6570\u636e\u4e2d\u9009\u62e9\u6027\u7684\u8fc7\u6ee4\u4e00\u4e9b\u6570\u636e\u7684\u64cd\u4f5c\u7b26 Debounce\uff08\u9632\u53cd\u8df3\uff09\u2014 \u5982\u679c\u5728\u7279\u5b9a\u7684\u65f6\u95f4\u8de8\u5ea6\u5df2\u7ecf\u8fc7\u53bb\u800c\u6ca1\u6709\u53d1\u51fa\u53e6\u4e00\u4e2a\u6570\u636e\u9879\uff0c\u5219\u53ea\u4eceObservable\u53d1\u51fa\u4e00\u4e2a\u6570\u636e\u9879 Distinct\uff08\u53bb\u91cd\uff09 \u2014 \u6291\u5236Observable\u53d1\u51fa\u7684\u91cd\u590d\u6570\u636e ElementAt\uff08\u53d6\u503c\uff09 \u2014 \u53d6\u503c\u53d6\u7279\u5b9a\u4f4d\u7f6e\u7684\u90a3\u4e00\u9879\u6570\u636e Filter\uff08\u8fc7\u6ee4\uff09 \u2014 \u8fc7\u6ee4\u6389\u6ca1\u6709\u901a\u8fc7\u65ad\u8a00\u6d4b\u8bd5\u7684\u6570\u636e\u9879\uff0c\u53ea\u53d1\u5c04\u901a\u8fc7\u6d4b\u8bd5\u7684 First\uff08\u9996\u9009\uff09 \u2014 \u53ea\u4eceObservable\u53d1\u51fa\u7b2c\u4e00\u4e2a\u6570\u636e\u9879\u6ee1\u8db3\u6761\u4ef6\u7684\u7b2c\u4e00\u4e2a\u6570\u636e\u9879 IgnoreElements\uff08\u5ffd\u7565\u6240\u6709\u7684\u6570\u636e\uff09 \u2014 \u4e0d\u4eceObservable\u53d1\u51fa\u4efb\u4f55\u6570\u636e\u9879\uff0c\u4f46\u4fdd\u7559\u7ec8\u6b62\u901a\u77e5(onError\u6216 onCompleted) Last\uff08\u672b\u9879\uff09 \u2014 \u53ea\u53d1\u51faObservable\u53d1\u51fa\u6700\u540e\u4e00\u6761\u6570\u636e Sample\uff08\u62bd\u6837\u68c0\u67e5\uff09 \u2014 \u5b9a\u671f\u53d1\u5c04\u6700\u65b0\u7684\u6570\u636e\uff0c\u7b49\u4e8e\u5c31\u662f\u6570\u636e\u62bd\u6837\uff0c\u6709\u7684\u5b9e\u73b0\u91cc\u53ebThrottleFirst Skip\uff08\u8df3\u8fc7\uff09 \u2014 \u8df3\u8fc7\u7531Observable\u53d1\u51fa\u7684\u524dn\u4e2a\u6570\u636e\u9879 SkipLast\uff08\u8df3\u8fc7\u672b\u9879\uff09 \u2014 \u8df3\u8fc7\u7531Observable\u53d1\u51fa\u7684\u6700\u597dn\u4e2a\u6570\u636e\u9879 Take \u2014 \u53ea\u53d1\u51fa\u7531Observable\u53d1\u51fa\u7684\u524dn\u9879\u6570\u636e TakeLast \u2014 \u53ea\u53d1\u51fa\u7531Observable\u53d1\u51fa\u7684\u6700\u597dn\u9879\u6570\u636e","title":"\u8fc7\u6ee4\u64cd\u4f5c"},{"location":"android/%E9%9A%8F%E7%AC%94/RxJava%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%AC%A6/#_5","text":"\u7528\u4e8e\u5c06\u591a\u4e2aObservable\u7ec4\u5408\u6210\u4e00\u4e2a\u5355\u4e00\u7684Observable\u7684\u64cd\u4f5c\u7b26 And/ Then/When - \u5c06\u4e24\u4e2a\u6216\u66f4\u591a\u4e2aObservables\u901a\u8fc7Pattern\uff08\u6a21\u5f0f\uff09\u548cPlan\uff08\u8ba1\u5212\uff09\u53d1\u51fa\u7684\u6570\u636e\u7ec4\u5408\u6210\u4e00\u4e2a\u6570\u636e\u96c6\u5408 CombineLatest - \u5f53\u9879\u7531\u4e24\u4e2aObservable\u4e2d\u7684\u4efb\u4e00\u4e2a\u53d1\u51fa\u65f6\uff0c\u901a\u8fc7\u6307\u5b9a\u7684\u51fd\u6570\u7ec4\u5408\u6bcf\u4e2aObservable\u53d1\u51fa\u7684\u6700\u65b0\u9879\uff0c\u5e76\u57fa\u4e8e\u6b64\u51fd\u6570\u7684\u7ed3\u679c\u53d1\u51fa\u9879 Join - \u5f53\u5728\u6839\u636e\u7531\u53e6\u4e00Observable\u53d1\u5c04\u7684\u9879\u76ee\u5b9a\u4e49\u7684\u65f6\u95f4\u7a97\u671f\u95f4\u53d1\u51fa\u6765\u81ea\u4e00\u4e2aObservable\u7684\u9879\u76ee\u65f6\uff0c\u5c31\u5c06\u4e24\u4e2aObservable\u53d1\u5c04\u7684\u6570\u636e\u7ec4\u5408\u6210\u4e00\u4e2a\u5e76\u53d1\u5c04 Merge\uff08\u5408\u5e76\uff09 - \u5c06\u591a\u4e2aObservable\u53d1\u5c04\u7684\u6570\u636e\u7ec4\u5408\u5e76\u6210\u4e00\u4e2a StartWith\uff08\u4ee5...\u5f00\u59cb\uff09 - \u5728\u5f00\u59cb\u4ece\u6e90Observable\u53d1\u51fa\u9879\u4e4b\u524d\uff0c\u5148\u53d1\u51fa\u6307\u5b9a\u7684\u6570\u636e\u9879\u6216\u6570\u636e\u5e8f\u5217 Switch\uff08\u5207\u6362\uff09 - \u5c06\u4e00\u4e2a\u53d1\u51faObservable\u7684Observable\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2aObservable\uff0c\u5e76\u9010\u4e2a\u53d1\u5c04\u539f\u6765Observable\u6700\u8fd1\u53d1\u5c04\u7684\u6570\u636e Zip - \u901a\u8fc7\u6307\u5b9a\u7684\u51fd\u6570\u5c06\u591a\u4e2aObservable\u7684\u53d1\u5c04\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u5e76\u6839\u636e\u6b64\u51fd\u6570\u7684\u7ed3\u679c\u4e3a\u6bcf\u4e2a\u7ec4\u5408\u53d1\u51fa\u5355\u4e2a\u6570\u636e\u9879","title":"\u7ec4\u5408\u64cd\u4f5c"},{"location":"android/%E9%9A%8F%E7%AC%94/RxJava%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%AC%A6/#_6","text":"\u6709\u52a9\u4e8e\u4eceObservable\u7684\u9519\u8bef\u901a\u77e5\u4e2d\u6062\u590d\u7684\u64cd\u4f5c\u7b26 Catch\uff08\u6355\u83b7\uff09 \u2014 \u7ee7\u7eed\u5e8f\u5217\u64cd\u4f5c\uff0c\u5c06\u9519\u8bef\u66ff\u6362\u4e3a\u6b63\u5e38\u7684\u6570\u636e\uff0c\u4eceonError\u901a\u77e5\u4e2d\u6062\u590d Retry\uff08\u91cd\u8bd5\uff09 \u2014 \u5982\u679cObservable\u53d1\u5c04\u4e86\u4e00\u4e2aonError\u901a\u77e5\uff0c\u91cd\u65b0\u8ba2\u9605\u5b83\uff0c\u5e0c\u671b\u5b83\u5c06\u5b8c\u6210\u5e76\u6ca1\u6709\u9519\u8bef","title":"\u9519\u8bef\u5904\u7406\u64cd\u4f5c"},{"location":"android/%E9%9A%8F%E7%AC%94/RxJava%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%AC%A6/#_7","text":"\u7528\u4e8e\u5904\u7406Observable\u7684\u64cd\u4f5c\u7b26 Delay \u2014 \u5ef6\u8fdf\u4e00\u6bb5\u65f6\u95f4\u53d1\u5c04\u7ed3\u679c\u6570\u636e Do \u2014 \u6ce8\u518c\u5bf9\u5404\u79cdObservable\u751f\u547d\u5468\u671f\u4e8b\u4ef6\u91c7\u53d6\u7684\u64cd\u4f5c Materialize/Dematerialize \u2014 \u5c06\u53d1\u5c04\u7684\u6570\u636e\u548c\u901a\u77e5\u90fd\u5f53\u505a\u6570\u636e\u53d1\u5c04\uff0c\u6216\u8005\u53cd\u8fc7\u6765 ObserveOn\uff08\u89c2\u5bdf\u5728\uff09 \u2014 \u6307\u5b9aObserver\u89c2\u5bdfObservable\u7684\u8c03\u5ea6\u5668\uff08Scheduler\uff09\uff08\u5de5\u4f5c\u7ebf\u7a0b\uff09 Serialize\uff08\u5e8f\u5217\u5316\uff09 \u2014 \u5f3a\u5236Observable\u6309\u6b21\u5e8f\u53d1\u5c04\u6570\u636e\u5e76\u4e14\u529f\u80fd\u662f\u6709\u6548\u7684 Subscribe\uff08\u8ba2\u9605\uff09 \u2014 \u6536\u5230Observable\u53d1\u5c04\u7684\u6570\u636e\u548c\u901a\u77e5\u540e\u6267\u884c\u7684\u64cd\u4f5c SubscribeOn\uff08\u8ba2\u9605\u5728\uff09 \u2014 \u6307\u5b9aObservable\u5e94\u8be5\u5728\u54ea\u4e2a\u8c03\u5ea6\u5668\u4e0a\u6267\u884c TimeInterval(\u65f6\u95f4\u95f4\u9694) \u2014 \u5c06\u4e00\u4e2aObservable\u8f6c\u6362\u4e3a\u53d1\u5c04\u4e24\u4e2a\u6570\u636e\u4e4b\u95f4\u6240\u8017\u8d39\u65f6\u95f4\u7684Observable Timeout\uff08\u8d85\u65f6\uff09 \u2014 \u5982\u679c\u8fc7\u4e86\u6307\u5b9a\u7684\u4e00\u6bb5\u65f6\u95f4\u6ca1\u6709\u53d1\u5c04\u6570\u636e\uff0c\u5219\u53d1\u5c04\u9519\u8bef\u901a\u77e5 Timestamp\uff08\u65f6\u95f4\u6233\uff09 \u2014 \u7ed9Observable\u53d1\u5c04\u7684\u6bcf\u4e2a\u6570\u636e\u9879\u6dfb\u52a0\u4e00\u4e2a\u65f6\u95f4\u6233 Using \u2014 \u521b\u5efa\u4e00\u4e2a\u4e0eObservable\u76f8\u540c\u751f\u547d\u5468\u671f\u5185\u5b58\u5728\u7684\u4e00\u6b21\u6027\u8d44\u6e90","title":"\u8f85\u52a9\u64cd\u4f5c"},{"location":"android/%E9%9A%8F%E7%AC%94/RxJava%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%AC%A6/#_8","text":"\u7528\u4e8e\u8bc4\u4f30\uff0c\u5224\u65ad\u4e00\u4e2a\u6216\u591a\u4e2aObservable\u6216Observable\u4e2d\u53d1\u51fa\u7684\u6570\u636e\u9879\u7684\u64cd\u4f5c\u7b26 All \u2014 \u5224\u65adObservable\u53d1\u5c04\u7684\u6240\u6709\u7684\u6570\u636e\u9879\u662f\u5426\u90fd\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6 Amb \u2014 \u7ed9\u5b9a\u4e24\u4e2a\u6216\u8005\u591a\u4e2a\u6e90Observe\uff0c\u53ea\u8ba9\u7b2c\u4e00\u4e2a\u53d1\u51fa\u6570\u636e\u7684Observable\u53d1\u51fa\u5168\u90e8\u6570\u636e Contains \u2014 \u5224\u65adObservable\u662f\u5426\u53d1\u5c04\u6307\u5b9a\u7684\u6570\u636e\u9879 DefaultIfEmpty \u2014 \u53d1\u5c04\u6765\u81ea\u539f\u59cbObservable\u7684\u6570\u636e\uff0c\u5982\u679c\u539f\u59cbObservable\u6ca1\u6709\u53d1\u5c04\u6570\u636e\uff0c\u5c31\u53d1\u5c04\u4e00\u4e2a\u9ed8\u8ba4\u6570\u636e SequenceEqual \u2014 \u5224\u65ad\u4e24\u4e2aObservable\u662f\u5426\u53d1\u51fa\u76f8\u540c\u7684\u6570\u636e\u5e8f\u5217 SkipUntil \u2014 \u4e22\u5f03\u539f\u59cbObservable\u53d1\u5c04\u7684\u6570\u636e\uff0c\u76f4\u5230\u7b2c\u4e8c\u4e2aObservable\u53d1\u5c04\u4e86\u4e00\u4e2a\u6570\u636e\uff0c\u7136\u540e\u53d1\u5c04\u539f\u59cbObservable\u7684\u5269\u4f59\u6570\u636e SkipWhile \u2014 \u4e22\u5f03\u539f\u59cbObservable\u53d1\u5c04\u7684\u6570\u636e\uff0c\u76f4\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u6761\u4ef6\u4e3afalse\uff0c\u7136\u540e\u53d1\u5c04\u539f\u59cbObservable\u5269\u4f59\u7684\u6570\u636e TakeUntil \u2014 \u4e22\u5f03\u5728\u7b2c\u4e8c\u4e2aObservable\u53d1\u51fa\u6570\u636e\u9879\u6216\u7ec8\u6b62\u540e\u7531Observable\u53d1\u51fa\u7684\u6570\u636e\u9879 TakeWhile \u2014 \u4e22\u5f03\u5728\u6307\u5b9a\u6761\u4ef6\u53d8\u4e3afalse\u4e4b\u540e\u7531Observable\u53d1\u51fa\u7684\u9879","title":"\u6761\u4ef6\u548c\u5e03\u5c14\u64cd\u4f5c"},{"location":"android/%E9%9A%8F%E7%AC%94/RxJava%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%AC%A6/#_9","text":"\u5bf9Observable\u53d1\u51fa\u7684\u6574\u4e2a\u5e8f\u5217\u8fdb\u884c\u64cd\u4f5c\u7684\u64cd\u4f5c\u7b26 Average\uff08\u5e73\u5747\u503c\uff09 \u2014 \u8ba1\u7b97Observable\u53d1\u5c04\u7684\u6570\u636e\u5e8f\u5217\u7684\u5e73\u5747\u503c\uff0c\u7136\u540e\u53d1\u5c04\u8fd9\u4e2a\u7ed3\u679c Concat \u2014 \u4e0d\u4ea4\u9519\u7684\u8fde\u63a5\u591a\u4e2aObservable\u7684\u6570\u636e Count\uff08\u6570\u91cf\uff09 \u2014 \u8ba1\u7b97Observable\u53d1\u5c04\u7684\u6570\u636e\u4e2a\u6570\uff0c\u5e76\u53ea\u53d1\u9001\u6b64\u503c Max\uff08\u6700\u5927\u503c\uff09 \u2014 \u8ba1\u7b97\u5e76\u53d1\u5c04\u6570\u636e\u5e8f\u5217\u7684\u6700\u5927\u503c Min\uff08\u6700\u5c0f\u503c\uff09 \u2014 \u8ba1\u7b97\u5e76\u53d1\u5c04\u6570\u636e\u5e8f\u5217\u7684\u6700\u5c0f\u503c Reduce\uff08\u5f52\u7eb3\uff09 \u2014 \u6309\u987a\u5e8f\u5bf9\u6570\u636e\u5e8f\u5217\u7684\u6bcf\u4e00\u4e2a\u5e94\u7528\u67d0\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u8fd4\u56de\u8fd9\u4e2a\u503c Sum\uff08\u603b\u548c\uff09 \u2014 \u8ba1\u7b97\u5e76\u53d1\u5c04\u6570\u636e\u5e8f\u5217\u7684\u548c","title":"\u6570\u5b66\u548c\u805a\u5408\u64cd\u4f5c"},{"location":"android/%E9%9A%8F%E7%AC%94/RxJava%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%AC%A6/#_10","text":"backpressure operators - \u4e3a\u4e86\u5e94\u5bf9\u89c2\u5bdf\u8005\u6d88\u8d39\u4e8b\u4ef6\u6bd4\u88ab\u89c2\u5bdf\u8005\u751f\u4ea7\u4e8b\u4ef6\u66f4\u5feb\uff0c\u6240\u4ee5\u9700\u8981\u80cc\u538b","title":"\u80cc\u538b\u64cd\u4f5c"},{"location":"android/%E9%9A%8F%E7%AC%94/RxJava%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%AC%A6/#_11","text":"\u4e00\u4e9b\u6709\u7cbe\u786e\u53ef\u63a7\u7684\u8ba2\u9605\u884c\u4e3a\u7684\u7279\u6b8aObservable Connect\uff08\u8fde\u63a5\uff09 \u2014 \u6307\u793a\u53ef\u8fde\u63a5\u7684Observable\u5f00\u59cb\u53d1\u9001\u6570\u636e\u7ed9\u8ba2\u9605\u8005 Publish \u2014 \u5c06\u666e\u901a\u7684Observable\u8f6c\u6362\u4e3a\u53ef\u8fde\u63a5\u7684Observable RefCount \u2014 \u4f7f\u4e00\u4e2a\u53ef\u8fde\u63a5\u7684Observable\u8868\u73b0\u5f97\u50cf\u4e00\u4e2a\u666e\u901a\u7684Observable Replay \u2014 \u786e\u4fdd\u6240\u6709\u7684\u89c2\u5bdf\u8005\u6536\u5230\u540c\u6837\u7684\u6570\u636e\u5e8f\u5217\uff0c\u5373\u4f7f\u4ed6\u4eec\u5728Observable\u5f00\u59cb\u53d1\u5c04\u6570\u636e\u4e4b\u540e\u624d\u8ba2\u9605","title":"\u8fde\u63a5\u64cd\u4f5c"},{"location":"android/%E9%9A%8F%E7%AC%94/RxJava%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%AC%A6/#_12","text":"To\uff08\u53d8\u6210\uff09 \u2014 \u5c06Observable\u8f6c\u6362\u4e3a\u5176\u5b83\u7684\u5bf9\u8c61\u6216\u6570\u636e\u7ed3\u6784 Blocking\uff08\u963b\u585e\uff09 \u2014 \u963b\u585eObservable\u7684\u64cd\u4f5c\u7b26","title":"\u8f6c\u6362\u64cd\u4f5c"},{"location":"android/%E9%9A%8F%E7%AC%94/ViewDragHelper%E7%AE%80%E8%A7%A3/","text":"ViewDragHelper\u7b80\u89e3 \u6982\u8ff0 ViewDragHelper\u662f\u4e00\u4e2a\u7528\u4e8e\u7f16\u5199\u81ea\u5b9a\u4e49\u89c6\u56fe\u7ec4\u7684\u5b9e\u7528\u7a0b\u5e8f\u7c7b\u3002\u5b83\u63d0\u4f9b\u4e86\u8bb8\u591a\u6709\u7528\u7684\u64cd\u4f5c\u548c\u72b6\u6001\u8ddf\u8e2a\uff0c\u5141\u8bb8\u7528\u6237\u5728\u5176\u7236\u89c6\u56fe\u7ec4\u4e2d\u62d6\u52a8\u548c\u91cd\u65b0\u5b9a\u4f4d\u89c6\u56fe\u3002\uff08ps:\u6765\u81ea\u5b98\u65b9\u6ce8\u91ca\uff09 \u7b80\u5355\u5165\u95e8 \u521b\u5efaViewDragHelper\u7684\u5b9e\u4f8b \u56de\u8c03\u76f8\u5173\u89e6\u6478\u7684\u65b9\u6cd5 public class DragLayout extends LinearLayout { private ViewDragHelper mViewDragHelper; public DragLayout(Context context) { super(context); } public DragLayout(Context context, AttributeSet attrs) { super(context, attrs); mViewDragHelper = ViewDragHelper.create(this, new ViewDragHelper.Callback() { /** * * @param child \u5f53\u524d\u6355\u83b7\u7684\u5b50view * @param pointerId * @return \u8fd4\u56detrue \u8868\u793a\u53ef\u4ee5\u6355\u83b7\u8be5\u5b50view */ @Override public boolean tryCaptureView(View child, int pointerId) { return true; } /** * \u9ed8\u8ba4\u7684\u5b9e\u73b0\u8fd4\u56de\u7684\u4e3a0\uff0c\u6ca1\u5b9e\u73b0\u6c34\u5e73\u7684\u79fb\u52a8\uff0c * \u6240\u4ee5\u5fc5\u987b\u91cd\u5199\u8be5\u65b9\u6cd5\u5e76\u8fd4\u56de\u6c34\u5e73\u65b9\u5411\u79fb\u52a8\u7684\u4f4d\u7f6e * * @param child \u5373\u5c06\u88ab\u62d6\u52a8\u7684\u5b50view * @param left \u5373\u5c06\u79fb\u52a8\u5230\u5de6\u8fb9\u7684\u4f4d\u7f6e * @param dx \u6c34\u5e73\u65b9\u5411\u79fb\u52a8\u4e86\u7684\u8ddd\u79bb * @return \u6c34\u5e73\u65b9\u5411\u79fb\u52a8\u65b0\u7684left\u503c\uff0c\u53ef\u4ee5\u7528\u6765\u9650\u5236child view\u79fb\u52a8\u7684\u8fb9\u754c\u63a7\u5236 */ @Override public int clampViewPositionHorizontal(View child, int left, int dx) { return left; } /** *\u540c\u4e0a\uff0c\u65b9\u5411\u53d8\u4e3a\u7ad6\u76f4\u65b9\u5411 * * @param child \u540c\u4e0a * @param top \u540c\u4e0a\uff0c\u503c\u53d8\u4e3atop * @param dy \u7ad6\u76f4\u65b9\u5411\u79fb\u52a8\u4e86\u7684\u8ddd\u79bb * @return \u540c\u4e0a\u4e2a\u65b9\u6cd5\uff0c\u503c\u53d8\u6210top */ @Override public int clampViewPositionVertical(View child, int top, int dy) { return top; } }); } @Override public boolean onInterceptTouchEvent(MotionEvent ev) { return mViewDragHelper.shouldInterceptTouchEvent(ev); } @Override public boolean onTouchEvent(MotionEvent event) { mViewDragHelper.processTouchEvent(event); return true; } } \u8fd9\u6837\u5c31\u5f88\u7b80\u5355\u7684\u5b9e\u73b0\u4e86\u51e0\u4e2a\u53ef\u4ee5\u62d6\u52a8\u7684view\uff0c\u5e03\u5c40\u5f88\u7b80\u5355\uff0c\u5c31DragLayout\u91cc\u9762\u653e\u4e863\u4e2aTextView\u5c31\u4e0d\u8d34\u51fa\u6765\u4e86\u3002 \u521b\u5efaViewDragHelper\u7684\u5b9e\u4f8b \u521b\u5efaViewDragHelper\u53ea\u80fd\u7528create\u9759\u6001\u65b9\u6cd5\uff0c\u56e0\u4e3aViewDragHelper\u7684\u6784\u9020\u65b9\u6cd5\u662f\u79c1\u6709\u7684\u3002 ViewDragHelper\u63d0\u4f9b\u4e86\u4e24\u4e2acreate\u9759\u6001\u65b9\u6cd5\uff0c\u4e0a\u9762\u5df2\u7ecf\u51fa\u73b0\u4e86\u4e00\u79cd\uff0c\u8fd8\u6709\u4e00\u4e2a\u5c31\u662f\u52a0\u4e86\u4e00\u4e2asensitivity\u53c2\u6570 public static ViewDragHelper create(ViewGroup forParent, float sensitivity, Callback cb) forParent\uff1a\u76d1\u542c\u7684\u7236ViewGroup sensitivity\uff1a helper\u8bc6\u522b\u62d6\u52a8\u5f00\u59cb\u7684\u654f\u611f\u503c\uff0c\u503c\u8d8a\u5927\u8d8a\u654f\u611f\uff0c\u9ed8\u8ba4\u4e3a1.0f cb\uff1a\u76d1\u542c\u7684\u56de\u8c03 \u56de\u8c03\u7684\u65b9\u6cd5 \u4e0a\u9762\u5df2\u7ecf\u63d0\u5230\u4e863\u79cd\uff0c\u63a5\u4e0b\u6765\u770b\u770b\u8fd8\u6709\u5176\u4ed6\u54ea\u4e9b\u56de\u8c03\u65b9\u6cd5 /** * \u5f53\u62d6\u62fd\u72b6\u6001\u6539\u53d8\u65f6\u56de\u8c03\u8fd9\u4e2a * @param state \u62d6\u62fd\u72b6\u6001 * * @see #STATE_IDLE \u95f2\u7f6e\u72b6\u6001 * @see #STATE_DRAGGING \u6b63\u5728\u88ab\u62d6\u62fd * @see #STATE_SETTLING \u62d6\u62fd\u7ed3\u675f\uff0c\u81ea\u52a8\u6eda\u52a8 */ public void onViewDragStateChanged(int state) {} /** * \u88ab\u6355\u83b7view\u4f4d\u7f6e\u53d1\u751f\u6539\u53d8\u65f6\u5019\u56de\u8c03 */ public void onViewPositionChanged(View changedView, int left, int top, int dx, int dy) {} /** * \u5f53\u88ab\u6355\u83b7\u7684view\u5904\u4e8e\u6b63\u5728\u88ab\u62d6\u62fd\u6216\u8005\u81ea\u52a8\u6eda\u52a8\u7684\u72b6\u6001\u56de\u8c03\u6b64\u65b9\u6cd5 */ public void onViewCaptured(View capturedChild, int activePointerId) {} /** * \u5f53\u88ab\u62d6\u62fd\u7684view\u62d6\u62fd\u7ed3\u675f\u65f6\u56de\u8c03(\u677e\u5f00\u624b\u6307) * @param xvel \u6c34\u5e73\u65b9\u5411\u7684\u901f\u7387 * @param yvel \u7ad6\u76f4\u65b9\u5411\u7684\u901f\u7387 */ public void onViewReleased(View releasedChild, float xvel, float yvel) {} /** * \u5f53\u524d\u6ca1\u6709\u6355\u83b7\u5230\u5b50view\u5e76\u4e14\u7236viewgroup\u88ab\u8ba2\u9605\u7684\u8fb9\u7f18\u88ab\u89e6\u6478\u65f6\u56de\u8c03(\u4e0d\u662f\u5c4f\u5e55\u8fb9\u7f18) */ public void onEdgeTouched(int edgeFlags, int pointerId) {} /** * \u5f53\u7ed9\u5b9a\u7684\u8fb9\u7f18\u53ef\u80fd\u88ab\u9501\u5b9a\u65f6\u8c03\u7528 * * \u8fd4\u56detrue\u9501\u5b9a\u8fb9\u7f18 */ public boolean onEdgeLock(int edgeFlags) { return false; } /** * \u5f53\u524d\u6ca1\u6709\u6355\u83b7\u5230\u5b50view\u5e76\u4e14\u7236viewgroup\u88ab\u8ba2\u9605\u7684\u8fb9\u7f18\u5f00\u59cb\u62d6\u62fd\u65f6\u56de\u8c03 * * @param edgeFlags \u8fb9\u7f18\u6807\u8bb0 * @see #EDGE_LEFT \u5de6 * @see #EDGE_TOP \u4e0a * @see #EDGE_RIGHT \u53f3 * @see #EDGE_BOTTOM \u4e0b */ public void onEdgeDragStarted(int edgeFlags, int pointerId) {} /** * \u8c03\u7528\u6b64\u65b9\u6cd5\u6765\u786e\u5b9a\u5b50\u89c6\u56fe\u7684z\u8f74\u7684\u987a\u5e8f */ public int getOrderedChildIndex(int index) { return index; } /** * \u8fd4\u56de\u53ef\u62d6\u52a8\u5b50view\u6c34\u5e73\u65b9\u5411\u53ef\u79fb\u52a8\u7684\u5927\u5c0f\u8303\u56f4 */ public int getViewHorizontalDragRange(View child) { return 0; } /** * \u8fd4\u56de\u53ef\u62d6\u52a8\u5b50view\u7ad6\u76f4\u65b9\u5411\u53ef\u79fb\u52a8\u7684\u8303\u56f4\u5927\u5c0f */ public int getViewVerticalDragRange(View child) { return 0; } \u4e0a\u9762\u7684\u65b9\u6cd5onEdgeDragStarted\u548conEdgeTouched\u60f3\u8981\u54cd\u5e94\u56de\u8c03\u8fd8\u8981\u5fc5\u987b\u8bbe\u7f6e\u8fb9\u7f18\u8ffd\u8e2a\u53ef\u7528 public void setEdgeTrackingEnabled(int edgeFlags) ViewDragHelperd\u7684\u5176\u4ed6\u65b9\u6cd5 /** * \u5728\u7236\u89c6\u56fe\u7684\u5750\u6807\u7cfb\u7edf\u4e2d\u627e\u5230\u6307\u5b9a\u70b9\u4e0b\u7684\u6700\u9876\u5c42\u7684\u5b50\u8282\u70b9 */ public View findTopChildUnder(int x, int y) /** * \u8fd4\u56de\u5f53\u524d\u88ab\u6355\u83b7\u7684\u5b50view\u6216\u8005\u6ca1\u6709\u5b50view\u88ab\u6355\u83b7\u5219\u8fd4\u56denull */ public View getCapturedView() /** * \u8c03\u7528\u6b64\u65b9\u6cd5\u7684\u7ed3\u679c\u7b49\u540c\u4e8e\u63a5\u6536ACTION_CANCEL\u4e8b\u4ef6 */ public void cancel() /** * \u5185\u90e8\u8c03\u7528\u4e86cancel\u65b9\u6cd5\uff0c\u5e76\u4e14\u4f1a\u505c\u6b62\u6240\u6709\u6b63\u5728\u8fdb\u884c\u7684\u52a8\u4f5c\uff0c\u5305\u62ec\u52a8\u753b */ public void abort() /** * \u6355\u83b7\u7279\u5b9a\u7684\u5b50view */ public void captureChildView(View childView, int activePointerId) /** * \u60ef\u6027\u6ed1\u52a8\u88ab\u6355\u83b7\u7684view */ public void flingCapturedView(int minLeft, int minTop, int maxLeft, int maxTop) /** * \u5e26\u52a8\u753b\u6548\u679c\u7684\u79fb\u52a8view */ public boolean smoothSlideViewTo(View child, int finalLeft, int finalTop) /** * \u5224\u65ad\u5f53\u524d\u88ab\u6355\u83b7\u7684\u5b50View\u662f\u5426\u8fd8\u9700\u8981\u7ee7\u7eed\u79fb\u52a8 */ public boolean continueSettling(boolean deferCallbacks)","title":"ViewDragHelper\u7b80\u89e3"},{"location":"android/%E9%9A%8F%E7%AC%94/ViewDragHelper%E7%AE%80%E8%A7%A3/#viewdraghelper","text":"","title":"ViewDragHelper\u7b80\u89e3"},{"location":"android/%E9%9A%8F%E7%AC%94/ViewDragHelper%E7%AE%80%E8%A7%A3/#_1","text":"ViewDragHelper\u662f\u4e00\u4e2a\u7528\u4e8e\u7f16\u5199\u81ea\u5b9a\u4e49\u89c6\u56fe\u7ec4\u7684\u5b9e\u7528\u7a0b\u5e8f\u7c7b\u3002\u5b83\u63d0\u4f9b\u4e86\u8bb8\u591a\u6709\u7528\u7684\u64cd\u4f5c\u548c\u72b6\u6001\u8ddf\u8e2a\uff0c\u5141\u8bb8\u7528\u6237\u5728\u5176\u7236\u89c6\u56fe\u7ec4\u4e2d\u62d6\u52a8\u548c\u91cd\u65b0\u5b9a\u4f4d\u89c6\u56fe\u3002\uff08ps:\u6765\u81ea\u5b98\u65b9\u6ce8\u91ca\uff09","title":"\u6982\u8ff0"},{"location":"android/%E9%9A%8F%E7%AC%94/ViewDragHelper%E7%AE%80%E8%A7%A3/#_2","text":"\u521b\u5efaViewDragHelper\u7684\u5b9e\u4f8b \u56de\u8c03\u76f8\u5173\u89e6\u6478\u7684\u65b9\u6cd5 public class DragLayout extends LinearLayout { private ViewDragHelper mViewDragHelper; public DragLayout(Context context) { super(context); } public DragLayout(Context context, AttributeSet attrs) { super(context, attrs); mViewDragHelper = ViewDragHelper.create(this, new ViewDragHelper.Callback() { /** * * @param child \u5f53\u524d\u6355\u83b7\u7684\u5b50view * @param pointerId * @return \u8fd4\u56detrue \u8868\u793a\u53ef\u4ee5\u6355\u83b7\u8be5\u5b50view */ @Override public boolean tryCaptureView(View child, int pointerId) { return true; } /** * \u9ed8\u8ba4\u7684\u5b9e\u73b0\u8fd4\u56de\u7684\u4e3a0\uff0c\u6ca1\u5b9e\u73b0\u6c34\u5e73\u7684\u79fb\u52a8\uff0c * \u6240\u4ee5\u5fc5\u987b\u91cd\u5199\u8be5\u65b9\u6cd5\u5e76\u8fd4\u56de\u6c34\u5e73\u65b9\u5411\u79fb\u52a8\u7684\u4f4d\u7f6e * * @param child \u5373\u5c06\u88ab\u62d6\u52a8\u7684\u5b50view * @param left \u5373\u5c06\u79fb\u52a8\u5230\u5de6\u8fb9\u7684\u4f4d\u7f6e * @param dx \u6c34\u5e73\u65b9\u5411\u79fb\u52a8\u4e86\u7684\u8ddd\u79bb * @return \u6c34\u5e73\u65b9\u5411\u79fb\u52a8\u65b0\u7684left\u503c\uff0c\u53ef\u4ee5\u7528\u6765\u9650\u5236child view\u79fb\u52a8\u7684\u8fb9\u754c\u63a7\u5236 */ @Override public int clampViewPositionHorizontal(View child, int left, int dx) { return left; } /** *\u540c\u4e0a\uff0c\u65b9\u5411\u53d8\u4e3a\u7ad6\u76f4\u65b9\u5411 * * @param child \u540c\u4e0a * @param top \u540c\u4e0a\uff0c\u503c\u53d8\u4e3atop * @param dy \u7ad6\u76f4\u65b9\u5411\u79fb\u52a8\u4e86\u7684\u8ddd\u79bb * @return \u540c\u4e0a\u4e2a\u65b9\u6cd5\uff0c\u503c\u53d8\u6210top */ @Override public int clampViewPositionVertical(View child, int top, int dy) { return top; } }); } @Override public boolean onInterceptTouchEvent(MotionEvent ev) { return mViewDragHelper.shouldInterceptTouchEvent(ev); } @Override public boolean onTouchEvent(MotionEvent event) { mViewDragHelper.processTouchEvent(event); return true; } } \u8fd9\u6837\u5c31\u5f88\u7b80\u5355\u7684\u5b9e\u73b0\u4e86\u51e0\u4e2a\u53ef\u4ee5\u62d6\u52a8\u7684view\uff0c\u5e03\u5c40\u5f88\u7b80\u5355\uff0c\u5c31DragLayout\u91cc\u9762\u653e\u4e863\u4e2aTextView\u5c31\u4e0d\u8d34\u51fa\u6765\u4e86\u3002","title":"\u7b80\u5355\u5165\u95e8"},{"location":"android/%E9%9A%8F%E7%AC%94/ViewDragHelper%E7%AE%80%E8%A7%A3/#viewdraghelper_1","text":"\u521b\u5efaViewDragHelper\u53ea\u80fd\u7528create\u9759\u6001\u65b9\u6cd5\uff0c\u56e0\u4e3aViewDragHelper\u7684\u6784\u9020\u65b9\u6cd5\u662f\u79c1\u6709\u7684\u3002 ViewDragHelper\u63d0\u4f9b\u4e86\u4e24\u4e2acreate\u9759\u6001\u65b9\u6cd5\uff0c\u4e0a\u9762\u5df2\u7ecf\u51fa\u73b0\u4e86\u4e00\u79cd\uff0c\u8fd8\u6709\u4e00\u4e2a\u5c31\u662f\u52a0\u4e86\u4e00\u4e2asensitivity\u53c2\u6570 public static ViewDragHelper create(ViewGroup forParent, float sensitivity, Callback cb) forParent\uff1a\u76d1\u542c\u7684\u7236ViewGroup sensitivity\uff1a helper\u8bc6\u522b\u62d6\u52a8\u5f00\u59cb\u7684\u654f\u611f\u503c\uff0c\u503c\u8d8a\u5927\u8d8a\u654f\u611f\uff0c\u9ed8\u8ba4\u4e3a1.0f cb\uff1a\u76d1\u542c\u7684\u56de\u8c03","title":"\u521b\u5efaViewDragHelper\u7684\u5b9e\u4f8b"},{"location":"android/%E9%9A%8F%E7%AC%94/ViewDragHelper%E7%AE%80%E8%A7%A3/#_3","text":"\u4e0a\u9762\u5df2\u7ecf\u63d0\u5230\u4e863\u79cd\uff0c\u63a5\u4e0b\u6765\u770b\u770b\u8fd8\u6709\u5176\u4ed6\u54ea\u4e9b\u56de\u8c03\u65b9\u6cd5 /** * \u5f53\u62d6\u62fd\u72b6\u6001\u6539\u53d8\u65f6\u56de\u8c03\u8fd9\u4e2a * @param state \u62d6\u62fd\u72b6\u6001 * * @see #STATE_IDLE \u95f2\u7f6e\u72b6\u6001 * @see #STATE_DRAGGING \u6b63\u5728\u88ab\u62d6\u62fd * @see #STATE_SETTLING \u62d6\u62fd\u7ed3\u675f\uff0c\u81ea\u52a8\u6eda\u52a8 */ public void onViewDragStateChanged(int state) {} /** * \u88ab\u6355\u83b7view\u4f4d\u7f6e\u53d1\u751f\u6539\u53d8\u65f6\u5019\u56de\u8c03 */ public void onViewPositionChanged(View changedView, int left, int top, int dx, int dy) {} /** * \u5f53\u88ab\u6355\u83b7\u7684view\u5904\u4e8e\u6b63\u5728\u88ab\u62d6\u62fd\u6216\u8005\u81ea\u52a8\u6eda\u52a8\u7684\u72b6\u6001\u56de\u8c03\u6b64\u65b9\u6cd5 */ public void onViewCaptured(View capturedChild, int activePointerId) {} /** * \u5f53\u88ab\u62d6\u62fd\u7684view\u62d6\u62fd\u7ed3\u675f\u65f6\u56de\u8c03(\u677e\u5f00\u624b\u6307) * @param xvel \u6c34\u5e73\u65b9\u5411\u7684\u901f\u7387 * @param yvel \u7ad6\u76f4\u65b9\u5411\u7684\u901f\u7387 */ public void onViewReleased(View releasedChild, float xvel, float yvel) {} /** * \u5f53\u524d\u6ca1\u6709\u6355\u83b7\u5230\u5b50view\u5e76\u4e14\u7236viewgroup\u88ab\u8ba2\u9605\u7684\u8fb9\u7f18\u88ab\u89e6\u6478\u65f6\u56de\u8c03(\u4e0d\u662f\u5c4f\u5e55\u8fb9\u7f18) */ public void onEdgeTouched(int edgeFlags, int pointerId) {} /** * \u5f53\u7ed9\u5b9a\u7684\u8fb9\u7f18\u53ef\u80fd\u88ab\u9501\u5b9a\u65f6\u8c03\u7528 * * \u8fd4\u56detrue\u9501\u5b9a\u8fb9\u7f18 */ public boolean onEdgeLock(int edgeFlags) { return false; } /** * \u5f53\u524d\u6ca1\u6709\u6355\u83b7\u5230\u5b50view\u5e76\u4e14\u7236viewgroup\u88ab\u8ba2\u9605\u7684\u8fb9\u7f18\u5f00\u59cb\u62d6\u62fd\u65f6\u56de\u8c03 * * @param edgeFlags \u8fb9\u7f18\u6807\u8bb0 * @see #EDGE_LEFT \u5de6 * @see #EDGE_TOP \u4e0a * @see #EDGE_RIGHT \u53f3 * @see #EDGE_BOTTOM \u4e0b */ public void onEdgeDragStarted(int edgeFlags, int pointerId) {} /** * \u8c03\u7528\u6b64\u65b9\u6cd5\u6765\u786e\u5b9a\u5b50\u89c6\u56fe\u7684z\u8f74\u7684\u987a\u5e8f */ public int getOrderedChildIndex(int index) { return index; } /** * \u8fd4\u56de\u53ef\u62d6\u52a8\u5b50view\u6c34\u5e73\u65b9\u5411\u53ef\u79fb\u52a8\u7684\u5927\u5c0f\u8303\u56f4 */ public int getViewHorizontalDragRange(View child) { return 0; } /** * \u8fd4\u56de\u53ef\u62d6\u52a8\u5b50view\u7ad6\u76f4\u65b9\u5411\u53ef\u79fb\u52a8\u7684\u8303\u56f4\u5927\u5c0f */ public int getViewVerticalDragRange(View child) { return 0; } \u4e0a\u9762\u7684\u65b9\u6cd5onEdgeDragStarted\u548conEdgeTouched\u60f3\u8981\u54cd\u5e94\u56de\u8c03\u8fd8\u8981\u5fc5\u987b\u8bbe\u7f6e\u8fb9\u7f18\u8ffd\u8e2a\u53ef\u7528 public void setEdgeTrackingEnabled(int edgeFlags)","title":"\u56de\u8c03\u7684\u65b9\u6cd5"},{"location":"android/%E9%9A%8F%E7%AC%94/ViewDragHelper%E7%AE%80%E8%A7%A3/#viewdraghelperd","text":"/** * \u5728\u7236\u89c6\u56fe\u7684\u5750\u6807\u7cfb\u7edf\u4e2d\u627e\u5230\u6307\u5b9a\u70b9\u4e0b\u7684\u6700\u9876\u5c42\u7684\u5b50\u8282\u70b9 */ public View findTopChildUnder(int x, int y) /** * \u8fd4\u56de\u5f53\u524d\u88ab\u6355\u83b7\u7684\u5b50view\u6216\u8005\u6ca1\u6709\u5b50view\u88ab\u6355\u83b7\u5219\u8fd4\u56denull */ public View getCapturedView() /** * \u8c03\u7528\u6b64\u65b9\u6cd5\u7684\u7ed3\u679c\u7b49\u540c\u4e8e\u63a5\u6536ACTION_CANCEL\u4e8b\u4ef6 */ public void cancel() /** * \u5185\u90e8\u8c03\u7528\u4e86cancel\u65b9\u6cd5\uff0c\u5e76\u4e14\u4f1a\u505c\u6b62\u6240\u6709\u6b63\u5728\u8fdb\u884c\u7684\u52a8\u4f5c\uff0c\u5305\u62ec\u52a8\u753b */ public void abort() /** * \u6355\u83b7\u7279\u5b9a\u7684\u5b50view */ public void captureChildView(View childView, int activePointerId) /** * \u60ef\u6027\u6ed1\u52a8\u88ab\u6355\u83b7\u7684view */ public void flingCapturedView(int minLeft, int minTop, int maxLeft, int maxTop) /** * \u5e26\u52a8\u753b\u6548\u679c\u7684\u79fb\u52a8view */ public boolean smoothSlideViewTo(View child, int finalLeft, int finalTop) /** * \u5224\u65ad\u5f53\u524d\u88ab\u6355\u83b7\u7684\u5b50View\u662f\u5426\u8fd8\u9700\u8981\u7ee7\u7eed\u79fb\u52a8 */ public boolean continueSettling(boolean deferCallbacks)","title":"ViewDragHelperd\u7684\u5176\u4ed6\u65b9\u6cd5"},{"location":"android/%E9%9A%8F%E7%AC%94/ViewPagerTransforms%E7%9A%84%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3/","text":"ViewPagerTransforms\u7684\u6df1\u5165\u7406\u89e3 github\u5730\u5740\uff1a https://github.com/simplepeng/ViewPagerTransforms \u6bcf\u5f53viewpager\u4e0a\u4e00\u4e2a\u53ef\u89c1\u6216\u4f9d\u9644\u7684\u9875\u9762\u53d1\u751f\u4e86\u6eda\u52a8\u4e8b\u4ef6\u5c31\u4f1a\u8c03\u7528PageTransformer\uff0c\u8fd9\u8ba9\u5e94\u7528\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49transformation\u8ba9viewpager\u67d0\u4e00\u4e2a\u9875\u9762\u89c6\u56fe\u4e0a\u5b9e\u73b0\u67d0\u4e9b\u7279\u5b9a\u7684\u52a8\u753b\u5c5e\u6027\u3002 \u4f46\u662f\u8fd9\u6837\u7684\u5c5e\u6027\u52a8\u753b\u53ea\u80fd\u652f\u6301\u5230android3.0\u7248\u672c\u6216\u4ee5\u4e0a\uff0c\u5728\u65e9\u671f\u7684\u7248\u672c\u4e0a\u8bbe\u7f6eviewpager\u7684PageTransformer\u4f1a\u88ab\u5ffd\u7565\u3002 \u516c\u6709\u65b9\u6cd5 transformPage \u5e94\u7528\u5c5e\u6027\u52a8\u753b\u5230\u4e00\u4e2a\u6307\u5b9a\u7684\u9875\u9762 void transformPage (View page, float position) \u53c2\u6570 \u89e3\u91ca pager View: \u5e94\u7528\u5207\u6362\u52a8\u753b\u5230\u54ea\u4e00\u4e2a\u9875\u9762\u4e0a position float: position\u8868\u793a\u76f8\u5bf9\u4e8e\u5f53\u524d\u9875\u6b63\u4e2d\u7684\u4f4d\u7f6e\uff0c0\u8868\u793a\u5728\u6b63\u4e2d\u7684\u8fd9\u4e2a\u9875\u9762\uff0c1\u8868\u793a\u53f3\u8fb9\u4e00\u4e2a\u5b8c\u6574\u7684\u9875\u9762\uff0c-1\u8868\u793a\u5de6\u8fb9\u4e00\u4e2a\u5b8c\u6574\u7684\u9875\u9762 \u9996\u5148\u662f\u4e00\u4e2a\u5f88\u5e73\u5e38\u7684viewpager package com.example.simple.pagertransformdemo; public class MainActivity extends AppCompatActivity { private int imgIds[] = {R.drawable.img_1, R.drawable.img_2, R.drawable.img_3}; private List<View> viewList = new ArrayList<>(); @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); for (int i = 0; i < 3; i++) { View rootView = View.inflate(MainActivity.this, R.layout.item_pager, null); ImageView imageView = (ImageView) rootView.findViewById(R.id.pager_iv); imageView.setImageResource(imgIds[i]); TextView textView = (TextView) rootView.findViewById(R.id.pager_tv); textView.setText(String.valueOf(i)); viewList.add(i, rootView); } ViewPager viewPager = (ViewPager) findViewById(R.id.viewPager); viewPager.setAdapter(new MyAdapter()); } private class MyAdapter extends PagerAdapter { @Override public int getCount() { return 3; } @Override public boolean isViewFromObject(View view, Object object) { return view == object; } @Override public Object instantiateItem(ViewGroup container, int position) { container.addView(viewList.get(position)); return viewList.get(position); } @Override public void destroyItem(ViewGroup container, int position, Object object) { container.removeView(viewList.get(position)); } } } <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:tools=\"http://schemas.android.com/tools\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:paddingLeft=\"@dimen/activity_horizontal_margin\" android:paddingRight=\"@dimen/activity_horizontal_margin\" android:paddingTop=\"@dimen/activity_vertical_margin\" android:paddingBottom=\"@dimen/activity_vertical_margin\" tools:context=\"com.example.simple.pagertransformdemo.MainActivity\"> <android.support.v4.view.ViewPager android:id=\"@+id/viewPager\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" /> </RelativeLayout> <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" > <ImageView android:id=\"@+id/pager_iv\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:scaleType=\"fitXY\" /> <TextView android:id=\"@+id/pager_tv\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"xxxx\" android:layout_centerInParent=\"true\" android:textSize=\"20sp\" android:textColor=\"@android:color/holo_red_dark\" /> </RelativeLayout> \u63a5\u7740\u662f\u4e00\u4e2a\u653e\u5927\u8fdb\u5165\u7684viewpager \u6211\u4eec\u591a\u52a0\u4e86\u4e00\u884c\u4ee3\u7801 viewPager.setPageTransformer(true ,new ZoomInTransform()); \u770b\u770b\u8fd9\u8fd9\u53e5\u4ee3\u7801\u7684\u4f5c\u7528 \u53c2\u6570 \u89e3\u91ca reverseDrawingOrder boolean\u503c\uff0ctrue\u8868\u793a\u63d0\u4f9b\u7684PageTransformer\u753bview\u65f6\u662f\u5012\u5e8f\uff0cfalse\u5219\u662f\u6b63\u5e8f transformer \u5c06\u4fee\u6539\u6bcf\u4e00\u9875\u52a8\u753b\u5c5e\u6027\u7684PageTransformer \u770b\u6e90\u7801\u4e5f\u53ef\u4ee5\u5f97\u51fa public void setPageTransformer(boolean reverseDrawingOrder, PageTransformer transformer) { if (Build.VERSION.SDK_INT >= 11) { final boolean hasTransformer = transformer != null; final boolean needsPopulate = hasTransformer != (mPageTransformer != null); mPageTransformer = transformer; setChildrenDrawingOrderEnabledCompat(hasTransformer); if (hasTransformer) { //reverseDrawingOrder\u7b49\u4e8etrue\u65f6\u4e3a\u5012\u5e8f\uff0cfalse\u4e3a\u6b63\u5e8f mDrawingOrder = reverseDrawingOrder ? DRAW_ORDER_REVERSE : DRAW_ORDER_FORWARD; } else { mDrawingOrder = DRAW_ORDER_DEFAULT; } if (needsPopulate) populate(); } } \u5c07 reverseDrawingOrder \u6539\u7232 false \u770b\u770b\u6548\u679c viewPager.setPageTransformer(false ,new ZoomInTransform()); \u518d\u770b\u770bZoomInTransform\u7684\u4ee3\u78bc\u5c31\u4e00\u76ee\u4e86\u7136\u4e86 public class ZoomInTransform implements ViewPager.PageTransformer { public static final String TAG = \"simple_PagerTransform\"; @Override public void transformPage(View page, float position) { int width = page.getWidth(); int height = page.getHeight(); //\u9019\u88cf\u53ea\u5c0d\u53f3\u908a\u7684view\u505a\u4e86\u64cd\u4f5c if (position > 0 && position <= 1) {//right scorlling //position\u662f1.0->0,\u4f46\u662f\u6c92\u6709\u7b49\u65bc0 Log.e(TAG, \"right----position====\" + position); //\u8a2d\u7f6e\u8a72view\u7684X\u8ef8\u4e0d\u52d5 page.setTranslationX(-width * position); //\u8a2d\u7f6e\u7e2e\u653e\u4e2d\u5fc3\u9ede\u5728\u8a72view\u7684\u6b63\u4e2d\u5fc3 page.setPivotX(width / 2); page.setPivotY(height / 2); //\u8a2d\u7f6e\u7e2e\u653e\u6bd4\u4f8b\uff080.0\uff0c1.0] page.setScaleX(1 - position); page.setScaleY(1 - position); } else if (position >= -1 && position < 0) {//left scrolling } else {//center } } } \u6211\u4eec\u8fd8\u53ef\u4ee5\u770b\u770btransformPage\u662f\u600e\u4e48\u4f86\u7684 //\u9019\u662fviewpager\u6e90\u4ee3\u78bc\u7684\u4e00\u90e8\u5206\uff0ctransformPage\u65b9\u6cd5\u7684\u4f86\u6e90 if (mPageTransformer != null) { final int scrollX = getScrollX(); final int childCount = getChildCount(); //\u904d\u5386viewpager\u6240\u6709\u7684\u5b50view for (int i = 0; i < childCount; i++) { final View child = getChildAt(i); final LayoutParams lp = (LayoutParams) child.getLayoutParams(); if (lp.isDecor) continue; //position\u7b49\u65bc\u8a72view\u7684\u5de6\u8d77\u9ede\u6e1b\u53bb\u5728X\u8ef8\u7684\u4f4d\u79fb\u9664\u4ee5viewpager\u7684\u5bec\u5ea6\uff0c\u4e5f\u5c31\u662f\u7b97\u51fa\u771f\u6b63\u7684\u4f4d\u79fb\u6bd4\u4f8b final float transformPos = (float) (child.getLeft() - scrollX) / getClientWidth(); mPageTransformer.transformPage(child, transformPos); } } \u4e0b\u9762\u6765\u4e00\u4e2a\u70ab\u9177\u70b9\u7684\uff0c\u611f\u89c9\u6709\u70b93D\u6548\u679c\u7684\u6837\u5b50 public class SimplePageTransform implements ViewPager.PageTransformer { @Override public void transformPage(View view, float position) { int width = view.getWidth(); int pivotX = 0; if (position <= 1 && position > 0) {// right scrolling pivotX = 0; } else if (position == 0) { } else if (position < 0 && position >= -1) {// left scrolling pivotX = width; } //\u8bbe\u7f6ex\u8f74\u7684\u951a\u70b9 view.setPivotX(pivotX); //\u8bbe\u7f6e\u7ed5Y\u8f74\u65cb\u8f6c\u7684\u89d2\u5ea6 view.setRotationY(90f * position); } } \u6211\u4eec\u518d\u5c06transformPage\u6539\u9020\u4e00\u4e0b @Override public void transformPage(View view, float position) { if (position <= 1 && position > 0) { int hashCode = view.hashCode(); Log.d(TAG,\"right hashCode=\"+hashCode); } else if (position == 0) { int hashCode = view.hashCode(); Log.d(TAG,\"center hashCode=\"+hashCode); } else if (position < 0 && position >= -1) { int hashCode = view.hashCode(); Log.w(TAG,\"left hashCode=\"+hashCode); } } \u770b\u770blog\u4fe1\u606f \u4e0b\u4e00\u9875\u7684view hashcode left hashCode=75472620 right hashCode=55231157 center hashCode=55231157 \u518d\u4e0b\u4e00\u9875\u7684view hashcode left hashCode=55231157 right hashCode=45932420 center hashCode=45932420 \u4e0a\u4e00\u9875\u7684view hashcode left hashCode=55231157 right hashCode=45932420 center hashCode=55231157 \u518d\u4e0a\u4e00\u9875\u7684view hashcode left hashCode=75472620 right hashCode=55231157 center hashCode=75472620 \u7531\u6b64\u4ee5\u53ca\u4e0a\u9762transformPage\u65b9\u6cd5\u7684\u51fa\u5904\u53ef\u5f97\u51fa\u89c4\u5f8b\uff0ctransformPage\u8fd4\u56de\u7684view\u5e76\u4e0d\u662f\u4e00\u4e2a\uff0c\u800c\u662f\u6839\u636e\u76f8\u5e94\u7684position\u7684\u8fd4\u56de\u76f8\u5e94\u7684view\u3002 \u4e5f\u7531\u6b64\u53ef\u4ee5\u63d0\u51faviewpager\u7684\u5750\u6807\u7cfb\uff08ps:\u4e0d\u4f1a\u753b\u56fe\u8bf7\u4e0d\u8981\u6253\u6211\uff09 \u6d45\u84dd\u8272\u4e3aleft view\uff0c\u7ea2\u8272\u4e3acenter view\uff0c\u6df1\u84dd\u8272\u4e3aright view\uff0c\u5f53\u6ed1\u52a8\u4e8b\u4ef6\u5f00\u59cb\uff0c\u4ed6\u4eec\u7684\u5173\u7cfb\u4e5f\u4f1a\u8ddf\u53d8\u5316\uff0c\u6240\u4ee5\u53ef\u5f97\u51fa\u5728[-1,0)\u8fd9\u4e2a\u533a\u95f4\u4e3aleft\uff0c(0\uff0c1]\u8fd9\u4e2a\u533a\u95f4\u4e3aright\uff0c\u53ea\u6709\u5f53\u7b49\u4e8e0\u624d\u4e3acenter\u3002\u5982\u679cviewpager\u91cc\u9762view\u5f88\u591a\u80af\u5b9a\u5c31\u8fd8\u4f1a\u6709-2\uff0c+2\u7b49\u7b49\u7684\u5176\u4ed6\u5750\u6807\u70b9\uff0c\u4f46\u662f\u6211\u4eec\u53ea\u5173\u6ce8left\uff0ccenter\uff0cright\u8fd93\u4e2aview\u4e0a\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5f88\u591a\u70ab\u9177\u7684\u52a8\u753b\u5566\uff01 \u603b\u7ed3 \u7ed9viewpager\u52a0\u52a8\u753b\u5e76\u4e0d\u96be\uff0c\u53ea\u9700\u8981\u5b9e\u73b0PageTransformer\u7c7btransformPage\u7684\u65b9\u6cd5\uff0c\u518d\u5229\u7528\u76f8\u5e94\u7684view\u548cposition\u52a0\u4e0aview\u5c5e\u6027\u52a8\u753b\u5c31\u597d\u5566\uff01 \u800c\u4e14\u8fd8\u53ef\u4ee5\u8bbe\u7f6eview\u5207\u6362\u65f6\u7684\u987a\u5e8f\uff0c\u60f3\u8981\u5b9e\u73b0\u70ab\u9177\u7684\u52a8\u753b\u4e5f\u4e0d\u96be\uff0c\u53ea\u8981\u80af\u52a8\u8111\u3002 transformPage\u8fd4\u56de\u7684view\u5e76\u4e0d\u662f\u4e00\u4e2aview\uff0c\u800c\u662f\u6839\u636eposition\u8fd4\u56de\u76f8\u5e94\u7684view\u3002 transformPage\u8fd4\u56de\u7684view\u7684\u533a\u95f4[-1,0)\u8fd9\u4e2a\u533a\u95f4\u4e3aleft\uff0c(0\uff0c1]\u8fd9\u4e2a\u533a\u95f4\u4e3aright\uff0c\u53ea\u6709\u5f53\u7b49\u4e8e0\u4e3acenter viewpager\u7684PageTransformer\u662f\u57283.0\u4ee5\u540e\u52a0\u7684\u65b0\u7279\u6027 ps:\u5982\u679c\u60f3\u517c\u5bb93.0\u4ee5\u4e0b\u4e5f\u6709\u529e\u6cd5\uff0c\u8981\u4e48\u7528\u53cd\u5c04\uff0c\u8981\u4e48\u5c31\u81ea\u5df1\u81ea\u5b9a\u4e49\u4e00\u4e2aview\u5b9e\u73b0viewpager\u6240\u6709\u529f\u80fd\uff0c\u5176\u5b9eandroid\u5f88\u591a\u517c\u5bb9\u5305\u90fd\u4f1a\u5229\u7528\u53cd\u5c04\u6280\u80fd\u53bb\u517c\u5bb9\u4f4e\u7248\u672c\u65e0\u6cd5\u4f7f\u7528\u65b0\u7279\u6027\u8fd9\u6837\u4e00\u4e2a\u7f3a\u70b9","title":"ViewPagerTransforms\u7684\u6df1\u5165\u7406\u89e3"},{"location":"android/%E9%9A%8F%E7%AC%94/ViewPagerTransforms%E7%9A%84%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3/#viewpagertransforms","text":"github\u5730\u5740\uff1a https://github.com/simplepeng/ViewPagerTransforms \u6bcf\u5f53viewpager\u4e0a\u4e00\u4e2a\u53ef\u89c1\u6216\u4f9d\u9644\u7684\u9875\u9762\u53d1\u751f\u4e86\u6eda\u52a8\u4e8b\u4ef6\u5c31\u4f1a\u8c03\u7528PageTransformer\uff0c\u8fd9\u8ba9\u5e94\u7528\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49transformation\u8ba9viewpager\u67d0\u4e00\u4e2a\u9875\u9762\u89c6\u56fe\u4e0a\u5b9e\u73b0\u67d0\u4e9b\u7279\u5b9a\u7684\u52a8\u753b\u5c5e\u6027\u3002 \u4f46\u662f\u8fd9\u6837\u7684\u5c5e\u6027\u52a8\u753b\u53ea\u80fd\u652f\u6301\u5230android3.0\u7248\u672c\u6216\u4ee5\u4e0a\uff0c\u5728\u65e9\u671f\u7684\u7248\u672c\u4e0a\u8bbe\u7f6eviewpager\u7684PageTransformer\u4f1a\u88ab\u5ffd\u7565\u3002","title":"ViewPagerTransforms\u7684\u6df1\u5165\u7406\u89e3"},{"location":"android/%E9%9A%8F%E7%AC%94/ViewPagerTransforms%E7%9A%84%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3/#_1","text":"transformPage \u5e94\u7528\u5c5e\u6027\u52a8\u753b\u5230\u4e00\u4e2a\u6307\u5b9a\u7684\u9875\u9762 void transformPage (View page, float position) \u53c2\u6570 \u89e3\u91ca pager View: \u5e94\u7528\u5207\u6362\u52a8\u753b\u5230\u54ea\u4e00\u4e2a\u9875\u9762\u4e0a position float: position\u8868\u793a\u76f8\u5bf9\u4e8e\u5f53\u524d\u9875\u6b63\u4e2d\u7684\u4f4d\u7f6e\uff0c0\u8868\u793a\u5728\u6b63\u4e2d\u7684\u8fd9\u4e2a\u9875\u9762\uff0c1\u8868\u793a\u53f3\u8fb9\u4e00\u4e2a\u5b8c\u6574\u7684\u9875\u9762\uff0c-1\u8868\u793a\u5de6\u8fb9\u4e00\u4e2a\u5b8c\u6574\u7684\u9875\u9762","title":"\u516c\u6709\u65b9\u6cd5"},{"location":"android/%E9%9A%8F%E7%AC%94/ViewPagerTransforms%E7%9A%84%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3/#viewpager","text":"package com.example.simple.pagertransformdemo; public class MainActivity extends AppCompatActivity { private int imgIds[] = {R.drawable.img_1, R.drawable.img_2, R.drawable.img_3}; private List<View> viewList = new ArrayList<>(); @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); for (int i = 0; i < 3; i++) { View rootView = View.inflate(MainActivity.this, R.layout.item_pager, null); ImageView imageView = (ImageView) rootView.findViewById(R.id.pager_iv); imageView.setImageResource(imgIds[i]); TextView textView = (TextView) rootView.findViewById(R.id.pager_tv); textView.setText(String.valueOf(i)); viewList.add(i, rootView); } ViewPager viewPager = (ViewPager) findViewById(R.id.viewPager); viewPager.setAdapter(new MyAdapter()); } private class MyAdapter extends PagerAdapter { @Override public int getCount() { return 3; } @Override public boolean isViewFromObject(View view, Object object) { return view == object; } @Override public Object instantiateItem(ViewGroup container, int position) { container.addView(viewList.get(position)); return viewList.get(position); } @Override public void destroyItem(ViewGroup container, int position, Object object) { container.removeView(viewList.get(position)); } } } <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:tools=\"http://schemas.android.com/tools\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:paddingLeft=\"@dimen/activity_horizontal_margin\" android:paddingRight=\"@dimen/activity_horizontal_margin\" android:paddingTop=\"@dimen/activity_vertical_margin\" android:paddingBottom=\"@dimen/activity_vertical_margin\" tools:context=\"com.example.simple.pagertransformdemo.MainActivity\"> <android.support.v4.view.ViewPager android:id=\"@+id/viewPager\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" /> </RelativeLayout> <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" > <ImageView android:id=\"@+id/pager_iv\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:scaleType=\"fitXY\" /> <TextView android:id=\"@+id/pager_tv\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"xxxx\" android:layout_centerInParent=\"true\" android:textSize=\"20sp\" android:textColor=\"@android:color/holo_red_dark\" /> </RelativeLayout>","title":"\u9996\u5148\u662f\u4e00\u4e2a\u5f88\u5e73\u5e38\u7684viewpager"},{"location":"android/%E9%9A%8F%E7%AC%94/ViewPagerTransforms%E7%9A%84%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3/#viewpager_1","text":"\u6211\u4eec\u591a\u52a0\u4e86\u4e00\u884c\u4ee3\u7801 viewPager.setPageTransformer(true ,new ZoomInTransform()); \u770b\u770b\u8fd9\u8fd9\u53e5\u4ee3\u7801\u7684\u4f5c\u7528 \u53c2\u6570 \u89e3\u91ca reverseDrawingOrder boolean\u503c\uff0ctrue\u8868\u793a\u63d0\u4f9b\u7684PageTransformer\u753bview\u65f6\u662f\u5012\u5e8f\uff0cfalse\u5219\u662f\u6b63\u5e8f transformer \u5c06\u4fee\u6539\u6bcf\u4e00\u9875\u52a8\u753b\u5c5e\u6027\u7684PageTransformer \u770b\u6e90\u7801\u4e5f\u53ef\u4ee5\u5f97\u51fa public void setPageTransformer(boolean reverseDrawingOrder, PageTransformer transformer) { if (Build.VERSION.SDK_INT >= 11) { final boolean hasTransformer = transformer != null; final boolean needsPopulate = hasTransformer != (mPageTransformer != null); mPageTransformer = transformer; setChildrenDrawingOrderEnabledCompat(hasTransformer); if (hasTransformer) { //reverseDrawingOrder\u7b49\u4e8etrue\u65f6\u4e3a\u5012\u5e8f\uff0cfalse\u4e3a\u6b63\u5e8f mDrawingOrder = reverseDrawingOrder ? DRAW_ORDER_REVERSE : DRAW_ORDER_FORWARD; } else { mDrawingOrder = DRAW_ORDER_DEFAULT; } if (needsPopulate) populate(); } } \u5c07 reverseDrawingOrder \u6539\u7232 false \u770b\u770b\u6548\u679c viewPager.setPageTransformer(false ,new ZoomInTransform()); \u518d\u770b\u770bZoomInTransform\u7684\u4ee3\u78bc\u5c31\u4e00\u76ee\u4e86\u7136\u4e86 public class ZoomInTransform implements ViewPager.PageTransformer { public static final String TAG = \"simple_PagerTransform\"; @Override public void transformPage(View page, float position) { int width = page.getWidth(); int height = page.getHeight(); //\u9019\u88cf\u53ea\u5c0d\u53f3\u908a\u7684view\u505a\u4e86\u64cd\u4f5c if (position > 0 && position <= 1) {//right scorlling //position\u662f1.0->0,\u4f46\u662f\u6c92\u6709\u7b49\u65bc0 Log.e(TAG, \"right----position====\" + position); //\u8a2d\u7f6e\u8a72view\u7684X\u8ef8\u4e0d\u52d5 page.setTranslationX(-width * position); //\u8a2d\u7f6e\u7e2e\u653e\u4e2d\u5fc3\u9ede\u5728\u8a72view\u7684\u6b63\u4e2d\u5fc3 page.setPivotX(width / 2); page.setPivotY(height / 2); //\u8a2d\u7f6e\u7e2e\u653e\u6bd4\u4f8b\uff080.0\uff0c1.0] page.setScaleX(1 - position); page.setScaleY(1 - position); } else if (position >= -1 && position < 0) {//left scrolling } else {//center } } } \u6211\u4eec\u8fd8\u53ef\u4ee5\u770b\u770btransformPage\u662f\u600e\u4e48\u4f86\u7684 //\u9019\u662fviewpager\u6e90\u4ee3\u78bc\u7684\u4e00\u90e8\u5206\uff0ctransformPage\u65b9\u6cd5\u7684\u4f86\u6e90 if (mPageTransformer != null) { final int scrollX = getScrollX(); final int childCount = getChildCount(); //\u904d\u5386viewpager\u6240\u6709\u7684\u5b50view for (int i = 0; i < childCount; i++) { final View child = getChildAt(i); final LayoutParams lp = (LayoutParams) child.getLayoutParams(); if (lp.isDecor) continue; //position\u7b49\u65bc\u8a72view\u7684\u5de6\u8d77\u9ede\u6e1b\u53bb\u5728X\u8ef8\u7684\u4f4d\u79fb\u9664\u4ee5viewpager\u7684\u5bec\u5ea6\uff0c\u4e5f\u5c31\u662f\u7b97\u51fa\u771f\u6b63\u7684\u4f4d\u79fb\u6bd4\u4f8b final float transformPos = (float) (child.getLeft() - scrollX) / getClientWidth(); mPageTransformer.transformPage(child, transformPos); } }","title":"\u63a5\u7740\u662f\u4e00\u4e2a\u653e\u5927\u8fdb\u5165\u7684viewpager"},{"location":"android/%E9%9A%8F%E7%AC%94/ViewPagerTransforms%E7%9A%84%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3/#3d","text":"public class SimplePageTransform implements ViewPager.PageTransformer { @Override public void transformPage(View view, float position) { int width = view.getWidth(); int pivotX = 0; if (position <= 1 && position > 0) {// right scrolling pivotX = 0; } else if (position == 0) { } else if (position < 0 && position >= -1) {// left scrolling pivotX = width; } //\u8bbe\u7f6ex\u8f74\u7684\u951a\u70b9 view.setPivotX(pivotX); //\u8bbe\u7f6e\u7ed5Y\u8f74\u65cb\u8f6c\u7684\u89d2\u5ea6 view.setRotationY(90f * position); } }","title":"\u4e0b\u9762\u6765\u4e00\u4e2a\u70ab\u9177\u70b9\u7684\uff0c\u611f\u89c9\u6709\u70b93D\u6548\u679c\u7684\u6837\u5b50"},{"location":"android/%E9%9A%8F%E7%AC%94/ViewPagerTransforms%E7%9A%84%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3/#transformpage","text":"@Override public void transformPage(View view, float position) { if (position <= 1 && position > 0) { int hashCode = view.hashCode(); Log.d(TAG,\"right hashCode=\"+hashCode); } else if (position == 0) { int hashCode = view.hashCode(); Log.d(TAG,\"center hashCode=\"+hashCode); } else if (position < 0 && position >= -1) { int hashCode = view.hashCode(); Log.w(TAG,\"left hashCode=\"+hashCode); } } \u770b\u770blog\u4fe1\u606f \u4e0b\u4e00\u9875\u7684view hashcode left hashCode=75472620 right hashCode=55231157 center hashCode=55231157 \u518d\u4e0b\u4e00\u9875\u7684view hashcode left hashCode=55231157 right hashCode=45932420 center hashCode=45932420 \u4e0a\u4e00\u9875\u7684view hashcode left hashCode=55231157 right hashCode=45932420 center hashCode=55231157 \u518d\u4e0a\u4e00\u9875\u7684view hashcode left hashCode=75472620 right hashCode=55231157 center hashCode=75472620 \u7531\u6b64\u4ee5\u53ca\u4e0a\u9762transformPage\u65b9\u6cd5\u7684\u51fa\u5904\u53ef\u5f97\u51fa\u89c4\u5f8b\uff0ctransformPage\u8fd4\u56de\u7684view\u5e76\u4e0d\u662f\u4e00\u4e2a\uff0c\u800c\u662f\u6839\u636e\u76f8\u5e94\u7684position\u7684\u8fd4\u56de\u76f8\u5e94\u7684view\u3002 \u4e5f\u7531\u6b64\u53ef\u4ee5\u63d0\u51faviewpager\u7684\u5750\u6807\u7cfb\uff08ps:\u4e0d\u4f1a\u753b\u56fe\u8bf7\u4e0d\u8981\u6253\u6211\uff09 \u6d45\u84dd\u8272\u4e3aleft view\uff0c\u7ea2\u8272\u4e3acenter view\uff0c\u6df1\u84dd\u8272\u4e3aright view\uff0c\u5f53\u6ed1\u52a8\u4e8b\u4ef6\u5f00\u59cb\uff0c\u4ed6\u4eec\u7684\u5173\u7cfb\u4e5f\u4f1a\u8ddf\u53d8\u5316\uff0c\u6240\u4ee5\u53ef\u5f97\u51fa\u5728[-1,0)\u8fd9\u4e2a\u533a\u95f4\u4e3aleft\uff0c(0\uff0c1]\u8fd9\u4e2a\u533a\u95f4\u4e3aright\uff0c\u53ea\u6709\u5f53\u7b49\u4e8e0\u624d\u4e3acenter\u3002\u5982\u679cviewpager\u91cc\u9762view\u5f88\u591a\u80af\u5b9a\u5c31\u8fd8\u4f1a\u6709-2\uff0c+2\u7b49\u7b49\u7684\u5176\u4ed6\u5750\u6807\u70b9\uff0c\u4f46\u662f\u6211\u4eec\u53ea\u5173\u6ce8left\uff0ccenter\uff0cright\u8fd93\u4e2aview\u4e0a\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5f88\u591a\u70ab\u9177\u7684\u52a8\u753b\u5566\uff01","title":"\u6211\u4eec\u518d\u5c06transformPage\u6539\u9020\u4e00\u4e0b"},{"location":"android/%E9%9A%8F%E7%AC%94/ViewPagerTransforms%E7%9A%84%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3/#_2","text":"\u7ed9viewpager\u52a0\u52a8\u753b\u5e76\u4e0d\u96be\uff0c\u53ea\u9700\u8981\u5b9e\u73b0PageTransformer\u7c7btransformPage\u7684\u65b9\u6cd5\uff0c\u518d\u5229\u7528\u76f8\u5e94\u7684view\u548cposition\u52a0\u4e0aview\u5c5e\u6027\u52a8\u753b\u5c31\u597d\u5566\uff01 \u800c\u4e14\u8fd8\u53ef\u4ee5\u8bbe\u7f6eview\u5207\u6362\u65f6\u7684\u987a\u5e8f\uff0c\u60f3\u8981\u5b9e\u73b0\u70ab\u9177\u7684\u52a8\u753b\u4e5f\u4e0d\u96be\uff0c\u53ea\u8981\u80af\u52a8\u8111\u3002 transformPage\u8fd4\u56de\u7684view\u5e76\u4e0d\u662f\u4e00\u4e2aview\uff0c\u800c\u662f\u6839\u636eposition\u8fd4\u56de\u76f8\u5e94\u7684view\u3002 transformPage\u8fd4\u56de\u7684view\u7684\u533a\u95f4[-1,0)\u8fd9\u4e2a\u533a\u95f4\u4e3aleft\uff0c(0\uff0c1]\u8fd9\u4e2a\u533a\u95f4\u4e3aright\uff0c\u53ea\u6709\u5f53\u7b49\u4e8e0\u4e3acenter viewpager\u7684PageTransformer\u662f\u57283.0\u4ee5\u540e\u52a0\u7684\u65b0\u7279\u6027 ps:\u5982\u679c\u60f3\u517c\u5bb93.0\u4ee5\u4e0b\u4e5f\u6709\u529e\u6cd5\uff0c\u8981\u4e48\u7528\u53cd\u5c04\uff0c\u8981\u4e48\u5c31\u81ea\u5df1\u81ea\u5b9a\u4e49\u4e00\u4e2aview\u5b9e\u73b0viewpager\u6240\u6709\u529f\u80fd\uff0c\u5176\u5b9eandroid\u5f88\u591a\u517c\u5bb9\u5305\u90fd\u4f1a\u5229\u7528\u53cd\u5c04\u6280\u80fd\u53bb\u517c\u5bb9\u4f4e\u7248\u672c\u65e0\u6cd5\u4f7f\u7528\u65b0\u7279\u6027\u8fd9\u6837\u4e00\u4e2a\u7f3a\u70b9","title":"\u603b\u7ed3"},{"location":"android/%E9%9A%8F%E7%AC%94/%5B%E8%AF%91%5D%E4%BB%8EJava%E5%88%87%E6%8D%A2%E5%88%B0Kotlin%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7/","text":"[\u8bd1]\u4eceJava\u5207\u6362\u5230Kotlin\u7684\u65b0\u7279\u6027 1.\u547d\u540d\u53c2\u6570 \u6bcf\u4e2aJava\u5f00\u53d1\u8005\u7684\u5669\u68a6\uff1a\u5927\u91cf\u7684\u53c2\u6570\uff08\u4f8b\u5982\u5728Cursors\u6216Android\u4e2d\u521b\u5efaSQLite\u67e5\u8be2\uff09\uff0c\u5b83\u4eec\u7684\u540d\u5b57\u548c\u65b9\u6cd5\u5b9a\u4e49\u4e2d\u7684\u987a\u5e8f\u3002\u5982\u679c\u6ca1\u6709\u6587\u6863\u6216IDE\u5e2e\u52a9\uff0c\u60a8\u65e0\u6cd5\u5728Java\u4e2d\u6b63\u786e\u7f16\u5199\u5b83 @Override public Loader<Cursor> onCreateLoader(int i, Bundle bundle) { return new CursorLoader(this, CONTENT_URI, proj, null, null, null); } \u5e78\u8fd0\u7684\u662f\uff0cAndroid Studio\u56e2\u961f\u6dfb\u52a0\u4e86\u6709\u7528\u7684\u529f\u80fd\uff0c\u7a81\u51fa\u663e\u793a\u4e86\u4f20\u9012\u7ed9\u8fd9\u79cd\u529f\u80fd\u7684\u53c2\u6570\u7684\u540d\u79f0\u3002\u4f46\u662f\uff0cKotlin\u5728\u6ca1\u6709IDE\u5e2e\u52a9\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u540c\u6837\u7684\u6548\u679c\u4e5f\u5f88\u5bb9\u6613 2.\u6570\u636e\u7c7b \u5bf9Kotlin\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u662fJava\u7f16\u7a0b\u4eba\u5458\u6700\u6709\u7528\uff0c\u6700\u201c\u58ee\u89c2\u201d\u7684\u9009\u62e9\u4e4b\u4e00\u3002\u6570\u636e\u7c7b\u4f7f\u6bcf\u4e2a\u5f00\u53d1\u4eba\u5458\u7684\u751f\u6d3b\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\uff0c\u56e0\u4e3a\u5b83\u4ec5\u7528\u4e00\u884c\u4ee3\u7801\u8868\u793a\u6211\u4eec\u5fc3\u7231\u7684POJO\u7c7b Java\uff1a public class Person { private final String name; private final int age; public Person(String name, int age) { this.name = name; this.age = age; } public String getName() { return name; } public int getAge() { return age; } } Kotlin data class Person(val name: String, val age: Int) \u8fd9\u91cc\u505a\u4e86\u4ec0\u4e48\uff1f\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u4ece\u4e3b\u6784\u9020\u51fd\u6570\u4e2d\u58f0\u660e\u7684\u6240\u6709\u5c5e\u6027\u4e2d\u6d3e\u751f\u4e0b\u5217\u6210\u5458\uff1a Any\u7c7b\u7684\u6807\u51c6\u65b9\u6cd5\uff08\u76f8\u5f53\u4e8eJava\u4e2d\u7684Object\uff09\uff1aequals\uff08\uff09\uff0chashCode\uff08\uff09\uff0ccopy\uff08\uff09 toString() \u5f62\u5f0f\u4e3a Person(name=Micha\u0142, age=22) \u4e0d\u518d\u9700\u8981getter\uff0csetter\uff0c\u76f4\u63a5\u4f7f\u7528\u5bf9\u8c61\u5c5e\u6027 \u5b83\u6709\u52a9\u4e8e\u6446\u8131\u6211\u4eec\u901a\u5e38\u4e0d\u60f3\u7ef4\u62a4\u7684\u6837\u677f\u4ee3\u7801 - \u5728Kotlin\u4e2d\uff0c\u7f16\u8bd1\u5668\u4e3a\u6211\u4eec\u505a\u4e86\u3002\u4ece\u73b0\u5728\u8d77\uff0c\u6211\u4eec\u53ef\u4ee5\u5173\u6ce8\u5e94\u7528\u7a0b\u5e8f\u7684\u5b9e\u9645\u529f\u80fd\uff0c\u800c\u4e0d\u662f\u4e00\u6b21\u53c8\u4e00\u6b21\u91cd\u590d\u76f8\u540c\u7684\u4ee3\u7801 3.\u7a7a\u5b89\u5168\u548c\u5b89\u5168\u7684\u8c03\u7528 Kotlin\u7684\u4e3b\u8981\u76ee\u6807\u4e4b\u4e00\u662f\u6e05\u9664\u7a7a\u5f15\u7528\u5f02\u5e38\u3002\u5b83\u4ecd\u7136\u63d0\u4f9b\u53ef\u7a7a\u7684\u7c7b\u578b\uff0c\u4f46\u4ec5\u9650\u4e8e\u4e0eJava\u4ee3\u7801\u5b8c\u5168\u534f\u4f5c\u3002\u9ed8\u8ba4\u7684Kotlin\u7c7b\u578b\u662f\u975e\u7a7a\u7684\uff0c\u5982\u679c\u60a8\u8bd5\u56fe\u5c06\u5b83\u4eec\u6807\u8bb0\u4e3anull\uff0c\u5b83\u4e0d\u4f1a\u8ba9\u60a8\u7f16\u8bd1\u901a\u8fc7\u3002 var bundle : Bundle = null //won't compile var bundle : Bundle? = null //nullable type, it compiles Java\u4e2d\u7684\u5178\u578b\u60c5\u51b5: public void sendMessage(@Nullable Person person, @NotNull Mailer mailer, String message) { if (person == null || message == null) return; PersonalInfo personalInfo = person.getPersonalInfo(); if (personalInfo == null) return; String email = personalInfo.getEmail(); if (email == null) return; mailer.sendMessage(email, message); } \u540c\u6837\u7684\u60c5\u51b5\u5728Kotlin\u4e2d\uff1a fun sendMessage(person: Person?, mailer: Mailer, String message){ val email = client?.personalInfo?.email if (email != null && message != null) { mailer.sendMessage(email, message) } } \u7a7a\u68c0\u67e5\u8ba9\u6211\u4eec\u5199\u66f4\u5c11\u7684\u4ee3\u7801\uff0c\u4f7f\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u66f4\u597d\u5730\u5de5\u4f5c\uff0c\u800c\u4e14\u4f7f\u5b83\u770b\u8d77\u6765\u66f4\u597d\u3002\u8fd9\u4e0d\u662f\u5f88\u68d2\u5417? 4.\u62d3\u5c55\u5c5e\u6027 \u5f53\u6211\u6bcf\u6b21\u9700\u8981\u5220\u9664\u91cd\u590d\u7684\u8f6c\u6362\u65f6\uff0c\u6269\u5c55\u5c5e\u6027\u90fd\u53ef\u4ee5\u5e2e\u52a9\u5230\u6211\uff0c\u4f20\u7edf\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u80fd\u5199\u51fa\u5982\u4e0b\u4ee3\u7801\uff1a var myBigDecimal = 26 as BigDecimal var otherBigDecimal : BigDecimal = myBigDecimal \u6240\u4ee5\u8ba9\u6211\u4eec\u7528\u6269\u5c55\u5c5e\u6027\u4ee3\u66ff\u4e0a\u9762\u7684\u4ee3\u7801 val Int.bd : BigDecimal get() = BigDecimal(this) \u5728\u6211\u4eec\u6269\u5c55Int\u7c7b\u540e\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u6211\u4eec\u7684Ints\u8f6c\u6362\u4e3aBigDecimals,\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u5b8c\u5168\u76f8\u540c: var myBigDecimal = 26.bd var otherBigDecimal : BigDecimal = myBigDecimal \u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u6240\u6709\u5de5\u4f5c\uff0c\u65e0\u9700\u4ece\u7c7b\u7ee7\u627f\u6216\u4f7f\u7528\u4efb\u4f55\u7c7b\u578b\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u4f8b\u5982\u88c5\u9970\u5668\u3002 Kotlin\u63d0\u4f9b\u4e86\u4ee5\u5feb\u901f\u548c\u7b80\u5355\u7684\u65b9\u5f0f\u4f7f\u7528\u65b0\u529f\u80fd\u6269\u5c55\u8bfe\u7a0b\u7684\u529f\u80fd\u3002 5.\u667a\u80fd\u8f6c\u6362 \u5f53\u6d89\u53ca\u7c7b\u578b\u8f6c\u6362\u65f6\uff0cKotlin\u5c06\u8868\u73b0\u5f97\u5341\u5206\u667a\u80fd fun demo(x: Any) { if (x is String) { print(x.length) // x is automatically cast to String } } \u5173\u952e\u5b57 is \u76f8\u5f53\u4e8eJava\u4e2d\u7684 instanceof\uff0c\u4f46\u5b83\u5177\u6709\u81ea\u5df1\u7684\u5f3a\u5927\u529f\u80fd\u3002\u7f16\u8bd1\u5668\u68c0\u67e5if\u58f0\u660e\u4e2d\u7684\u5bf9\u8c61\u5c5e\u4e8e\u54ea\u79cd\u5b9e\u4f8b\uff0c\u7136\u540e\u8f6c\u6362if\u4ee3\u7801\u5757\u4e2d\u7684\u5b9e\u4f8b\u5c5e\u6027 when (x) { is Int -> print(x + 1) is String -> print(x.length + 1) is IntArray -> print(x.sum()) } \u539f\u6587\u94fe\u63a5","title":"[\u8bd1]\u4eceJava\u5207\u6362\u5230Kotlin\u7684\u65b0\u7279\u6027"},{"location":"android/%E9%9A%8F%E7%AC%94/%5B%E8%AF%91%5D%E4%BB%8EJava%E5%88%87%E6%8D%A2%E5%88%B0Kotlin%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7/#javakotlin","text":"","title":"[\u8bd1]\u4eceJava\u5207\u6362\u5230Kotlin\u7684\u65b0\u7279\u6027"},{"location":"android/%E9%9A%8F%E7%AC%94/%5B%E8%AF%91%5D%E4%BB%8EJava%E5%88%87%E6%8D%A2%E5%88%B0Kotlin%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7/#1","text":"\u6bcf\u4e2aJava\u5f00\u53d1\u8005\u7684\u5669\u68a6\uff1a\u5927\u91cf\u7684\u53c2\u6570\uff08\u4f8b\u5982\u5728Cursors\u6216Android\u4e2d\u521b\u5efaSQLite\u67e5\u8be2\uff09\uff0c\u5b83\u4eec\u7684\u540d\u5b57\u548c\u65b9\u6cd5\u5b9a\u4e49\u4e2d\u7684\u987a\u5e8f\u3002\u5982\u679c\u6ca1\u6709\u6587\u6863\u6216IDE\u5e2e\u52a9\uff0c\u60a8\u65e0\u6cd5\u5728Java\u4e2d\u6b63\u786e\u7f16\u5199\u5b83 @Override public Loader<Cursor> onCreateLoader(int i, Bundle bundle) { return new CursorLoader(this, CONTENT_URI, proj, null, null, null); } \u5e78\u8fd0\u7684\u662f\uff0cAndroid Studio\u56e2\u961f\u6dfb\u52a0\u4e86\u6709\u7528\u7684\u529f\u80fd\uff0c\u7a81\u51fa\u663e\u793a\u4e86\u4f20\u9012\u7ed9\u8fd9\u79cd\u529f\u80fd\u7684\u53c2\u6570\u7684\u540d\u79f0\u3002\u4f46\u662f\uff0cKotlin\u5728\u6ca1\u6709IDE\u5e2e\u52a9\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u540c\u6837\u7684\u6548\u679c\u4e5f\u5f88\u5bb9\u6613","title":"1.\u547d\u540d\u53c2\u6570"},{"location":"android/%E9%9A%8F%E7%AC%94/%5B%E8%AF%91%5D%E4%BB%8EJava%E5%88%87%E6%8D%A2%E5%88%B0Kotlin%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7/#2","text":"\u5bf9Kotlin\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u662fJava\u7f16\u7a0b\u4eba\u5458\u6700\u6709\u7528\uff0c\u6700\u201c\u58ee\u89c2\u201d\u7684\u9009\u62e9\u4e4b\u4e00\u3002\u6570\u636e\u7c7b\u4f7f\u6bcf\u4e2a\u5f00\u53d1\u4eba\u5458\u7684\u751f\u6d3b\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\uff0c\u56e0\u4e3a\u5b83\u4ec5\u7528\u4e00\u884c\u4ee3\u7801\u8868\u793a\u6211\u4eec\u5fc3\u7231\u7684POJO\u7c7b Java\uff1a public class Person { private final String name; private final int age; public Person(String name, int age) { this.name = name; this.age = age; } public String getName() { return name; } public int getAge() { return age; } } Kotlin data class Person(val name: String, val age: Int) \u8fd9\u91cc\u505a\u4e86\u4ec0\u4e48\uff1f\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u4ece\u4e3b\u6784\u9020\u51fd\u6570\u4e2d\u58f0\u660e\u7684\u6240\u6709\u5c5e\u6027\u4e2d\u6d3e\u751f\u4e0b\u5217\u6210\u5458\uff1a Any\u7c7b\u7684\u6807\u51c6\u65b9\u6cd5\uff08\u76f8\u5f53\u4e8eJava\u4e2d\u7684Object\uff09\uff1aequals\uff08\uff09\uff0chashCode\uff08\uff09\uff0ccopy\uff08\uff09 toString() \u5f62\u5f0f\u4e3a Person(name=Micha\u0142, age=22) \u4e0d\u518d\u9700\u8981getter\uff0csetter\uff0c\u76f4\u63a5\u4f7f\u7528\u5bf9\u8c61\u5c5e\u6027 \u5b83\u6709\u52a9\u4e8e\u6446\u8131\u6211\u4eec\u901a\u5e38\u4e0d\u60f3\u7ef4\u62a4\u7684\u6837\u677f\u4ee3\u7801 - \u5728Kotlin\u4e2d\uff0c\u7f16\u8bd1\u5668\u4e3a\u6211\u4eec\u505a\u4e86\u3002\u4ece\u73b0\u5728\u8d77\uff0c\u6211\u4eec\u53ef\u4ee5\u5173\u6ce8\u5e94\u7528\u7a0b\u5e8f\u7684\u5b9e\u9645\u529f\u80fd\uff0c\u800c\u4e0d\u662f\u4e00\u6b21\u53c8\u4e00\u6b21\u91cd\u590d\u76f8\u540c\u7684\u4ee3\u7801","title":"2.\u6570\u636e\u7c7b"},{"location":"android/%E9%9A%8F%E7%AC%94/%5B%E8%AF%91%5D%E4%BB%8EJava%E5%88%87%E6%8D%A2%E5%88%B0Kotlin%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7/#3","text":"Kotlin\u7684\u4e3b\u8981\u76ee\u6807\u4e4b\u4e00\u662f\u6e05\u9664\u7a7a\u5f15\u7528\u5f02\u5e38\u3002\u5b83\u4ecd\u7136\u63d0\u4f9b\u53ef\u7a7a\u7684\u7c7b\u578b\uff0c\u4f46\u4ec5\u9650\u4e8e\u4e0eJava\u4ee3\u7801\u5b8c\u5168\u534f\u4f5c\u3002\u9ed8\u8ba4\u7684Kotlin\u7c7b\u578b\u662f\u975e\u7a7a\u7684\uff0c\u5982\u679c\u60a8\u8bd5\u56fe\u5c06\u5b83\u4eec\u6807\u8bb0\u4e3anull\uff0c\u5b83\u4e0d\u4f1a\u8ba9\u60a8\u7f16\u8bd1\u901a\u8fc7\u3002 var bundle : Bundle = null //won't compile var bundle : Bundle? = null //nullable type, it compiles Java\u4e2d\u7684\u5178\u578b\u60c5\u51b5: public void sendMessage(@Nullable Person person, @NotNull Mailer mailer, String message) { if (person == null || message == null) return; PersonalInfo personalInfo = person.getPersonalInfo(); if (personalInfo == null) return; String email = personalInfo.getEmail(); if (email == null) return; mailer.sendMessage(email, message); } \u540c\u6837\u7684\u60c5\u51b5\u5728Kotlin\u4e2d\uff1a fun sendMessage(person: Person?, mailer: Mailer, String message){ val email = client?.personalInfo?.email if (email != null && message != null) { mailer.sendMessage(email, message) } } \u7a7a\u68c0\u67e5\u8ba9\u6211\u4eec\u5199\u66f4\u5c11\u7684\u4ee3\u7801\uff0c\u4f7f\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u66f4\u597d\u5730\u5de5\u4f5c\uff0c\u800c\u4e14\u4f7f\u5b83\u770b\u8d77\u6765\u66f4\u597d\u3002\u8fd9\u4e0d\u662f\u5f88\u68d2\u5417?","title":"3.\u7a7a\u5b89\u5168\u548c\u5b89\u5168\u7684\u8c03\u7528"},{"location":"android/%E9%9A%8F%E7%AC%94/%5B%E8%AF%91%5D%E4%BB%8EJava%E5%88%87%E6%8D%A2%E5%88%B0Kotlin%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7/#4","text":"\u5f53\u6211\u6bcf\u6b21\u9700\u8981\u5220\u9664\u91cd\u590d\u7684\u8f6c\u6362\u65f6\uff0c\u6269\u5c55\u5c5e\u6027\u90fd\u53ef\u4ee5\u5e2e\u52a9\u5230\u6211\uff0c\u4f20\u7edf\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u80fd\u5199\u51fa\u5982\u4e0b\u4ee3\u7801\uff1a var myBigDecimal = 26 as BigDecimal var otherBigDecimal : BigDecimal = myBigDecimal \u6240\u4ee5\u8ba9\u6211\u4eec\u7528\u6269\u5c55\u5c5e\u6027\u4ee3\u66ff\u4e0a\u9762\u7684\u4ee3\u7801 val Int.bd : BigDecimal get() = BigDecimal(this) \u5728\u6211\u4eec\u6269\u5c55Int\u7c7b\u540e\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u6211\u4eec\u7684Ints\u8f6c\u6362\u4e3aBigDecimals,\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u5b8c\u5168\u76f8\u540c: var myBigDecimal = 26.bd var otherBigDecimal : BigDecimal = myBigDecimal \u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u6240\u6709\u5de5\u4f5c\uff0c\u65e0\u9700\u4ece\u7c7b\u7ee7\u627f\u6216\u4f7f\u7528\u4efb\u4f55\u7c7b\u578b\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u4f8b\u5982\u88c5\u9970\u5668\u3002 Kotlin\u63d0\u4f9b\u4e86\u4ee5\u5feb\u901f\u548c\u7b80\u5355\u7684\u65b9\u5f0f\u4f7f\u7528\u65b0\u529f\u80fd\u6269\u5c55\u8bfe\u7a0b\u7684\u529f\u80fd\u3002","title":"4.\u62d3\u5c55\u5c5e\u6027"},{"location":"android/%E9%9A%8F%E7%AC%94/%5B%E8%AF%91%5D%E4%BB%8EJava%E5%88%87%E6%8D%A2%E5%88%B0Kotlin%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7/#5","text":"\u5f53\u6d89\u53ca\u7c7b\u578b\u8f6c\u6362\u65f6\uff0cKotlin\u5c06\u8868\u73b0\u5f97\u5341\u5206\u667a\u80fd fun demo(x: Any) { if (x is String) { print(x.length) // x is automatically cast to String } } \u5173\u952e\u5b57 is \u76f8\u5f53\u4e8eJava\u4e2d\u7684 instanceof\uff0c\u4f46\u5b83\u5177\u6709\u81ea\u5df1\u7684\u5f3a\u5927\u529f\u80fd\u3002\u7f16\u8bd1\u5668\u68c0\u67e5if\u58f0\u660e\u4e2d\u7684\u5bf9\u8c61\u5c5e\u4e8e\u54ea\u79cd\u5b9e\u4f8b\uff0c\u7136\u540e\u8f6c\u6362if\u4ee3\u7801\u5757\u4e2d\u7684\u5b9e\u4f8b\u5c5e\u6027 when (x) { is Int -> print(x + 1) is String -> print(x.length + 1) is IntArray -> print(x.sum()) } \u539f\u6587\u94fe\u63a5","title":"5.\u667a\u80fd\u8f6c\u6362"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BC%98%E5%8C%96%E5%B5%8C%E5%A5%97%E7%9A%84RecyclerView/","text":"[\u8bd1]\u4f18\u5316\u5d4c\u5957\u7684RecyclerView RecyclerView\u662fListView\u7684\u66f4\u9ad8\u7ea7\u7248\u672c\uff0c\u5b83\u91cd\u7528\u76f8\u540c\u7684\u89c6\u56fe\u4ee5\u9632\u6b62\u989d\u5916\u521b\u5efa\u89c6\u56fe\u4ee5\u63d0\u4f9b\u5e73\u6ed1\u7684\u6eda\u52a8\u4f53\u9a8c\u3002RecyclerView\u901a\u8fc7\u4fdd\u6301\u89c6\u56fe\u6c60\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u8be5\u89c6\u56fe\u6c60\u5305\u542b\u4e0d\u518d\u53ef\u89c1\u5e76\u4e14\u53ef\u4ee5\u56de\u6536\u7684\u89c6\u56fe\u3002 \u6709\u65f6\u6211\u4eec\u9700\u8981\u5d4c\u5957RecyclerView\u6765\u521b\u5efa\u4e00\u4e9b\u5e03\u5c40\u3002\u8003\u8651\u5728\u5782\u76f4\u65b9\u5411RecyclerView\u5185\u90e8\u6709\u6c34\u5e73RecyclerView\u7684\u60c5\u51b5\u3002 \u5728\u4e0a\u56fe\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u53ef\u4ee5\u6c34\u5e73\u6eda\u52a8\u7684\u5782\u76f4RecyclerView\uff0c\u8fd9\u662f\u901a\u8fc7\u5728\u53e6\u4e00\u4e2arecyclerView\u4e2d\u653e\u7f6erecyclerView\u6765\u5b9e\u73b0\u7684\u3002 \u5f53\u7528\u6237\u5411\u4fa7\u9762\u6ed1\u52a8\u65f6\uff0c\u5185\u90e8RecyclerView\u53ef\u4ee5\u56de\u6536\u89c6\u56fe\u5e76\u4e3a\u60a8\u63d0\u4f9b\u5e73\u6ed1\u6eda\u52a8\u3002\u4f46\u662f\uff0c\u5f53\u7528\u6237\u5782\u76f4\u6eda\u52a8\u65f6\uff0c\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002\u5185\u90e8RecyclerView\u7684\u6bcf\u4e2a\u89c6\u56fe\u90fd\u4f1a\u518d\u6b21inflate\uff0c\u8fd9\u662f\u56e0\u4e3a\u6bcf\u4e2a\u5d4c\u5957\u7684RecyclerView\u90fd\u6709\u4e00\u4e2a\u81ea\u5df1\u7684\u89c6\u56fe\u6c60\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e3a\u6240\u6709\u5185\u90e8RecyclerView\u8bbe\u7f6e\u5355\u4e2a\u89c6\u56fe\u6c60\u6765\u89e3\u51b3\u6b64\u95ee\u9898\u3002 RecyclerView.setRecycledViewPool(RecycledViewPool) \u5141\u8bb8\u4f60\u53ef\u4ee5\u7ed9RecyclerVIew\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7684\u89c6\u56fe\u6c60\uff0c\u4ee3\u7801\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a public OuterRecyclerViewAdapter(List<Item> items) { //Constructor stuff viewPool = new RecyclerView.RecycledViewPool(); } @Override public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) { //Create viewHolder etc holder.innerRecyclerView.setRecycledViewPool(viewPool); } \u6240\u4ee5\uff0c\u73b0\u5728\u6240\u6709\u7684\u5185\u90e8RecyclerView\u90fd\u6709\u76f8\u540c\u7684\u89c6\u56fe\u6c60\uff0c\u5b83\u53ef\u4ee5\u4f7f\u7528\u5f7c\u6b64\u7684\u89c6\u56fe\u3002\u8fd9\u4f7f\u5f97\u89c6\u56fe\u521b\u5efa\u66f4\u5c11\uff0c\u6eda\u52a8\u6027\u80fd\u66f4\u597d\u3002 \u539f\u6587\u94fe\u63a5","title":"[\u8bd1]\u4f18\u5316\u5d4c\u5957\u7684RecyclerView"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BC%98%E5%8C%96%E5%B5%8C%E5%A5%97%E7%9A%84RecyclerView/#recyclerview","text":"RecyclerView\u662fListView\u7684\u66f4\u9ad8\u7ea7\u7248\u672c\uff0c\u5b83\u91cd\u7528\u76f8\u540c\u7684\u89c6\u56fe\u4ee5\u9632\u6b62\u989d\u5916\u521b\u5efa\u89c6\u56fe\u4ee5\u63d0\u4f9b\u5e73\u6ed1\u7684\u6eda\u52a8\u4f53\u9a8c\u3002RecyclerView\u901a\u8fc7\u4fdd\u6301\u89c6\u56fe\u6c60\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u8be5\u89c6\u56fe\u6c60\u5305\u542b\u4e0d\u518d\u53ef\u89c1\u5e76\u4e14\u53ef\u4ee5\u56de\u6536\u7684\u89c6\u56fe\u3002 \u6709\u65f6\u6211\u4eec\u9700\u8981\u5d4c\u5957RecyclerView\u6765\u521b\u5efa\u4e00\u4e9b\u5e03\u5c40\u3002\u8003\u8651\u5728\u5782\u76f4\u65b9\u5411RecyclerView\u5185\u90e8\u6709\u6c34\u5e73RecyclerView\u7684\u60c5\u51b5\u3002 \u5728\u4e0a\u56fe\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u53ef\u4ee5\u6c34\u5e73\u6eda\u52a8\u7684\u5782\u76f4RecyclerView\uff0c\u8fd9\u662f\u901a\u8fc7\u5728\u53e6\u4e00\u4e2arecyclerView\u4e2d\u653e\u7f6erecyclerView\u6765\u5b9e\u73b0\u7684\u3002 \u5f53\u7528\u6237\u5411\u4fa7\u9762\u6ed1\u52a8\u65f6\uff0c\u5185\u90e8RecyclerView\u53ef\u4ee5\u56de\u6536\u89c6\u56fe\u5e76\u4e3a\u60a8\u63d0\u4f9b\u5e73\u6ed1\u6eda\u52a8\u3002\u4f46\u662f\uff0c\u5f53\u7528\u6237\u5782\u76f4\u6eda\u52a8\u65f6\uff0c\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002\u5185\u90e8RecyclerView\u7684\u6bcf\u4e2a\u89c6\u56fe\u90fd\u4f1a\u518d\u6b21inflate\uff0c\u8fd9\u662f\u56e0\u4e3a\u6bcf\u4e2a\u5d4c\u5957\u7684RecyclerView\u90fd\u6709\u4e00\u4e2a\u81ea\u5df1\u7684\u89c6\u56fe\u6c60\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e3a\u6240\u6709\u5185\u90e8RecyclerView\u8bbe\u7f6e\u5355\u4e2a\u89c6\u56fe\u6c60\u6765\u89e3\u51b3\u6b64\u95ee\u9898\u3002 RecyclerView.setRecycledViewPool(RecycledViewPool) \u5141\u8bb8\u4f60\u53ef\u4ee5\u7ed9RecyclerVIew\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7684\u89c6\u56fe\u6c60\uff0c\u4ee3\u7801\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a public OuterRecyclerViewAdapter(List<Item> items) { //Constructor stuff viewPool = new RecyclerView.RecycledViewPool(); } @Override public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) { //Create viewHolder etc holder.innerRecyclerView.setRecycledViewPool(viewPool); } \u6240\u4ee5\uff0c\u73b0\u5728\u6240\u6709\u7684\u5185\u90e8RecyclerView\u90fd\u6709\u76f8\u540c\u7684\u89c6\u56fe\u6c60\uff0c\u5b83\u53ef\u4ee5\u4f7f\u7528\u5f7c\u6b64\u7684\u89c6\u56fe\u3002\u8fd9\u4f7f\u5f97\u89c6\u56fe\u521b\u5efa\u66f4\u5c11\uff0c\u6eda\u52a8\u6027\u80fd\u66f4\u597d\u3002 \u539f\u6587\u94fe\u63a5","title":"[\u8bd1]\u4f18\u5316\u5d4c\u5957\u7684RecyclerView"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Gradle%E5%92%8CKotlin%E7%BB%84%E7%BB%87Android%E7%9A%84%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6/","text":"\u4f7f\u7528Gradle\u548cKotlin\u7ec4\u7ec7\u8d44\u6e90\u6587\u4ef6 \u5982\u679c\u60a8\u5df2\u7ecf\u5f00\u53d1\u4e863\u5e74\u62164\u5e74\u7684App\u5e94\u7528\u7a0b\u5e8f\uff0c\u90a3\u4e48\u60a8\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u8d44\u6e90\u6587\u4ef6\u5939\u662f\u5982\u4f55\u53d8\u5f97\u6df7\u4e71\u4e0d\u582a\u7684\u3002\u5c3d\u7ba1\u5927\u591a\u6570\u5f00\u53d1\u4eba\u5458\u4f1a\u4e13\u6ce8\u4e8e\u7ec4\u7ec7\u4ed6\u4eec\u7684Java / Kotlin\u6587\u4ef6\uff08\u901a\u8fc7\u529f\u80fd\u6216\u5c4f\u5e55\uff09\uff0c\u4f46\u8d44\u6e90\u6587\u4ef6\u901a\u5e38\u65e0\u4eba\u770b\u7ba1\u3002 \u5c1d\u8bd5\u51cf\u5c11\u6df7\u4e71\u7684\u4e00\u4e2a\u5c1d\u8bd5\u662f\u4f7f\u7528\u6587\u4ef6\u7684\u547d\u540d\u7ea6\u5b9a\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u4e9b\u4f7f\u7528\u7684\u5e03\u5c40\u6587\u4ef6\u4e2d\uff1a activity_*.xml fragment_*.xml item_*.xml \u6216\u8005\uff1a feature1_screen1_activity.xml feature1_screen2_fragment.xml feature2_activity.xml \u867d\u7136\u8fd9\u786e\u4fdd\u4e86Android Studio\u4e2d\u7684\u6587\u4ef6\u5217\u8868\u662f\u76f8\u5173\u7684\uff0c\u4f46\u968f\u7740\u9879\u76ee\u7684\u589e\u957f\uff0c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff1a\u5927\u91cf\u7684\uff08\u4ee5\u67d0\u79cd\u65b9\u5f0f\u6392\u5e8f\u6216\u547d\u540d\u7684\uff09\u6587\u4ef6\u3002 \u76ee\u5f55 \u4e00\u4e2a\u4e0d\u9519\u7684\u65b9\u6cd5\u662f\u5b9e\u9645\u4e0a\u6309\u7167\u7ec4\u7ec7Java / Kotlin\u6587\u4ef6\u7684\u903b\u8f91\u65b9\u5f0f\u7ec4\u7ec7\u8d44\u6e90\u3002\u5982\u679c\u6211\u4eec\u6709\u8fd9\u6837\u7684\u7ed3\u6784\uff1a \u76f8\u5e94\u5730\uff0c\u8d44\u6e90\u5982\u4e0b\u6240\u793a\uff1a \u4e3a\u4e86\u5b9e\u73b0\u8fd9\u79cd\u6548\u679c\uff1a \u5728AS\u4e2d\u5207\u6362\u5230\u9879\u76ee\u89c6\u56fe \u53f3\u952e\u70b9\u51fb \u4e3b\u6587\u4ef6\u5939 \u5e76\u6dfb\u52a0\u4e00\u4e2a \u76ee\u5f55 \u3002\u6211\u4eec\u5c06\u5176\u79f0\u4e3a res-features \u3002 \u6dfb\u52a0\u529f\u80fd\u540d\u79f0 metal \u7684\u53e6\u4e00\u4e2a\u76ee\u5f55\u3002 \u6700\u540e\uff0c\u4e3a\u6bcf\u4e2a\u5c4f\u5e55\u6dfb\u52a0\u5c3d\u53ef\u80fd\u591a\u7684\u76ee\u5f55\u3002 \u5728\u6bcf\u4e2a\u5c4f\u5e55\u76ee\u5f55\u5185\uff0c\u6dfb\u52a0\u6807\u51c6\u7684Android\u8d44\u6e90\u6587\u4ef6\u5939\uff0c\u8fd9\u4e9b\u6587\u4ef6\u5939\u4ee5\u524d\u662f\u5728\u539f\u59cb\u7684 res \u6587\u4ef6\u5939\u4e2d\uff0c\u6bd4\u5982 layout \uff0c drawable-xhdpi \uff0c values ... \u5982\u679c\u6709\u591a\u4e2a\u5c4f\u5e55\u4f7f\u7528\u8d44\u6e90\uff0c\u8bf7\u5c06\u5b83\u4eec\u4fdd\u5b58\u5728\u7236\u76ee\u5f55\u4e2d\u3002\u4f8b\u5982\uff0cmetal \u7279\u5f81\u7684\u5b57\u7b26\u4e32\u88ab\u5206\u7ec4\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u5e76\u4e14\u5176\u5185\u5bb9\u88ab\u6240\u6709\u7684metal \u5c4f\u5e55\u4f7f\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5b83\u653e\u5728\u7236\u6587\u4ef6\u4e2d\uff1a Gradle \u8bbe\u7f6e \u6211\u4eec\u9700\u8981\u8ba9Android Studio\u67e5\u627e\u65b0\u7684\u76ee\u5f55\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684\u201cres\u201d\u4e0b\u6765\u67e5\u627e\u8d44\u6e90\u6587\u4ef6\u3002\u4e3a\u6b64\uff0c\u8bf7\u8f6c\u5230build.gradle\u6587\u4ef6\u5e76\u627e\u5230\u5bf9\u5e94\u6bcf\u4e2a\u5c4f\u5e55\u7684 sourceSet \u548c \u76ee\u5f55\uff1a \u5c3d\u7ba1\u5982\u6b64\uff0c\u5982\u679c\u9879\u76ee\u5b58\u5728\u591a\u4e2amodule\uff0c\u8fd9\u8fd8\u662f\u4f1a\u53d8\u5f97\u65e0\u6bd4\u81c3\u80bf\u548c\u4e11\u964b\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u62bd\u53d6\u4e3a\u516c\u7528\u7684\u6587\u4ef6 \u62bd\u53d6\uff1a\u65b9\u6cd51\uff08\u6240\u6709Gradle\uff09 \u5982\u679c\u6211\u4eec\u5c06\u8fd9\u4e9b\u76ee\u5f55\u89e3\u538b\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\u5462\uff1f Gradle\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u4f7f\u8fd9\u770b\u8d77\u6765\u66f4\u6574\u6d01\u3002 \u8f6c\u5230module\u7684\u6839\u76ee\u5f55\u3002 \u6dfb\u52a0\u65b0\u7684\u76ee\u5f55\uff0c\u79f0\u4e4b\u4e3a resourcessystem \u6dfb\u52a0\u65b0\u7684\u65b0\u6587\u4ef6\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u5176\u79f0\u4e3a metalresources.gradle ext { metaldirs = [ \"src/main/res-features/metal\", \"src/main/res-features/metal/benefits\", \"src/main/res-features/metal/benefits/list\", \"src/main/res-features/metal/benefits/details\", \"src/main/res-features/metal/claims\", \"src/main/res-features/metal/claims/list\", \"src/main/res-features/metal/claims/details\", \"src/main/res-features/metal/membership\", \"src/main/res-features/metal/upgrade\"] } \u5728build.gradle\u6587\u4ef6\u4e2d\u6dfb\u52a0: apply from: 'resourcessystem/metalresources.gradle' def metalResources = rootProject.ext.metaldirs \u6700\u540e\uff0c\u5728 sourceSets \u4e2d sourceSets { main { .... res.srcDirs = metalResources } } \u62bd\u53d6\uff1a\u65b9\u6cd52\uff08Grdle+Kotlin\uff09 \u66f4\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u8fd9\u4e9b\u76ee\u5f55\u7528\u5355\u72ec\u7684Kotlin\u5b57\u7b26\u4e32\u6570\u7ec4\u5206\u7ec4\u3002\u6bcf\u4e2a\u6570\u7ec4\u4ee3\u8868\u4e00\u4e2a\u529f\u80fd\u3002 \u5728\u9879\u76ee\u6839\u76ee\u5f55\u6dfb\u52a0 buildSrc \u76ee\u5f55 \u5728 buildSrc \u91cc\u9762\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a build.gradle.kts \u7684\u6587\u4ef6\uff0c\u5e76\u5728\u5176\u4e2d\u542f\u7528kotlin\u63d2\u4ef6\u5e76\u8fdb\u884c\u540c\u6b65\uff1a import org.gradle.kotlin.dsl.`kotlin-dsl` plugins { `kotlin-dsl` } \u6dfb\u52a0\u76ee\u5f55 src > main > java> resources \u5185\u90e8\u8d44\u6e90\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684Kotlin\u5bf9\u8c61\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u5177\u6709\u8be5\u529f\u80fd\u8d44\u6e90\u7684\u4e00\u4e2a\u6570\u7ec4\u5217\u8868 package resources object Metal { val dirs = arrayListOf( \"src/main/res-features/metal\", \"src/main/res-features/metal/benefits\", \"src/main/res-features/metal/benefits/list\", \"src/main/res-features/metal/benefits/details\", \"src/main/res-features/metal/claims\", \"src/main/res-features/metal/claims/list\", \"src/main/res-features/metal/claims/details\", \"src/main/res-features/metal/membership\" ) } \u5bf9\u6bcf\u4e2a\u529f\u80fd\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u4ee5\u4fdd\u6301\u6587\u4ef6\u7684\u7cbe\u7b80\u548c\u76f8\u5173\u6027 \u5728 build.gradle\u4e2d \uff0c\u5f15\u7528\u6bcf\u4e2a\u6587\u4ef6\u7684\u6240\u6709 \u76ee\u5f55 \u6765\u66ff\u6362\u76ee\u5f55 import resources.* sourceSets { ..... res.srcDirs = Metal.dirs + Savings.dirs + Insurance.dirs } } \u6700\u540e \u4f60\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a res-common \u76ee\u5f55\u7ed9\u6240\u6709\u901a\u7528\u7684layout\u662f\uff0cdrawables\uff0cvalues\u2026\u5b83\u4e0eres-features\u5177\u6709\u76f8\u540c\u7684\u7ea7\u522b \u5982\u679c\u60a8\u6253\u7b97\u901a\u8fc7\u529f\u80fd\u6a21\u5757\u5316\u60a8\u7684\u9879\u76ee\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u597d\u7684\u5f00\u59cb\u3002\u5f53\u60a8\u5f00\u59cb\u6a21\u5757\u5316\u65f6\uff0c\u60a8\u53ea\u9700\u5c06\u6bcf\u4e2a\u529f\u80fd\u6587\u4ef6\u5939\u590d\u5236\u5230\u6a21\u5757\u4e2d\u3002 \u539f\u6587\u94fe\u63a5","title":"\u4f7f\u7528Gradle\u548cKotlin\u7ec4\u7ec7\u8d44\u6e90\u6587\u4ef6"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Gradle%E5%92%8CKotlin%E7%BB%84%E7%BB%87Android%E7%9A%84%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6/#gradlekotlin","text":"\u5982\u679c\u60a8\u5df2\u7ecf\u5f00\u53d1\u4e863\u5e74\u62164\u5e74\u7684App\u5e94\u7528\u7a0b\u5e8f\uff0c\u90a3\u4e48\u60a8\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u8d44\u6e90\u6587\u4ef6\u5939\u662f\u5982\u4f55\u53d8\u5f97\u6df7\u4e71\u4e0d\u582a\u7684\u3002\u5c3d\u7ba1\u5927\u591a\u6570\u5f00\u53d1\u4eba\u5458\u4f1a\u4e13\u6ce8\u4e8e\u7ec4\u7ec7\u4ed6\u4eec\u7684Java / Kotlin\u6587\u4ef6\uff08\u901a\u8fc7\u529f\u80fd\u6216\u5c4f\u5e55\uff09\uff0c\u4f46\u8d44\u6e90\u6587\u4ef6\u901a\u5e38\u65e0\u4eba\u770b\u7ba1\u3002 \u5c1d\u8bd5\u51cf\u5c11\u6df7\u4e71\u7684\u4e00\u4e2a\u5c1d\u8bd5\u662f\u4f7f\u7528\u6587\u4ef6\u7684\u547d\u540d\u7ea6\u5b9a\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u4e9b\u4f7f\u7528\u7684\u5e03\u5c40\u6587\u4ef6\u4e2d\uff1a activity_*.xml fragment_*.xml item_*.xml \u6216\u8005\uff1a feature1_screen1_activity.xml feature1_screen2_fragment.xml feature2_activity.xml \u867d\u7136\u8fd9\u786e\u4fdd\u4e86Android Studio\u4e2d\u7684\u6587\u4ef6\u5217\u8868\u662f\u76f8\u5173\u7684\uff0c\u4f46\u968f\u7740\u9879\u76ee\u7684\u589e\u957f\uff0c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff1a\u5927\u91cf\u7684\uff08\u4ee5\u67d0\u79cd\u65b9\u5f0f\u6392\u5e8f\u6216\u547d\u540d\u7684\uff09\u6587\u4ef6\u3002","title":"\u4f7f\u7528Gradle\u548cKotlin\u7ec4\u7ec7\u8d44\u6e90\u6587\u4ef6"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Gradle%E5%92%8CKotlin%E7%BB%84%E7%BB%87Android%E7%9A%84%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6/#_1","text":"\u4e00\u4e2a\u4e0d\u9519\u7684\u65b9\u6cd5\u662f\u5b9e\u9645\u4e0a\u6309\u7167\u7ec4\u7ec7Java / Kotlin\u6587\u4ef6\u7684\u903b\u8f91\u65b9\u5f0f\u7ec4\u7ec7\u8d44\u6e90\u3002\u5982\u679c\u6211\u4eec\u6709\u8fd9\u6837\u7684\u7ed3\u6784\uff1a \u76f8\u5e94\u5730\uff0c\u8d44\u6e90\u5982\u4e0b\u6240\u793a\uff1a \u4e3a\u4e86\u5b9e\u73b0\u8fd9\u79cd\u6548\u679c\uff1a \u5728AS\u4e2d\u5207\u6362\u5230\u9879\u76ee\u89c6\u56fe \u53f3\u952e\u70b9\u51fb \u4e3b\u6587\u4ef6\u5939 \u5e76\u6dfb\u52a0\u4e00\u4e2a \u76ee\u5f55 \u3002\u6211\u4eec\u5c06\u5176\u79f0\u4e3a res-features \u3002 \u6dfb\u52a0\u529f\u80fd\u540d\u79f0 metal \u7684\u53e6\u4e00\u4e2a\u76ee\u5f55\u3002 \u6700\u540e\uff0c\u4e3a\u6bcf\u4e2a\u5c4f\u5e55\u6dfb\u52a0\u5c3d\u53ef\u80fd\u591a\u7684\u76ee\u5f55\u3002 \u5728\u6bcf\u4e2a\u5c4f\u5e55\u76ee\u5f55\u5185\uff0c\u6dfb\u52a0\u6807\u51c6\u7684Android\u8d44\u6e90\u6587\u4ef6\u5939\uff0c\u8fd9\u4e9b\u6587\u4ef6\u5939\u4ee5\u524d\u662f\u5728\u539f\u59cb\u7684 res \u6587\u4ef6\u5939\u4e2d\uff0c\u6bd4\u5982 layout \uff0c drawable-xhdpi \uff0c values ... \u5982\u679c\u6709\u591a\u4e2a\u5c4f\u5e55\u4f7f\u7528\u8d44\u6e90\uff0c\u8bf7\u5c06\u5b83\u4eec\u4fdd\u5b58\u5728\u7236\u76ee\u5f55\u4e2d\u3002\u4f8b\u5982\uff0cmetal \u7279\u5f81\u7684\u5b57\u7b26\u4e32\u88ab\u5206\u7ec4\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u5e76\u4e14\u5176\u5185\u5bb9\u88ab\u6240\u6709\u7684metal \u5c4f\u5e55\u4f7f\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5b83\u653e\u5728\u7236\u6587\u4ef6\u4e2d\uff1a","title":"\u76ee\u5f55"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Gradle%E5%92%8CKotlin%E7%BB%84%E7%BB%87Android%E7%9A%84%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6/#gradle","text":"\u6211\u4eec\u9700\u8981\u8ba9Android Studio\u67e5\u627e\u65b0\u7684\u76ee\u5f55\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684\u201cres\u201d\u4e0b\u6765\u67e5\u627e\u8d44\u6e90\u6587\u4ef6\u3002\u4e3a\u6b64\uff0c\u8bf7\u8f6c\u5230build.gradle\u6587\u4ef6\u5e76\u627e\u5230\u5bf9\u5e94\u6bcf\u4e2a\u5c4f\u5e55\u7684 sourceSet \u548c \u76ee\u5f55\uff1a \u5c3d\u7ba1\u5982\u6b64\uff0c\u5982\u679c\u9879\u76ee\u5b58\u5728\u591a\u4e2amodule\uff0c\u8fd9\u8fd8\u662f\u4f1a\u53d8\u5f97\u65e0\u6bd4\u81c3\u80bf\u548c\u4e11\u964b\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u62bd\u53d6\u4e3a\u516c\u7528\u7684\u6587\u4ef6","title":"Gradle \u8bbe\u7f6e"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Gradle%E5%92%8CKotlin%E7%BB%84%E7%BB%87Android%E7%9A%84%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6/#1gradle","text":"\u5982\u679c\u6211\u4eec\u5c06\u8fd9\u4e9b\u76ee\u5f55\u89e3\u538b\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\u5462\uff1f Gradle\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u4f7f\u8fd9\u770b\u8d77\u6765\u66f4\u6574\u6d01\u3002 \u8f6c\u5230module\u7684\u6839\u76ee\u5f55\u3002 \u6dfb\u52a0\u65b0\u7684\u76ee\u5f55\uff0c\u79f0\u4e4b\u4e3a resourcessystem \u6dfb\u52a0\u65b0\u7684\u65b0\u6587\u4ef6\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u5176\u79f0\u4e3a metalresources.gradle ext { metaldirs = [ \"src/main/res-features/metal\", \"src/main/res-features/metal/benefits\", \"src/main/res-features/metal/benefits/list\", \"src/main/res-features/metal/benefits/details\", \"src/main/res-features/metal/claims\", \"src/main/res-features/metal/claims/list\", \"src/main/res-features/metal/claims/details\", \"src/main/res-features/metal/membership\", \"src/main/res-features/metal/upgrade\"] } \u5728build.gradle\u6587\u4ef6\u4e2d\u6dfb\u52a0: apply from: 'resourcessystem/metalresources.gradle' def metalResources = rootProject.ext.metaldirs \u6700\u540e\uff0c\u5728 sourceSets \u4e2d sourceSets { main { .... res.srcDirs = metalResources } }","title":"\u62bd\u53d6\uff1a\u65b9\u6cd51\uff08\u6240\u6709Gradle\uff09"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Gradle%E5%92%8CKotlin%E7%BB%84%E7%BB%87Android%E7%9A%84%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6/#2grdlekotlin","text":"\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u8fd9\u4e9b\u76ee\u5f55\u7528\u5355\u72ec\u7684Kotlin\u5b57\u7b26\u4e32\u6570\u7ec4\u5206\u7ec4\u3002\u6bcf\u4e2a\u6570\u7ec4\u4ee3\u8868\u4e00\u4e2a\u529f\u80fd\u3002 \u5728\u9879\u76ee\u6839\u76ee\u5f55\u6dfb\u52a0 buildSrc \u76ee\u5f55 \u5728 buildSrc \u91cc\u9762\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a build.gradle.kts \u7684\u6587\u4ef6\uff0c\u5e76\u5728\u5176\u4e2d\u542f\u7528kotlin\u63d2\u4ef6\u5e76\u8fdb\u884c\u540c\u6b65\uff1a import org.gradle.kotlin.dsl.`kotlin-dsl` plugins { `kotlin-dsl` } \u6dfb\u52a0\u76ee\u5f55 src > main > java> resources \u5185\u90e8\u8d44\u6e90\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684Kotlin\u5bf9\u8c61\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u5177\u6709\u8be5\u529f\u80fd\u8d44\u6e90\u7684\u4e00\u4e2a\u6570\u7ec4\u5217\u8868 package resources object Metal { val dirs = arrayListOf( \"src/main/res-features/metal\", \"src/main/res-features/metal/benefits\", \"src/main/res-features/metal/benefits/list\", \"src/main/res-features/metal/benefits/details\", \"src/main/res-features/metal/claims\", \"src/main/res-features/metal/claims/list\", \"src/main/res-features/metal/claims/details\", \"src/main/res-features/metal/membership\" ) } \u5bf9\u6bcf\u4e2a\u529f\u80fd\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u4ee5\u4fdd\u6301\u6587\u4ef6\u7684\u7cbe\u7b80\u548c\u76f8\u5173\u6027 \u5728 build.gradle\u4e2d \uff0c\u5f15\u7528\u6bcf\u4e2a\u6587\u4ef6\u7684\u6240\u6709 \u76ee\u5f55 \u6765\u66ff\u6362\u76ee\u5f55 import resources.* sourceSets { ..... res.srcDirs = Metal.dirs + Savings.dirs + Insurance.dirs } }","title":"\u62bd\u53d6\uff1a\u65b9\u6cd52\uff08Grdle+Kotlin\uff09"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Gradle%E5%92%8CKotlin%E7%BB%84%E7%BB%87Android%E7%9A%84%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6/#_2","text":"\u4f60\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a res-common \u76ee\u5f55\u7ed9\u6240\u6709\u901a\u7528\u7684layout\u662f\uff0cdrawables\uff0cvalues\u2026\u5b83\u4e0eres-features\u5177\u6709\u76f8\u540c\u7684\u7ea7\u522b \u5982\u679c\u60a8\u6253\u7b97\u901a\u8fc7\u529f\u80fd\u6a21\u5757\u5316\u60a8\u7684\u9879\u76ee\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u597d\u7684\u5f00\u59cb\u3002\u5f53\u60a8\u5f00\u59cb\u6a21\u5757\u5316\u65f6\uff0c\u60a8\u53ea\u9700\u5c06\u6bcf\u4e2a\u529f\u80fd\u6587\u4ef6\u5939\u590d\u5236\u5230\u6a21\u5757\u4e2d\u3002 \u539f\u6587\u94fe\u63a5","title":"\u6700\u540e"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Parcelize%E6%B3%A8%E8%A7%A3%E7%AE%80%E5%8C%96Parcelable/","text":"\u4f7f\u7528Parcelize\u6ce8\u89e3\u7b80\u5316Parcelable Parcelize\u6ce8\u89e3 kotlin\u57281.1.4\u7248\u672c\u589e\u52a0\u4e86\u5bf9parcelable\u7684\u652f\u6301 Android\u6269\u5c55\u63d2\u4ef6\u73b0\u5728\u5305\u542b\u4e00\u4e2a\u5b9e\u73b0\u4e86Parcelable\u7684\u81ea\u52a8\u751f\u6210\u5668\u3002\u5728\u4e3b\u6784\u9020\u51fd\u6570\u4e2d\u58f0\u660e\u5e8f\u5217\u5316\u7684\u5c5e\u6027\u5e76\u6dfb\u52a0\u4e00\u4e2a@Parcelize\u6ce8\u89e3\uff0c\u751f\u6210\u5668\u5c31\u4f1a\u81ea\u52a8\u521b\u5efawriteToParcel\uff08\uff09/ createFromParcel\uff08\uff09\u65b9\u6cd5 \u9700\u6c42\u73af\u5883 Kotlin\u7248\u672c\u4e3a1.1.4\u6216\u8005\u66f4\u9ad8 \u5f00\u59cb\u4f7f\u7528 \u5728build.gradle\u4e2d\u6dfb\u52a0\u652f\u6301 apply plugin: \u2018kotlin-android-extensions\u2019 .... androidExtensions { experimental = true } \u5b9e\u4f53\u7c7b Student.kt @Parcelize data class Student(val id: String, val name: String, val grade: String) : Parcelable \u5bf9\u6bd4Java\u5b9e\u4f53\u7c7b Student.java public class Student implements Parcelable{ private String id; private String name; private String grade; // Constructor public Student(String id, String name, String grade){ this.id = id; this.name = name; this.grade = grade; } // Getter and setter methods ......... ......... // Parcelling part public Student(Parcel in){ String[] data = new String[3]; in.readStringArray(data); // the order needs to be the same as in writeToParcel() method this.id = data[0]; this.name = data[1]; this.grade = data[2]; } @\u041everride public int describeContents(){ return 0; } @Override public void writeToParcel(Parcel dest, int flags) { dest.writeStringArray(new String[] {this.id, this.name, this.grade}); } public static final Parcelable.Creator CREATOR = new Parcelable.Creator() { public Student createFromParcel(Parcel in) { return new Student(in); } public Student[] newArray(int size) { return new Student[size]; } }; } \u5173\u4e8eLint\u68c0\u67e5\u62a5\u9519 \u73b0\u5728Android Studio\u4f1a\u7206\u51fa\u4e0b\u9762\u56fe\u4e2d\u7684\u8fd9\u4e2a\u9519\u8bef\uff0c\u8fd9\u662fIntelliJ\u7684Bug\uff0c\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u94fe\u63a5\u627e\u5230\u76f8\u5e94\u7684\u7b54\u6848 https://youtrack.jetbrains.com/issue/KT-19300 \u6240\u4ee5\u4f60\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e2a\u8b66\u544a\u5e76\u7f16\u8bd1\u9879\u76ee\uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u6dfb\u52a0@SuppressLint(\"ParcelCreator\")\u6ce8\u89e3 \u82f1\u6587\u539f\u6587\u94fe\u63a5 https://android.jlelse.eu/yet-another-awesome-kotlin-feature-parcelize-5439718ba220","title":"\u4f7f\u7528Parcelize\u6ce8\u89e3\u7b80\u5316Parcelable"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Parcelize%E6%B3%A8%E8%A7%A3%E7%AE%80%E5%8C%96Parcelable/#parcelizeparcelable","text":"","title":"\u4f7f\u7528Parcelize\u6ce8\u89e3\u7b80\u5316Parcelable"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Parcelize%E6%B3%A8%E8%A7%A3%E7%AE%80%E5%8C%96Parcelable/#parcelize","text":"kotlin\u57281.1.4\u7248\u672c\u589e\u52a0\u4e86\u5bf9parcelable\u7684\u652f\u6301 Android\u6269\u5c55\u63d2\u4ef6\u73b0\u5728\u5305\u542b\u4e00\u4e2a\u5b9e\u73b0\u4e86Parcelable\u7684\u81ea\u52a8\u751f\u6210\u5668\u3002\u5728\u4e3b\u6784\u9020\u51fd\u6570\u4e2d\u58f0\u660e\u5e8f\u5217\u5316\u7684\u5c5e\u6027\u5e76\u6dfb\u52a0\u4e00\u4e2a@Parcelize\u6ce8\u89e3\uff0c\u751f\u6210\u5668\u5c31\u4f1a\u81ea\u52a8\u521b\u5efawriteToParcel\uff08\uff09/ createFromParcel\uff08\uff09\u65b9\u6cd5","title":"Parcelize\u6ce8\u89e3"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Parcelize%E6%B3%A8%E8%A7%A3%E7%AE%80%E5%8C%96Parcelable/#_1","text":"Kotlin\u7248\u672c\u4e3a1.1.4\u6216\u8005\u66f4\u9ad8","title":"\u9700\u6c42\u73af\u5883"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Parcelize%E6%B3%A8%E8%A7%A3%E7%AE%80%E5%8C%96Parcelable/#_2","text":"","title":"\u5f00\u59cb\u4f7f\u7528"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Parcelize%E6%B3%A8%E8%A7%A3%E7%AE%80%E5%8C%96Parcelable/#buildgradle","text":"apply plugin: \u2018kotlin-android-extensions\u2019 .... androidExtensions { experimental = true }","title":"\u5728build.gradle\u4e2d\u6dfb\u52a0\u652f\u6301"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Parcelize%E6%B3%A8%E8%A7%A3%E7%AE%80%E5%8C%96Parcelable/#_3","text":"Student.kt @Parcelize data class Student(val id: String, val name: String, val grade: String) : Parcelable","title":"\u5b9e\u4f53\u7c7b"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Parcelize%E6%B3%A8%E8%A7%A3%E7%AE%80%E5%8C%96Parcelable/#java","text":"Student.java public class Student implements Parcelable{ private String id; private String name; private String grade; // Constructor public Student(String id, String name, String grade){ this.id = id; this.name = name; this.grade = grade; } // Getter and setter methods ......... ......... // Parcelling part public Student(Parcel in){ String[] data = new String[3]; in.readStringArray(data); // the order needs to be the same as in writeToParcel() method this.id = data[0]; this.name = data[1]; this.grade = data[2]; } @\u041everride public int describeContents(){ return 0; } @Override public void writeToParcel(Parcel dest, int flags) { dest.writeStringArray(new String[] {this.id, this.name, this.grade}); } public static final Parcelable.Creator CREATOR = new Parcelable.Creator() { public Student createFromParcel(Parcel in) { return new Student(in); } public Student[] newArray(int size) { return new Student[size]; } }; }","title":"\u5bf9\u6bd4Java\u5b9e\u4f53\u7c7b"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Parcelize%E6%B3%A8%E8%A7%A3%E7%AE%80%E5%8C%96Parcelable/#lint","text":"\u73b0\u5728Android Studio\u4f1a\u7206\u51fa\u4e0b\u9762\u56fe\u4e2d\u7684\u8fd9\u4e2a\u9519\u8bef\uff0c\u8fd9\u662fIntelliJ\u7684Bug\uff0c\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u94fe\u63a5\u627e\u5230\u76f8\u5e94\u7684\u7b54\u6848 https://youtrack.jetbrains.com/issue/KT-19300 \u6240\u4ee5\u4f60\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e2a\u8b66\u544a\u5e76\u7f16\u8bd1\u9879\u76ee\uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u6dfb\u52a0@SuppressLint(\"ParcelCreator\")\u6ce8\u89e3","title":"\u5173\u4e8eLint\u68c0\u67e5\u62a5\u9519"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Parcelize%E6%B3%A8%E8%A7%A3%E7%AE%80%E5%8C%96Parcelable/#_4","text":"https://android.jlelse.eu/yet-another-awesome-kotlin-feature-parcelize-5439718ba220","title":"\u82f1\u6587\u539f\u6587\u94fe\u63a5"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Support%E6%B3%A8%E8%A7%A3%E5%8C%85%E4%BC%98%E5%8C%96%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91/","text":"\u4f7f\u7528Support\u6ce8\u89e3\u5305\u4f18\u5316\u4ee3\u7801\u903b\u8f91 Android Support Annotations\u63d0\u4f9b\u7684\u6ce8\u89e3\u5141\u8bb8\u4f60\u50cflint\u68c0\u67e5\u90a3\u6837\u63d0\u4f9b\u4e00\u4e9b\u63d0\u793a\u4fe1\u606f\u5728\u5ba1\u67e5\u4ee3\u7801\u4e0a\uff0c\u8fd9\u53ef\u4ee5\u5e2e\u52a9\u4f60\u89e3\u51b3\u4e00\u4e9b\u96be\u4ee5\u53d1\u73b0\u7684\u4ee3\u7801\u95ee\u9898\u3002 \u6dfb\u52a0\u4f9d\u8d56 \u9009\u62e9 File > Project Structure \u70b9\u51fb Dependencies \u6807\u7b7e \u70b9\u51fb\u201c+\u201d\u6309\u94ae\u7136\u540e\u9009\u62e9 Library dependency \u90a3\u9879 \u5728\u5f39\u51fa\u7684\u9009\u62e9\u6846\u9009\u62e9support-annotations\u7136\u540e\u70b9\u51fbok \u7528\u4e0a\u9762\u7684\u65b9\u6cd5\u6dfb\u52a0\u7684\u4f9d\u8d56\u4e00\u822c\u90fd\u662f\u6700\u65b0\u7684\uff0c\u7136\u540e\u5728build.gradle\u5c31\u4f1a\u591a\u51fa\u4e00\u884c\u4f9d\u8d56\u3002 dependencies { compile 'com.android.support:support-annotations:23.3.0' } Nullness \u6ce8\u89e3 \u6dfb\u52a0@Nullable\u548c@NonNull\u6ce8\u89e3\u53bb\u68c0\u9a8c\u4e00\u4e2a\u7ed9\u5b9a\u7684\u53d8\u91cf\uff0c\u53c2\u6570\u6216\u8005\u8fd4\u56de\u7684\u503c\u662f\u5426\u6709\u6548\u3002 @Nullable \u8868\u793a\u4e00\u4e2a\u53c2\u6570\uff0c\u53d8\u91cf\uff0c\u6216\u65b9\u6cd5\u8fd4\u56de\u503c\u53ef\u4ee5\u4e3anull @NonNull \u8868\u793a\u4e00\u4e2a\u53c2\u6570\uff0c\u53d8\u91cf\uff0c\u6216\u65b9\u6cd5\u8fd4\u56de\u503c\u4e0d\u80fd\u4e3anull \u4f8b\u5982\u6dfb\u52a0\u4e86@NonNull\u8fd9\u4e2a\u6ce8\u89e3\u8868\u793acontext\u548cattrs\u8fd9\u4e24\u4e2a\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a import android.support.annotation.NonNull; ... /** Add support for inflating the <fragment> tag. */ @NonNull @Override public View onCreateView(String name, @NonNull Context context, @NonNull AttributeSet attrs) { ... } ... Resource \u6ce8\u89e3 \u5bf9Android\u5f15\u7528\u7684\u8d44\u6e90\u7c7b\u578b\u9a8c\u8bc1\uff0c\u53ef\u4ee5\u7528\u6765\u533a\u5206\u50cf Drawables \u548c R.string \u8fd9\u79cd\u540c\u662finteger\u7684\u7c7b\u578b\u8d44\u6e90\u3002 \u6dfb\u52a0@StringRes\u6ce8\u89e3\u68c0\u9a8cresId\u662f\u5426\u4e3astring\u7684\u8d44\u6e90id import android.support.annotation.StringRes; ... public abstract void setTitle(@StringRes int resId); ... \u540c\u7c7b\u578b\u7684\u6ce8\u89e3\u8fd8\u6709 @DrawableRes, @DimenRes, @ColorRes, \u548c@InterpolatorRes\u7b49\u7b49 Thread \u6ce8\u89e3 \u5982\u679c\u4e00\u4e2a\u65b9\u6cd5\u9700\u8981\u5728\u7279\u5b9a\u7c7b\u578b\u7684\u7ebf\u7a0b\u4e2d\u8c03\u7528\uff0c\u5c31\u53ef\u4ee5\u6dfb\u52a0\u8fd9\u4e9b\u6ce8\u89e3\u5e2e\u52a9\u4ee3\u7801\u5ba1\u67e5\u3002 @UiThread @MainThread @WorkerThread @BinderThread \u6ce8\u610f\uff1a @MainThread \u548c @UiThread \u662f\u53ef\u4ee5\u4e92\u6362\u7684\uff0c\u6240\u4ee5\u88ab\u6ce8\u89e3\u65b9\u6cd5\u53ea\u5141\u8bb8\u4ece\u8fd92\u4e2a\u6ce8\u89e3\u58f0\u660e\u7684\u7ebf\u7a0b\u4e2d\u8c03\u7528\u3002 Value Constraint \u6ce8\u89e3 \u4f7f\u7528@IntRange, @FloatRange, \u548c @Size \u6ce8\u89e3\u68c0\u5bf9\u4f20\u9012\u7684\u53c2\u6570\u8fdb\u884c\u9a8c\u8bc1\u3002 @IntRange \u6307\u5b9a\u4e00\u4e2aint\u7684\u503c\u5fc5\u987b\u5728\u4e00\u4e2a\u89c4\u5b9a\u8303\u56f4\u5185 \u4f8b\u5982\u53d6\u4e00\u4e2aalpha\u503c\u57280-255\u4e4b\u95f4 public void setAlpha(@IntRange(from=0,to=255) int alpha) { \u2026 } @FloatRange \u6307\u5b9a\u4e00\u4e2afloat\u7684\u503c\u5fc5\u987b\u5728\u4e00\u4e2a\u89c4\u5b9a\u8303\u56f4\u5185 \u4f8b\u5982\u53d6\u4e00\u4e2aalpha\u503c\u57280.0-1.0\u4e4b\u95f4 public void setAlpha(@FloatRange(from=0.0, to=1.0) float alpha) {...} @Size \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u5143\u7d20\u5fc5\u987b\u6709\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6570\u91cf\u6216\u957f\u5ea6 @Size \u6ce8\u89e3\u68c0\u67e5\u96c6\u5408\u6216\u6570\u7ec4\u7684\u6570\u91cf\uff0c\u4ee5\u53caString\u7684\u957f\u5ea6\u3002\u4f8b\u5982\u4e00\u4e2a\u96c6\u5408\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u5b58\u5728\u7684\u503c\u5c31\u4f7f\u7528@Size(min=1)\u6ce8\u89e3\u53bb\u68c0\u67e5\u8fd9\u4e2a\u96c6\u5408\u7684\u662f\u5426\u5408\u6cd5\u3002\u53c8\u6bd4\u5982\u4f7f\u7528 @Size(2) \u6ce8\u89e3\u8868\u793a\u8fd9\u4e2a\u6570\u7ec4\u5fc5\u987b\u8981\u5305\u542b\u4e24\u4e2a\u5b58\u5728\u7684\u503c\u3002 \u4f8b\u5b50\uff1a\u8868\u793alocation\u8fd9\u4e2a\u6570\u7ec4\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u503c int[] location = new int[3]; button.getLocationOnScreen(@Size(min=1) location); Permission \u6ce8\u89e3 \u4f7f\u7528@RequiresPermission\u6ce8\u89e3\u7528\u6765\u68c0\u9a8c\u4e00\u4e2a\u65b9\u6cd5\u7684\u8c03\u7528\u8005\u662f\u5426\u5df2\u7ecf\u62e5\u6709\u6b64\u6743\u9650\u3002\u5bf9\u53ea\u68c0\u67e5\u5355\u4e2a\u6743\u9650\u662f\u5426\u4e3a\u6709\u6548\u6743\u9650\uff0c\u4f7f\u7528 anyOf \u5c5e\u6027\uff0c\u5bf9\u68c0\u67e5\u4e00\u7ec4\u6743\u9650\u4f7f\u7528 allOf \u5c5e\u6027\u3002 @RequiresPermission(Manifest.permission.SET_WALLPAPER) public abstract void setWallpaper(Bitmap bitmap) throws IOException; @RequiresPermission(allOf = { Manifest.permission.READ_EXTERNAL_STORAGE, Manifest.permission.WRITE_EXTERNAL_STORAGE}) public static final void copyFile(String dest, String source) { ... } CheckResults \u6ce8\u89e3 \u4f7f\u7528@CheckResults\u6ce8\u89e3\u68c0\u9a8c\u65b9\u6cd5\u7684\u7ed3\u679c\u6216\u8fd4\u56de\u503c\u662f\u5426\u6709\u4f7f\u7528\u3002 @CheckResult(suggest=\"#enforcePermission(String,int,int,String)\") public abstract int checkPermission(@NonNull String permission, int pid, int uid); CallSuper \u6ce8\u89e3 \u4f7f\u7528@CallSuper\u6ce8\u89e3\u68c0\u9a8c\u65b9\u6cd5\u662f\u5426\u8c03\u7528super\u5b9e\u73b0\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5\u3002 @CallSuper protected void onCreate(Bundle savedInstanceState) { } Enumerated \u6ce8\u89e3 \u4f7f\u7528 @IntDef \u548c @StringDef \u6ce8\u89e3\u53ef\u4ee5\u4f7f\u7528\u6ce8\u89e3\u65b9\u5f0f\u4ee3\u66ff\u679a\u4e3e\u5b9e\u73b0\u6574\u578b\u6216\u5b57\u7b26\u4e32\u7684\u5217\u4e3e\u7c7b\u578b\uff0c\u4ee5\u68c0\u9a8c\u5176\u4ed6\u7c7b\u578b\u7684\u4ee3\u7801\u5f15\u7528\u3002 import android.support.annotation.IntDef; ... public abstract class ActionBar { ... //Define the list of accepted constants @IntDef({NAVIGATION_MODE_STANDARD, NAVIGATION_MODE_LIST, NAVIGATION_MODE_TABS}) //Tell the compiler not to store annotation data in the .class file @Retention(RetentionPolicy.SOURCE) //Declare the NavigationMode annotation public @interface NavigationMode {} //Declare the constants public static final int NAVIGATION_MODE_STANDARD = 0; public static final int NAVIGATION_MODE_LIST = 1; public static final int NAVIGATION_MODE_TABS = 2; //Decorate the target methods with the annotation @NavigationMode public abstract int getNavigationMode(); //Attach the annotation public abstract void setNavigationMode(@NavigationMode int mode); \u5982\u679c\u6a21\u578b\u53c2\u6570\u4e0d\u662f\u5b9a\u4e49\u597d\u7684\u5e38\u6570\u4e4b\u4e00\uff0c\u90a3\u4e48\u5728\u4f60\u6784\u5efa\u8fd9\u6bb5\u4ee3\u7801\u65f6\u5c31\u4f1a\u751f\u6210\u4e00\u6bb5\u8b66\u544a\u3002 \u5982\u679c\u4e00\u4e2a\u53c2\u6570\u6216\u8fd4\u56de\u503c\u5f15\u7528\u4e00\u4e2a\u6709\u6548\u7684\u6a21\u5f0f\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u5e26\u6807\u5fd7\u7684\u6ce8\u89e3\u3002 import android.support.annotation.IntDef; ... @IntDef(flag=true, value={ DISPLAY_USE_LOGO, DISPLAY_SHOW_HOME, DISPLAY_HOME_AS_UP, DISPLAY_SHOW_TITLE, DISPLAY_SHOW_CUSTOM }) @Retention(RetentionPolicy.SOURCE) public @interface DisplayOptions {} ... \u5982\u679c\u4fee\u9970\u7684\u53c2\u6570\u6216\u8fd4\u56de\u7684\u503c\u4e0d\u5f15\u7528\u4e00\u4e2a\u6709\u6548\u7684\u6a21\u5f0f\uff0c\u90a3\u4e48\u5728\u4f60\u6784\u5efa\u8fd9\u6bb5\u4ee3\u7801\u65f6\u5c31\u4f1a\u751f\u6210\u4e00\u6bb5\u8b66\u544a\u3002 \u603b\u7ed3 \u6ce8\u89e3 \u89e3\u91ca @AnimatorRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a Animator \u7c7b\u578b\u7684\u8d44\u6e90 @AnimRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a Anim \u7c7b\u578b\u7684\u8d44\u6e90 @AnyRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u4efb\u610f\u7c7b\u578b\u7684\u8d44\u6e90 @AnyThred \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u65b9\u6cd5\u53ef\u4ee5\u5728\u4efb\u4f55\u7ebf\u7a0b\u4e2d\u88ab\u8c03\u7528 @ArrayRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a Array \u7c7b\u578b\u7684\u8d44\u6e90 @AttrRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a attribute \u7c7b\u578b\u7684\u8d44\u6e90 @BinderThread \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u65b9\u6cd5\u53ea\u53ef\u4ee5\u5728\u88ab\u7ed1\u5b9a\u7684\u7ebf\u7a0b\u4e2d\u88ab\u8c03\u7528 @BoolRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u5e03\u5c14\u7c7b\u578b\u7684\u8d44\u6e90 @CallSuper \u8868\u793a\u4efb\u4f55\u91cd\u5199\u7684\u65b9\u6cd5\u90fd\u5fc5\u987b\u8c03\u7528\u7236\u7c7b\u7684\u8fd9\u4e2a\u65b9\u6cd5 @CheckResult \u8868\u793a\u4e0d\u80fd\u5ffd\u89c6\u88ab\u6ce8\u89e3\u65b9\u6cd5\u7684\u8fd4\u56de\u503c @ColorInt \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u989c\u8272\u503c\u800c\u4e0d\u662f\u989c\u8272\u8d44\u6e90\u5f15\u7528\uff0c\u4f8b\u5982\u5e94\u8be5\u662f\u4e00\u4e2a AARRGGBB \u7684\u6574\u6570\u503c\u3002 @ColorRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a color \u7c7b\u578b\u7684\u8d44\u6e90\uff0c\u800c\u4e0d\u662f\u989c\u8272\u503c\u3002\u6ce8\u610f\u548c ColorInt \u533a\u522b @DimenRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a dimension \u7c7b\u578b\u7684\u8d44\u6e90 @Dimension \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u6574\u5f62\u53c2\u6570\uff0c\u5b57\u6bb5\u6216\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5c3a\u5bf8\u7c7b\u578b @DrawableRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a drawable \u7c7b\u578b\u7684\u8d44\u6e90 @FloatRange \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u5143\u7d20\u5fc5\u987b\u662f\u5728\u4e00\u4e2a\u7ed9\u5b9a\u8303\u56f4\u7684float\u6216double\u503c @FractionRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a fraction \u7c7b\u578b\u7684\u8d44\u6e90 @IdRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u8d44\u6e90\u7684 ID \u7c7b\u578b @IntegerRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u6574\u6570\u7c7b\u578b\u7684\u8d44\u6e90 @IntRange \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u5143\u7d20\u5fc5\u987b\u662f\u5728\u4e00\u4e2a\u7ed9\u5b9a\u8303\u56f4\u7684long\u6216int\u503c @InterpolatorRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a interpolator \u7c7b\u578b\u7684\u8d44\u6e90 @keep \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u5143\u7d20\u5728\u6784\u5efa\u6df7\u6dc6\u65f6\u4e0d\u4f1a\u88ab\u5220\u9664\u6216\u7f29\u5c0f\u5b57\u6bb5\uff0c\u4f1a\u4fdd\u6301\u539f\u5b57\u6bb5 @LayoutRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a layout \u5e03\u5c40\u6587\u4ef6\u7c7b\u578b\u7684\u8d44\u6e90 @MainThread \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u65b9\u6cd5\u53ea\u80fd\u5728\u4e3b\u7ebf\u7a0b\u8c03\u7528 @MenuRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a menu \u7c7b\u578b\u7684\u8d44\u6e90 @NonNull \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u53c2\u6570\uff0c\u5b57\u6bb5\u6216\u8fd4\u56de\u503c\u4e0d\u80fd\u4e3a\u7a7a @Nullable \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u53c2\u6570\uff0c\u5b57\u6bb5\u6216\u8fd4\u56de\u503c\u53ef\u4ee5\u4e3a\u7a7a @PluralsRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a plurals \u7c7b\u578b\u7684\u8d44\u6e90 @Px \u8868\u793a\u8fd9\u4e2a\u6574\u5f62\u7684\u53c2\u6570\uff0c\u5b57\u6bb5\u6216\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u50cf\u7d20\u5c3a\u5bf8 @RawRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a raw \u7c7b\u578b\u7684\u8d44\u6e90 @RequiresApi \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u5143\u7d20\u53ea\u80fd\u5728\u7ed9\u5b9a\u7684api\u7ea7\u522b\u6216\u66f4\u9ad8\u7248\u672c\u4e0a\u8fd0\u884c @RequiresPermission \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u5143\u7d20\u9700\u8981\uff08\u6216\u53ef\u80fd\u9700\u8981\uff09\u4e00\u4e2a\u6216\u591a\u4e2a\u6743\u9650 @RequiresPermission.Read \u6307\u5b9a\u9700\u8981\u5141\u8bb8\u8bfb\u6743\u9650 @RequiresPermission.Write \u6307\u5b9a\u9700\u8981\u5141\u8bb8\u5199\u6743\u9650 @Size \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u5143\u7d20\u5fc5\u987b\u6709\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5927\u5c0f\u6216\u957f\u5ea6 @StringDef \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u5143\u7d20\u4ee3\u8868\u4e00\u4e2a\u903b\u8f91\u7c7b\u578b\u5e76\u4e14\u5b83\u7684\u503c\u5fc5\u987b\u662f\u663e\u793a\u547d\u540d\u7684\u5e38\u91cf @StringRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u8d44\u6e90 @StyleableRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a styleable \u7c7b\u578b\u7684\u8d44\u6e90 @StyleRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a style \u7c7b\u578b\u7684\u8d44\u6e90 @TransitionRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a transition \u7c7b\u578b\u7684\u8d44\u6e90 @UiThread \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u65b9\u6cd5\u6216\u6784\u9020\u65b9\u6cd5\u53ea\u80fd\u5728UI\u7ebf\u7a0b\u8c03\u7528 @VisibleForTesting \u4e3b\u8981\u7528\u5230\u6d4b\u8bd5\u65b9\u9762\uff0c\u7528\u5904\u5f88\u5c11\uff0c\u6807\u5fd7\u4f5c\u7528 @WorkerThread \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u65b9\u6cd5\u6216\u6784\u9020\u65b9\u6cd5\u53ea\u80fd\u5728\u5de5\u4f5c\u7ebf\u7a0b\u8c03\u7528 @XmlRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a XML \u7c7b\u578b\u7684\u8d44\u6e90","title":"\u4f7f\u7528Support\u6ce8\u89e3\u5305\u4f18\u5316\u4ee3\u7801\u903b\u8f91"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Support%E6%B3%A8%E8%A7%A3%E5%8C%85%E4%BC%98%E5%8C%96%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91/#support","text":"Android Support Annotations\u63d0\u4f9b\u7684\u6ce8\u89e3\u5141\u8bb8\u4f60\u50cflint\u68c0\u67e5\u90a3\u6837\u63d0\u4f9b\u4e00\u4e9b\u63d0\u793a\u4fe1\u606f\u5728\u5ba1\u67e5\u4ee3\u7801\u4e0a\uff0c\u8fd9\u53ef\u4ee5\u5e2e\u52a9\u4f60\u89e3\u51b3\u4e00\u4e9b\u96be\u4ee5\u53d1\u73b0\u7684\u4ee3\u7801\u95ee\u9898\u3002","title":"\u4f7f\u7528Support\u6ce8\u89e3\u5305\u4f18\u5316\u4ee3\u7801\u903b\u8f91"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Support%E6%B3%A8%E8%A7%A3%E5%8C%85%E4%BC%98%E5%8C%96%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91/#_1","text":"\u9009\u62e9 File > Project Structure \u70b9\u51fb Dependencies \u6807\u7b7e \u70b9\u51fb\u201c+\u201d\u6309\u94ae\u7136\u540e\u9009\u62e9 Library dependency \u90a3\u9879 \u5728\u5f39\u51fa\u7684\u9009\u62e9\u6846\u9009\u62e9support-annotations\u7136\u540e\u70b9\u51fbok \u7528\u4e0a\u9762\u7684\u65b9\u6cd5\u6dfb\u52a0\u7684\u4f9d\u8d56\u4e00\u822c\u90fd\u662f\u6700\u65b0\u7684\uff0c\u7136\u540e\u5728build.gradle\u5c31\u4f1a\u591a\u51fa\u4e00\u884c\u4f9d\u8d56\u3002 dependencies { compile 'com.android.support:support-annotations:23.3.0' }","title":"\u6dfb\u52a0\u4f9d\u8d56"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Support%E6%B3%A8%E8%A7%A3%E5%8C%85%E4%BC%98%E5%8C%96%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91/#nullness","text":"\u6dfb\u52a0@Nullable\u548c@NonNull\u6ce8\u89e3\u53bb\u68c0\u9a8c\u4e00\u4e2a\u7ed9\u5b9a\u7684\u53d8\u91cf\uff0c\u53c2\u6570\u6216\u8005\u8fd4\u56de\u7684\u503c\u662f\u5426\u6709\u6548\u3002 @Nullable \u8868\u793a\u4e00\u4e2a\u53c2\u6570\uff0c\u53d8\u91cf\uff0c\u6216\u65b9\u6cd5\u8fd4\u56de\u503c\u53ef\u4ee5\u4e3anull @NonNull \u8868\u793a\u4e00\u4e2a\u53c2\u6570\uff0c\u53d8\u91cf\uff0c\u6216\u65b9\u6cd5\u8fd4\u56de\u503c\u4e0d\u80fd\u4e3anull \u4f8b\u5982\u6dfb\u52a0\u4e86@NonNull\u8fd9\u4e2a\u6ce8\u89e3\u8868\u793acontext\u548cattrs\u8fd9\u4e24\u4e2a\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a import android.support.annotation.NonNull; ... /** Add support for inflating the <fragment> tag. */ @NonNull @Override public View onCreateView(String name, @NonNull Context context, @NonNull AttributeSet attrs) { ... } ...","title":"Nullness \u6ce8\u89e3"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Support%E6%B3%A8%E8%A7%A3%E5%8C%85%E4%BC%98%E5%8C%96%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91/#resource","text":"\u5bf9Android\u5f15\u7528\u7684\u8d44\u6e90\u7c7b\u578b\u9a8c\u8bc1\uff0c\u53ef\u4ee5\u7528\u6765\u533a\u5206\u50cf Drawables \u548c R.string \u8fd9\u79cd\u540c\u662finteger\u7684\u7c7b\u578b\u8d44\u6e90\u3002 \u6dfb\u52a0@StringRes\u6ce8\u89e3\u68c0\u9a8cresId\u662f\u5426\u4e3astring\u7684\u8d44\u6e90id import android.support.annotation.StringRes; ... public abstract void setTitle(@StringRes int resId); ... \u540c\u7c7b\u578b\u7684\u6ce8\u89e3\u8fd8\u6709 @DrawableRes, @DimenRes, @ColorRes, \u548c@InterpolatorRes\u7b49\u7b49","title":"Resource \u6ce8\u89e3"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Support%E6%B3%A8%E8%A7%A3%E5%8C%85%E4%BC%98%E5%8C%96%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91/#thread","text":"\u5982\u679c\u4e00\u4e2a\u65b9\u6cd5\u9700\u8981\u5728\u7279\u5b9a\u7c7b\u578b\u7684\u7ebf\u7a0b\u4e2d\u8c03\u7528\uff0c\u5c31\u53ef\u4ee5\u6dfb\u52a0\u8fd9\u4e9b\u6ce8\u89e3\u5e2e\u52a9\u4ee3\u7801\u5ba1\u67e5\u3002 @UiThread @MainThread @WorkerThread @BinderThread \u6ce8\u610f\uff1a @MainThread \u548c @UiThread \u662f\u53ef\u4ee5\u4e92\u6362\u7684\uff0c\u6240\u4ee5\u88ab\u6ce8\u89e3\u65b9\u6cd5\u53ea\u5141\u8bb8\u4ece\u8fd92\u4e2a\u6ce8\u89e3\u58f0\u660e\u7684\u7ebf\u7a0b\u4e2d\u8c03\u7528\u3002","title":"Thread \u6ce8\u89e3"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Support%E6%B3%A8%E8%A7%A3%E5%8C%85%E4%BC%98%E5%8C%96%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91/#value-constraint","text":"\u4f7f\u7528@IntRange, @FloatRange, \u548c @Size \u6ce8\u89e3\u68c0\u5bf9\u4f20\u9012\u7684\u53c2\u6570\u8fdb\u884c\u9a8c\u8bc1\u3002 @IntRange \u6307\u5b9a\u4e00\u4e2aint\u7684\u503c\u5fc5\u987b\u5728\u4e00\u4e2a\u89c4\u5b9a\u8303\u56f4\u5185 \u4f8b\u5982\u53d6\u4e00\u4e2aalpha\u503c\u57280-255\u4e4b\u95f4 public void setAlpha(@IntRange(from=0,to=255) int alpha) { \u2026 } @FloatRange \u6307\u5b9a\u4e00\u4e2afloat\u7684\u503c\u5fc5\u987b\u5728\u4e00\u4e2a\u89c4\u5b9a\u8303\u56f4\u5185 \u4f8b\u5982\u53d6\u4e00\u4e2aalpha\u503c\u57280.0-1.0\u4e4b\u95f4 public void setAlpha(@FloatRange(from=0.0, to=1.0) float alpha) {...} @Size \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u5143\u7d20\u5fc5\u987b\u6709\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6570\u91cf\u6216\u957f\u5ea6 @Size \u6ce8\u89e3\u68c0\u67e5\u96c6\u5408\u6216\u6570\u7ec4\u7684\u6570\u91cf\uff0c\u4ee5\u53caString\u7684\u957f\u5ea6\u3002\u4f8b\u5982\u4e00\u4e2a\u96c6\u5408\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u5b58\u5728\u7684\u503c\u5c31\u4f7f\u7528@Size(min=1)\u6ce8\u89e3\u53bb\u68c0\u67e5\u8fd9\u4e2a\u96c6\u5408\u7684\u662f\u5426\u5408\u6cd5\u3002\u53c8\u6bd4\u5982\u4f7f\u7528 @Size(2) \u6ce8\u89e3\u8868\u793a\u8fd9\u4e2a\u6570\u7ec4\u5fc5\u987b\u8981\u5305\u542b\u4e24\u4e2a\u5b58\u5728\u7684\u503c\u3002 \u4f8b\u5b50\uff1a\u8868\u793alocation\u8fd9\u4e2a\u6570\u7ec4\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u503c int[] location = new int[3]; button.getLocationOnScreen(@Size(min=1) location);","title":"Value Constraint \u6ce8\u89e3"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Support%E6%B3%A8%E8%A7%A3%E5%8C%85%E4%BC%98%E5%8C%96%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91/#permission","text":"\u4f7f\u7528@RequiresPermission\u6ce8\u89e3\u7528\u6765\u68c0\u9a8c\u4e00\u4e2a\u65b9\u6cd5\u7684\u8c03\u7528\u8005\u662f\u5426\u5df2\u7ecf\u62e5\u6709\u6b64\u6743\u9650\u3002\u5bf9\u53ea\u68c0\u67e5\u5355\u4e2a\u6743\u9650\u662f\u5426\u4e3a\u6709\u6548\u6743\u9650\uff0c\u4f7f\u7528 anyOf \u5c5e\u6027\uff0c\u5bf9\u68c0\u67e5\u4e00\u7ec4\u6743\u9650\u4f7f\u7528 allOf \u5c5e\u6027\u3002 @RequiresPermission(Manifest.permission.SET_WALLPAPER) public abstract void setWallpaper(Bitmap bitmap) throws IOException; @RequiresPermission(allOf = { Manifest.permission.READ_EXTERNAL_STORAGE, Manifest.permission.WRITE_EXTERNAL_STORAGE}) public static final void copyFile(String dest, String source) { ... }","title":"Permission \u6ce8\u89e3"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Support%E6%B3%A8%E8%A7%A3%E5%8C%85%E4%BC%98%E5%8C%96%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91/#checkresults","text":"\u4f7f\u7528@CheckResults\u6ce8\u89e3\u68c0\u9a8c\u65b9\u6cd5\u7684\u7ed3\u679c\u6216\u8fd4\u56de\u503c\u662f\u5426\u6709\u4f7f\u7528\u3002 @CheckResult(suggest=\"#enforcePermission(String,int,int,String)\") public abstract int checkPermission(@NonNull String permission, int pid, int uid);","title":"CheckResults \u6ce8\u89e3"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Support%E6%B3%A8%E8%A7%A3%E5%8C%85%E4%BC%98%E5%8C%96%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91/#callsuper","text":"\u4f7f\u7528@CallSuper\u6ce8\u89e3\u68c0\u9a8c\u65b9\u6cd5\u662f\u5426\u8c03\u7528super\u5b9e\u73b0\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5\u3002 @CallSuper protected void onCreate(Bundle savedInstanceState) { }","title":"CallSuper \u6ce8\u89e3"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Support%E6%B3%A8%E8%A7%A3%E5%8C%85%E4%BC%98%E5%8C%96%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91/#enumerated","text":"\u4f7f\u7528 @IntDef \u548c @StringDef \u6ce8\u89e3\u53ef\u4ee5\u4f7f\u7528\u6ce8\u89e3\u65b9\u5f0f\u4ee3\u66ff\u679a\u4e3e\u5b9e\u73b0\u6574\u578b\u6216\u5b57\u7b26\u4e32\u7684\u5217\u4e3e\u7c7b\u578b\uff0c\u4ee5\u68c0\u9a8c\u5176\u4ed6\u7c7b\u578b\u7684\u4ee3\u7801\u5f15\u7528\u3002 import android.support.annotation.IntDef; ... public abstract class ActionBar { ... //Define the list of accepted constants @IntDef({NAVIGATION_MODE_STANDARD, NAVIGATION_MODE_LIST, NAVIGATION_MODE_TABS}) //Tell the compiler not to store annotation data in the .class file @Retention(RetentionPolicy.SOURCE) //Declare the NavigationMode annotation public @interface NavigationMode {} //Declare the constants public static final int NAVIGATION_MODE_STANDARD = 0; public static final int NAVIGATION_MODE_LIST = 1; public static final int NAVIGATION_MODE_TABS = 2; //Decorate the target methods with the annotation @NavigationMode public abstract int getNavigationMode(); //Attach the annotation public abstract void setNavigationMode(@NavigationMode int mode); \u5982\u679c\u6a21\u578b\u53c2\u6570\u4e0d\u662f\u5b9a\u4e49\u597d\u7684\u5e38\u6570\u4e4b\u4e00\uff0c\u90a3\u4e48\u5728\u4f60\u6784\u5efa\u8fd9\u6bb5\u4ee3\u7801\u65f6\u5c31\u4f1a\u751f\u6210\u4e00\u6bb5\u8b66\u544a\u3002 \u5982\u679c\u4e00\u4e2a\u53c2\u6570\u6216\u8fd4\u56de\u503c\u5f15\u7528\u4e00\u4e2a\u6709\u6548\u7684\u6a21\u5f0f\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u5e26\u6807\u5fd7\u7684\u6ce8\u89e3\u3002 import android.support.annotation.IntDef; ... @IntDef(flag=true, value={ DISPLAY_USE_LOGO, DISPLAY_SHOW_HOME, DISPLAY_HOME_AS_UP, DISPLAY_SHOW_TITLE, DISPLAY_SHOW_CUSTOM }) @Retention(RetentionPolicy.SOURCE) public @interface DisplayOptions {} ... \u5982\u679c\u4fee\u9970\u7684\u53c2\u6570\u6216\u8fd4\u56de\u7684\u503c\u4e0d\u5f15\u7528\u4e00\u4e2a\u6709\u6548\u7684\u6a21\u5f0f\uff0c\u90a3\u4e48\u5728\u4f60\u6784\u5efa\u8fd9\u6bb5\u4ee3\u7801\u65f6\u5c31\u4f1a\u751f\u6210\u4e00\u6bb5\u8b66\u544a\u3002","title":"Enumerated \u6ce8\u89e3"},{"location":"android/%E9%9A%8F%E7%AC%94/%E4%BD%BF%E7%94%A8Support%E6%B3%A8%E8%A7%A3%E5%8C%85%E4%BC%98%E5%8C%96%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91/#_2","text":"\u6ce8\u89e3 \u89e3\u91ca @AnimatorRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a Animator \u7c7b\u578b\u7684\u8d44\u6e90 @AnimRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a Anim \u7c7b\u578b\u7684\u8d44\u6e90 @AnyRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u4efb\u610f\u7c7b\u578b\u7684\u8d44\u6e90 @AnyThred \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u65b9\u6cd5\u53ef\u4ee5\u5728\u4efb\u4f55\u7ebf\u7a0b\u4e2d\u88ab\u8c03\u7528 @ArrayRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a Array \u7c7b\u578b\u7684\u8d44\u6e90 @AttrRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a attribute \u7c7b\u578b\u7684\u8d44\u6e90 @BinderThread \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u65b9\u6cd5\u53ea\u53ef\u4ee5\u5728\u88ab\u7ed1\u5b9a\u7684\u7ebf\u7a0b\u4e2d\u88ab\u8c03\u7528 @BoolRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u5e03\u5c14\u7c7b\u578b\u7684\u8d44\u6e90 @CallSuper \u8868\u793a\u4efb\u4f55\u91cd\u5199\u7684\u65b9\u6cd5\u90fd\u5fc5\u987b\u8c03\u7528\u7236\u7c7b\u7684\u8fd9\u4e2a\u65b9\u6cd5 @CheckResult \u8868\u793a\u4e0d\u80fd\u5ffd\u89c6\u88ab\u6ce8\u89e3\u65b9\u6cd5\u7684\u8fd4\u56de\u503c @ColorInt \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u989c\u8272\u503c\u800c\u4e0d\u662f\u989c\u8272\u8d44\u6e90\u5f15\u7528\uff0c\u4f8b\u5982\u5e94\u8be5\u662f\u4e00\u4e2a AARRGGBB \u7684\u6574\u6570\u503c\u3002 @ColorRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a color \u7c7b\u578b\u7684\u8d44\u6e90\uff0c\u800c\u4e0d\u662f\u989c\u8272\u503c\u3002\u6ce8\u610f\u548c ColorInt \u533a\u522b @DimenRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a dimension \u7c7b\u578b\u7684\u8d44\u6e90 @Dimension \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u6574\u5f62\u53c2\u6570\uff0c\u5b57\u6bb5\u6216\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5c3a\u5bf8\u7c7b\u578b @DrawableRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a drawable \u7c7b\u578b\u7684\u8d44\u6e90 @FloatRange \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u5143\u7d20\u5fc5\u987b\u662f\u5728\u4e00\u4e2a\u7ed9\u5b9a\u8303\u56f4\u7684float\u6216double\u503c @FractionRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a fraction \u7c7b\u578b\u7684\u8d44\u6e90 @IdRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u8d44\u6e90\u7684 ID \u7c7b\u578b @IntegerRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u6574\u6570\u7c7b\u578b\u7684\u8d44\u6e90 @IntRange \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u5143\u7d20\u5fc5\u987b\u662f\u5728\u4e00\u4e2a\u7ed9\u5b9a\u8303\u56f4\u7684long\u6216int\u503c @InterpolatorRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a interpolator \u7c7b\u578b\u7684\u8d44\u6e90 @keep \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u5143\u7d20\u5728\u6784\u5efa\u6df7\u6dc6\u65f6\u4e0d\u4f1a\u88ab\u5220\u9664\u6216\u7f29\u5c0f\u5b57\u6bb5\uff0c\u4f1a\u4fdd\u6301\u539f\u5b57\u6bb5 @LayoutRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a layout \u5e03\u5c40\u6587\u4ef6\u7c7b\u578b\u7684\u8d44\u6e90 @MainThread \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u65b9\u6cd5\u53ea\u80fd\u5728\u4e3b\u7ebf\u7a0b\u8c03\u7528 @MenuRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a menu \u7c7b\u578b\u7684\u8d44\u6e90 @NonNull \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u53c2\u6570\uff0c\u5b57\u6bb5\u6216\u8fd4\u56de\u503c\u4e0d\u80fd\u4e3a\u7a7a @Nullable \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u53c2\u6570\uff0c\u5b57\u6bb5\u6216\u8fd4\u56de\u503c\u53ef\u4ee5\u4e3a\u7a7a @PluralsRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a plurals \u7c7b\u578b\u7684\u8d44\u6e90 @Px \u8868\u793a\u8fd9\u4e2a\u6574\u5f62\u7684\u53c2\u6570\uff0c\u5b57\u6bb5\u6216\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u50cf\u7d20\u5c3a\u5bf8 @RawRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a raw \u7c7b\u578b\u7684\u8d44\u6e90 @RequiresApi \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u5143\u7d20\u53ea\u80fd\u5728\u7ed9\u5b9a\u7684api\u7ea7\u522b\u6216\u66f4\u9ad8\u7248\u672c\u4e0a\u8fd0\u884c @RequiresPermission \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u5143\u7d20\u9700\u8981\uff08\u6216\u53ef\u80fd\u9700\u8981\uff09\u4e00\u4e2a\u6216\u591a\u4e2a\u6743\u9650 @RequiresPermission.Read \u6307\u5b9a\u9700\u8981\u5141\u8bb8\u8bfb\u6743\u9650 @RequiresPermission.Write \u6307\u5b9a\u9700\u8981\u5141\u8bb8\u5199\u6743\u9650 @Size \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u5143\u7d20\u5fc5\u987b\u6709\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5927\u5c0f\u6216\u957f\u5ea6 @StringDef \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u5143\u7d20\u4ee3\u8868\u4e00\u4e2a\u903b\u8f91\u7c7b\u578b\u5e76\u4e14\u5b83\u7684\u503c\u5fc5\u987b\u662f\u663e\u793a\u547d\u540d\u7684\u5e38\u91cf @StringRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u8d44\u6e90 @StyleableRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a styleable \u7c7b\u578b\u7684\u8d44\u6e90 @StyleRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a style \u7c7b\u578b\u7684\u8d44\u6e90 @TransitionRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a transition \u7c7b\u578b\u7684\u8d44\u6e90 @UiThread \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u65b9\u6cd5\u6216\u6784\u9020\u65b9\u6cd5\u53ea\u80fd\u5728UI\u7ebf\u7a0b\u8c03\u7528 @VisibleForTesting \u4e3b\u8981\u7528\u5230\u6d4b\u8bd5\u65b9\u9762\uff0c\u7528\u5904\u5f88\u5c11\uff0c\u6807\u5fd7\u4f5c\u7528 @WorkerThread \u8868\u793a\u88ab\u6ce8\u89e3\u7684\u65b9\u6cd5\u6216\u6784\u9020\u65b9\u6cd5\u53ea\u80fd\u5728\u5de5\u4f5c\u7ebf\u7a0b\u8c03\u7528 @XmlRes \u8868\u793a\u8be5\u53c2\u6570\u3001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a XML \u7c7b\u578b\u7684\u8d44\u6e90","title":"\u603b\u7ed3"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%9C%A8Activity%E7%9A%84onCreate%E6%96%B9%E6%B3%95%E4%B8%AD%E8%B0%83%E7%94%A8finish%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/","text":"Activity\u7684onCreate\u4e2d\u8c03\u7528finish\u7684\u751f\u547d\u5468\u671f \u5982\u9898\uff0c\u6b63\u5e38\u6765\u8bf4Activity\u542f\u52a8\u540e\u4f1a\u6b63\u5e38\u4f9d\u6b21\u8c03\u7528 onCreate \u3001 onStart \u3001 onResume \u65b9\u6cd5\uff0c\u5173\u95ed\u65f6\u4f1a\u8c03\u7528 onPause \u3001 onStop \u3001 onDestory \u65b9\u6cd5\u3002\u90a3\u4e48\u5f53\u6211\u4eec\u5728 onCreate \u65b9\u6cd5\u4e2d\u76f4\u63a5\u8c03\u7528 finish \u65b9\u6cd5\u540e\u751f\u547d\u5468\u671f\u65b9\u6cd5\u53c8\u4f1a\u600e\u4e48\u6267\u884c\u5462\uff1f\u5199\u4e2ademo\u770b\u770b\uff1a \u65e5\u5fd7\u8f93\u51fa Activity\u6b63\u5e38\u6253\u5f00\uff0c\u7136\u540e\u5173\u95ed\u7684\u751f\u547d\u5468\u671f\u65e5\u5fd7\u8f93\u51fa D/MainActivity: onCreate D/MainActivity: onStart D/MainActivity: onResume D/MainActivity: onPause D/MainActivity: onStop D/MainActivity: onDestroy \u5728onCreate\u4e2d\u76f4\u63a5\u8c03\u7528finish\u540e\u7684\u751f\u547d\u5468\u671f\u65e5\u5fd7\u8f93\u51fa D/MainActivity: onCreate D/MainActivity: onDestroy \u5728onStart\u4e2d\u76f4\u63a5\u8c03\u7528finish\u540e\u7684\u751f\u547d\u5468\u671f\u65e5\u5fd7\u8f93\u51fa D/MainActivity: onCreate D/MainActivity: onStart D/MainActivity: onStop D/MainActivity: onDestroy \u7ed3\u8bba \u5148\u8bf4\u7ed3\u8bba\uff0c\u4e0b\u9762\u518d\u5206\u4eab\u6e90\u7801\u3002\u4ece\u4e0a\u9762\u7684log\u8f93\u51fa\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728 onCreate \u65b9\u6cd5\u4e2d\u8c03\u7528 finish \u65b9\u6cd5\u540e\uff0c\u751f\u547d\u5468\u671f\u4f1a\u76f4\u63a5\u56de\u8c03 onDestory \u65b9\u6cd5\u3002\u5728 onStart \u65b9\u6cd5\u4e2d\u8c03\u7528 finish \u65b9\u6cd5\u540e\uff0c\u751f\u547d\u5468\u671f\u4f1a\u5148\u56de\u8c03 onStop \uff0c\u7136\u540e\u518d\u8c03\u7528 onDestory \u65b9\u6cd5\u3002\u770b\u6765\u751f\u547d\u5468\u671f\u65b9\u6cd5\u8fd8\u662f\u6210\u5bf9\u51fa\u73b0\u7684\u3002 \u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u7bc7\u535a\u5ba2 \u5076\u7136\u5728\u9605\u8bfb Activity \u6e90\u7801\u65f6\uff0c\u53d1\u73b0\u4e86\u4e00\u6761\u6ce8\u91ca\u3002 /* <p>You can call {@link #finish} from within this function, in * which case onDestroy() will be immediately called after {@link #onCreate} without any of the * rest of the activity lifecycle ({@link #onStart}, {@link #onResume}, {@link #onPause}, etc) * executing. */ protected void onCreate(@Nullable Bundle savedInstanceState) { } \u5927\u81f4\u7ffb\u8bd1\uff1a\u4f60\u53ef\u4ee5\u5728 onCreate \u65b9\u6cd5\u4e2d\u76f4\u63a5\u8c03\u7528 finish \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u4f1a\u5728\u6267\u884c\u5b8c onCreate \u65b9\u6cd5\u540e\u76f4\u63a5\u8c03\u7528 onDestroy \u65b9\u6cd5\uff0c\u800c\u4e14\u5e76\u4e0d\u4f1a\u6267\u884c onStart \uff0c onResume , onPause \u7b49\u5176\u4ed6\u751f\u547d\u5468\u671f\u65b9\u6cd5\u3002 \u6e90\u7801\u5206\u6790 \u6e90\u7801\u57fa\u4e8e android-28 \u5206\u6790\u3002\u4ece\u4ee5\u5f80\u7684\u7ecf\u9a8c\u5f97\u77e5\uff0cActivity\u7684\u751f\u547d\u5468\u671f\u56de\u8c03\u5728 ActivityThread \u4e2d\u7684 H \u8fd9\u4e2aHandler\u4e2d\u56de\u8c03\uff0c\u518d\u6b21\u9605\u8bfb\u8fd9\u4e2a\u6e90\u7801\u624d\u53d1\u73b0\uff0c\u73b0\u5728 H \u91cc\u9762\u5df2\u7ecf\u6ca1\u6709\u4e86 LAUNCH_ACTIVITY \u7b49\u751f\u547d\u5468\u671f\u56de\u8c03Tag\uff0c\u5168\u90e8\u653e\u5230\u4e86 EXECUTE_TRANSACTION \u8fd9\u4e2aTag\u4e2d\u3002 //ActivityThread class H extends Handler { public void handleMessage(Message msg) { case EXECUTE_TRANSACTION: final ClientTransaction transaction = (ClientTransaction) msg.obj; mTransactionExecutor.execute(transaction); if (isSystem()) { // Client transactions inside system process are recycled on the client side // instead of ClientLifecycleManager to avoid being cleared before this // message is handled. transaction.recycle(); } // TODO(lifecycler): Recycle locally scheduled transactions. break; } } ClientTransaction \u91cc\u9762\u7684\u5177\u4f53\u4ee3\u7801\u6211\u4eec\u4e0d\u4f5c\u8fc7\u591a\u5206\u6790\uff0c\u53ea\u9700\u77e5\u9053\u6700\u540e\u90fd\u4f1a\u56de\u8c03\u56de\u6765\uff0c\u6267\u884c ActivityThread \u4e2d\u7684 handleLaunchActivity \u3001 handleStartActivity \u3001 handleResumeActivity \u3001 handlePauseActivity \u7b49\u65b9\u6cd5\u3002 \u8fd9\u91cc\u53ea\u5206\u6790 handleLaunchActivity \u65b9\u6cd5\u7684\u6267\u884c\u6d41\u7a0b\uff0c\u56e0\u4e3a\u5176\u4ed6\u65b9\u6cd5\u90fd\u662f\u7c7b\u4f3c\u7684\uff0c\u6700\u7ec8\u4e5f\u6267\u884c\u4e86 Instrumentation \u7c7b\u4e2d\u7684\u76f8\u5173\u65b9\u6cd5\u3002 ActivityThread \u6267\u884c handleLaunchActivity \u65b9\u6cd5 handleLaunchActivity \u5185\u90e8\u6267\u884c performLaunchActivity \u65b9\u6cd5 performLaunchActivity \u65b9\u6cd5\u4e2d\u8c03\u7528 mInstrumentation.newActivity \u65b9\u6cd5\u53cd\u5c04\u521b\u5efa\u4e86Activity\u5b9e\u4f8b \u7136\u540e\u6267\u884c\u4e86 mInstrumentation.callActivityOnCreate \u65b9\u6cd5 callActivityOnCreate \u65b9\u6cd5\u5185\u90e8\u8c03\u7528\u4e86Activity\u7684 performCreate \u65b9\u6cd5 performCreate \u65b9\u6cd5\u5c31\u8c03\u7528\u4e86 onCreate //\u4f2a\u4ee3\u7801\u793a\u4f8b //`ActivityThread` public Activity handleLaunchActivity(ActivityClientRecord r, PendingTransactionActions pendingActions, Intent customIntent) { ... performLaunchActivity() ... } private Activity performLaunchActivity(ActivityClientRecord r, Intent customIntent) { ... activity = mInstrumentation.newActivity(cl, component.getClassName(), r.intent); mInstrumentation.callActivityOnCreate(activity, r.state); ... } //`Instrumentation` public void callActivityOnCreate(Activity activity, Bundle icicle) { prePerformCreate(activity); activity.performCreate(icicle); postPerformCreate(activity); } //`Activity` final void performCreate(Bundle icicle, PersistableBundle persistentState) { if (persistentState != null) { onCreate(icicle, persistentState); } else { onCreate(icicle); } } \u8fd9\u624d\u662f\u91cd\u70b9 \u4e0a\u9762\u90fd\u662f\u751f\u547d\u5468\u671f\u56de\u8c03\u7684\u6e90\u7801\u5206\u6790\uff0c\u73b0\u5728\u624d\u662f\u91cd\u70b9\u5206\u6790\uff0c\u4e3a\u4ec0\u4e48\u5728 onCreate \u65b9\u6cd5\u4e2d\u8c03\u7528\u4e86 finish \u65b9\u6cd5\u76f4\u63a5\u6267\u884c\u4e86 onDesotry \u65b9\u6cd5\uff0c\u800c\u6ca1\u6709\u6267\u884c\u5176\u4ed6\u7684\u751f\u547d\u5468\u671f\u65b9\u6cd5\u3002 \u53ef\u77e5\u6211\u4eec\u5728onCreate\u4e2d\u6267\u884c\u4e86finish\uff0c\u6240\u4ee5finish\u65b9\u6cd5\u662f\u5173\u952e\uff0c\u6240\u4ee5\u5148\u5206\u6790finish\u65b9\u6cd5 private void finish(int finishTask) { ... if (ActivityManager.getService() .finishActivity(mToken, resultCode, resultData, finishTask)) { mFinished = true; } ... } finish \u65b9\u6cd5\u4e2d\u5176\u4ed6\u4ee3\u7801\u53ef\u4ee5\u4e0d\u7528\u7ba1\uff0c\u53ea\u5173\u5fc3\u8c03\u7528\u4e86 AMS \u7684finishActivity\u65b9\u6cd5\u548c\u5c06 mFinished \u8bbe\u7f6e\u4e3a\u4e86 true \u3002 \u5206\u6790 handleStartActivity \u65b9\u6cd5 public void handleStartActivity(ActivityClientRecord r,PendingTransactionActions pendingActions) { final Activity activity = r.activity; if (r.activity == null) { return; } if (!r.stopped) { throw new IllegalStateException(\"Can't start activity that is not stopped.\"); } if (r.activity.mFinished) { return; } // Start activity.performStart(\"handleStartActivity\"); r.setState(ON_START); } \u53ef\u4ee5\u770b\u5230\u5f53activity\u7684 mFinished \u53d8\u91cf\u4e3a true \u65f6\uff0c\u4ee3\u7801\u5c31\u4e0d\u4f1a\u5f80\u4e0b\u6267\u884c\uff0c\u6240\u4ee5\u5c31\u4e0d\u4f1a\u6267\u884c onStart \u751f\u547d\u5468\u671f\u65b9\u6cd5\u3002\u540c\u7406 handleResumeActivity \u4e5f\u662f\u4e00\u6837\u7684\u6267\u884c\u903b\u8f91\u3002","title":"Activity\u7684onCreate\u4e2d\u8c03\u7528finish\u7684\u751f\u547d\u5468\u671f"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%9C%A8Activity%E7%9A%84onCreate%E6%96%B9%E6%B3%95%E4%B8%AD%E8%B0%83%E7%94%A8finish%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/#activityoncreatefinish","text":"\u5982\u9898\uff0c\u6b63\u5e38\u6765\u8bf4Activity\u542f\u52a8\u540e\u4f1a\u6b63\u5e38\u4f9d\u6b21\u8c03\u7528 onCreate \u3001 onStart \u3001 onResume \u65b9\u6cd5\uff0c\u5173\u95ed\u65f6\u4f1a\u8c03\u7528 onPause \u3001 onStop \u3001 onDestory \u65b9\u6cd5\u3002\u90a3\u4e48\u5f53\u6211\u4eec\u5728 onCreate \u65b9\u6cd5\u4e2d\u76f4\u63a5\u8c03\u7528 finish \u65b9\u6cd5\u540e\u751f\u547d\u5468\u671f\u65b9\u6cd5\u53c8\u4f1a\u600e\u4e48\u6267\u884c\u5462\uff1f\u5199\u4e2ademo\u770b\u770b\uff1a","title":"Activity\u7684onCreate\u4e2d\u8c03\u7528finish\u7684\u751f\u547d\u5468\u671f"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%9C%A8Activity%E7%9A%84onCreate%E6%96%B9%E6%B3%95%E4%B8%AD%E8%B0%83%E7%94%A8finish%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/#_1","text":"Activity\u6b63\u5e38\u6253\u5f00\uff0c\u7136\u540e\u5173\u95ed\u7684\u751f\u547d\u5468\u671f\u65e5\u5fd7\u8f93\u51fa D/MainActivity: onCreate D/MainActivity: onStart D/MainActivity: onResume D/MainActivity: onPause D/MainActivity: onStop D/MainActivity: onDestroy \u5728onCreate\u4e2d\u76f4\u63a5\u8c03\u7528finish\u540e\u7684\u751f\u547d\u5468\u671f\u65e5\u5fd7\u8f93\u51fa D/MainActivity: onCreate D/MainActivity: onDestroy \u5728onStart\u4e2d\u76f4\u63a5\u8c03\u7528finish\u540e\u7684\u751f\u547d\u5468\u671f\u65e5\u5fd7\u8f93\u51fa D/MainActivity: onCreate D/MainActivity: onStart D/MainActivity: onStop D/MainActivity: onDestroy","title":"\u65e5\u5fd7\u8f93\u51fa"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%9C%A8Activity%E7%9A%84onCreate%E6%96%B9%E6%B3%95%E4%B8%AD%E8%B0%83%E7%94%A8finish%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/#_2","text":"\u5148\u8bf4\u7ed3\u8bba\uff0c\u4e0b\u9762\u518d\u5206\u4eab\u6e90\u7801\u3002\u4ece\u4e0a\u9762\u7684log\u8f93\u51fa\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728 onCreate \u65b9\u6cd5\u4e2d\u8c03\u7528 finish \u65b9\u6cd5\u540e\uff0c\u751f\u547d\u5468\u671f\u4f1a\u76f4\u63a5\u56de\u8c03 onDestory \u65b9\u6cd5\u3002\u5728 onStart \u65b9\u6cd5\u4e2d\u8c03\u7528 finish \u65b9\u6cd5\u540e\uff0c\u751f\u547d\u5468\u671f\u4f1a\u5148\u56de\u8c03 onStop \uff0c\u7136\u540e\u518d\u8c03\u7528 onDestory \u65b9\u6cd5\u3002\u770b\u6765\u751f\u547d\u5468\u671f\u65b9\u6cd5\u8fd8\u662f\u6210\u5bf9\u51fa\u73b0\u7684\u3002","title":"\u7ed3\u8bba"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%9C%A8Activity%E7%9A%84onCreate%E6%96%B9%E6%B3%95%E4%B8%AD%E8%B0%83%E7%94%A8finish%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/#_3","text":"\u5076\u7136\u5728\u9605\u8bfb Activity \u6e90\u7801\u65f6\uff0c\u53d1\u73b0\u4e86\u4e00\u6761\u6ce8\u91ca\u3002 /* <p>You can call {@link #finish} from within this function, in * which case onDestroy() will be immediately called after {@link #onCreate} without any of the * rest of the activity lifecycle ({@link #onStart}, {@link #onResume}, {@link #onPause}, etc) * executing. */ protected void onCreate(@Nullable Bundle savedInstanceState) { } \u5927\u81f4\u7ffb\u8bd1\uff1a\u4f60\u53ef\u4ee5\u5728 onCreate \u65b9\u6cd5\u4e2d\u76f4\u63a5\u8c03\u7528 finish \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u4f1a\u5728\u6267\u884c\u5b8c onCreate \u65b9\u6cd5\u540e\u76f4\u63a5\u8c03\u7528 onDestroy \u65b9\u6cd5\uff0c\u800c\u4e14\u5e76\u4e0d\u4f1a\u6267\u884c onStart \uff0c onResume , onPause \u7b49\u5176\u4ed6\u751f\u547d\u5468\u671f\u65b9\u6cd5\u3002","title":"\u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u7bc7\u535a\u5ba2"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%9C%A8Activity%E7%9A%84onCreate%E6%96%B9%E6%B3%95%E4%B8%AD%E8%B0%83%E7%94%A8finish%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/#_4","text":"\u6e90\u7801\u57fa\u4e8e android-28 \u5206\u6790\u3002\u4ece\u4ee5\u5f80\u7684\u7ecf\u9a8c\u5f97\u77e5\uff0cActivity\u7684\u751f\u547d\u5468\u671f\u56de\u8c03\u5728 ActivityThread \u4e2d\u7684 H \u8fd9\u4e2aHandler\u4e2d\u56de\u8c03\uff0c\u518d\u6b21\u9605\u8bfb\u8fd9\u4e2a\u6e90\u7801\u624d\u53d1\u73b0\uff0c\u73b0\u5728 H \u91cc\u9762\u5df2\u7ecf\u6ca1\u6709\u4e86 LAUNCH_ACTIVITY \u7b49\u751f\u547d\u5468\u671f\u56de\u8c03Tag\uff0c\u5168\u90e8\u653e\u5230\u4e86 EXECUTE_TRANSACTION \u8fd9\u4e2aTag\u4e2d\u3002 //ActivityThread class H extends Handler { public void handleMessage(Message msg) { case EXECUTE_TRANSACTION: final ClientTransaction transaction = (ClientTransaction) msg.obj; mTransactionExecutor.execute(transaction); if (isSystem()) { // Client transactions inside system process are recycled on the client side // instead of ClientLifecycleManager to avoid being cleared before this // message is handled. transaction.recycle(); } // TODO(lifecycler): Recycle locally scheduled transactions. break; } } ClientTransaction \u91cc\u9762\u7684\u5177\u4f53\u4ee3\u7801\u6211\u4eec\u4e0d\u4f5c\u8fc7\u591a\u5206\u6790\uff0c\u53ea\u9700\u77e5\u9053\u6700\u540e\u90fd\u4f1a\u56de\u8c03\u56de\u6765\uff0c\u6267\u884c ActivityThread \u4e2d\u7684 handleLaunchActivity \u3001 handleStartActivity \u3001 handleResumeActivity \u3001 handlePauseActivity \u7b49\u65b9\u6cd5\u3002 \u8fd9\u91cc\u53ea\u5206\u6790 handleLaunchActivity \u65b9\u6cd5\u7684\u6267\u884c\u6d41\u7a0b\uff0c\u56e0\u4e3a\u5176\u4ed6\u65b9\u6cd5\u90fd\u662f\u7c7b\u4f3c\u7684\uff0c\u6700\u7ec8\u4e5f\u6267\u884c\u4e86 Instrumentation \u7c7b\u4e2d\u7684\u76f8\u5173\u65b9\u6cd5\u3002 ActivityThread \u6267\u884c handleLaunchActivity \u65b9\u6cd5 handleLaunchActivity \u5185\u90e8\u6267\u884c performLaunchActivity \u65b9\u6cd5 performLaunchActivity \u65b9\u6cd5\u4e2d\u8c03\u7528 mInstrumentation.newActivity \u65b9\u6cd5\u53cd\u5c04\u521b\u5efa\u4e86Activity\u5b9e\u4f8b \u7136\u540e\u6267\u884c\u4e86 mInstrumentation.callActivityOnCreate \u65b9\u6cd5 callActivityOnCreate \u65b9\u6cd5\u5185\u90e8\u8c03\u7528\u4e86Activity\u7684 performCreate \u65b9\u6cd5 performCreate \u65b9\u6cd5\u5c31\u8c03\u7528\u4e86 onCreate //\u4f2a\u4ee3\u7801\u793a\u4f8b //`ActivityThread` public Activity handleLaunchActivity(ActivityClientRecord r, PendingTransactionActions pendingActions, Intent customIntent) { ... performLaunchActivity() ... } private Activity performLaunchActivity(ActivityClientRecord r, Intent customIntent) { ... activity = mInstrumentation.newActivity(cl, component.getClassName(), r.intent); mInstrumentation.callActivityOnCreate(activity, r.state); ... } //`Instrumentation` public void callActivityOnCreate(Activity activity, Bundle icicle) { prePerformCreate(activity); activity.performCreate(icicle); postPerformCreate(activity); } //`Activity` final void performCreate(Bundle icicle, PersistableBundle persistentState) { if (persistentState != null) { onCreate(icicle, persistentState); } else { onCreate(icicle); } }","title":"\u6e90\u7801\u5206\u6790"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%9C%A8Activity%E7%9A%84onCreate%E6%96%B9%E6%B3%95%E4%B8%AD%E8%B0%83%E7%94%A8finish%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/#_5","text":"\u4e0a\u9762\u90fd\u662f\u751f\u547d\u5468\u671f\u56de\u8c03\u7684\u6e90\u7801\u5206\u6790\uff0c\u73b0\u5728\u624d\u662f\u91cd\u70b9\u5206\u6790\uff0c\u4e3a\u4ec0\u4e48\u5728 onCreate \u65b9\u6cd5\u4e2d\u8c03\u7528\u4e86 finish \u65b9\u6cd5\u76f4\u63a5\u6267\u884c\u4e86 onDesotry \u65b9\u6cd5\uff0c\u800c\u6ca1\u6709\u6267\u884c\u5176\u4ed6\u7684\u751f\u547d\u5468\u671f\u65b9\u6cd5\u3002 \u53ef\u77e5\u6211\u4eec\u5728onCreate\u4e2d\u6267\u884c\u4e86finish\uff0c\u6240\u4ee5finish\u65b9\u6cd5\u662f\u5173\u952e\uff0c\u6240\u4ee5\u5148\u5206\u6790finish\u65b9\u6cd5 private void finish(int finishTask) { ... if (ActivityManager.getService() .finishActivity(mToken, resultCode, resultData, finishTask)) { mFinished = true; } ... } finish \u65b9\u6cd5\u4e2d\u5176\u4ed6\u4ee3\u7801\u53ef\u4ee5\u4e0d\u7528\u7ba1\uff0c\u53ea\u5173\u5fc3\u8c03\u7528\u4e86 AMS \u7684finishActivity\u65b9\u6cd5\u548c\u5c06 mFinished \u8bbe\u7f6e\u4e3a\u4e86 true \u3002 \u5206\u6790 handleStartActivity \u65b9\u6cd5 public void handleStartActivity(ActivityClientRecord r,PendingTransactionActions pendingActions) { final Activity activity = r.activity; if (r.activity == null) { return; } if (!r.stopped) { throw new IllegalStateException(\"Can't start activity that is not stopped.\"); } if (r.activity.mFinished) { return; } // Start activity.performStart(\"handleStartActivity\"); r.setState(ON_START); } \u53ef\u4ee5\u770b\u5230\u5f53activity\u7684 mFinished \u53d8\u91cf\u4e3a true \u65f6\uff0c\u4ee3\u7801\u5c31\u4e0d\u4f1a\u5f80\u4e0b\u6267\u884c\uff0c\u6240\u4ee5\u5c31\u4e0d\u4f1a\u6267\u884c onStart \u751f\u547d\u5468\u671f\u65b9\u6cd5\u3002\u540c\u7406 handleResumeActivity \u4e5f\u662f\u4e00\u6837\u7684\u6267\u884c\u903b\u8f91\u3002","title":"\u8fd9\u624d\u662f\u91cd\u70b9"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/","text":"\u5b66\u4f1a\u81ea\u5b9a\u4e49LayoutManager \u6700\u5f00\u59cb\u6211\u5728\u5b66\u4e60\u81ea\u5b9a\u4e49LayoutManager\u7684\u65f6\u5019\uff0c\u4e5f\u662f\u7f51\u4e0a\u641c\u6587\u7ae0\uff0c\u770b\u535a\u5ba2\uff0c\u4ee5\u53ca\u4e00\u4e9b\u516c\u4f17\u53f7\u7684\u63a8\u6587\u3002\u521a\u5f00\u59cb\u770b\u7684\u65f6\u5019\u89c9\u5f97\u8fd8\u662f\u90a3\u4e48\u56de\u4e8b\uff0c\u4f46\u662f\u5728\u6162\u6162\u7684\u6df1\u5165LayoutManager\u6e90\u7801\u624d\u53d1\u73b0\u5f88\u591a\u7684\u6587\u7ae0\u5176\u5b9e\u90fd\u662f\u4e0d\u5408\u683c\uff0c\u4e43\u81f3\u53ef\u4ee5\u8bf4\u662f\u5f88\u8bef\u5bfc\u4eba\u7684\uff0c\u6240\u4ee5\u6211\u624d\u60f3\u81ea\u5df1\u5199\u4e00\u7bc7\u5173\u4e8e\u81ea\u5b9a\u4e49LayoutManager\u7684\u6587\u7ae0\uff0c\u5e0c\u671b\u80fd\u5e2e\u52a9\u5230\u4e00\u90e8\u5206\u4eba\u80fd\u5165\u95e8\u81ea\u5b9a\u4e49LayoutManager\u5427\u3002 \u4e00\u4e9b\u81ea\u5b9a\u4e49LayoutManager\u4f18\u79c0\u6587\u7ae0\u63a8\u8350 \u524d\u9762\u867d\u7136\u8bf4\u6709\u5f88\u591a\u535a\u5ba2\u662f\u4e0d\u5408\u683c\u7684\uff0c\u4f46\u662f\u540c\u6837\u8fd8\u662f\u6709\u4e00\u4e9b\u4f18\u79c0\u7684\u4f5c\u8005\u7684\u535a\u5ba2\u5bf9\u5728\u4e0b\u542f\u53d1\u5f88\u5927\uff0c\u7279\u522b\u662f Dave \u5927\u795e building-a-recyclerview-layoutmanager-part \u7684\u7cfb\u5217\u7684\u6587\u7ae0\uff0c\u771f\u7684\u662f\u8bb2\u5f97\u4e0d\u80fd\u518d\u68d2\u4e86\uff01\u867d\u7136\u5df2\u7ecf\u662f14\u5e74\u7684\u6587\u7ae0\uff0c\u4f46\u662f\u653e\u5728\u5f53\u4e0b\u6765\u770b\uff0c\u4f9d\u7136\u662f\u81ea\u5b9a\u4e49LayoutManager\u76f8\u5173\u6587\u7ae0\u7684\u9876\u5cf0\uff0c\u867d\u7136\u6587\u7ae0\u662f\u82f1\u6587\uff0c\u4f46\u662f\u8fd8\u662f\u5f3a\u70c8\u63a8\u8350\u9605\u8bfb\uff01 Building a RecyclerView LayoutManager \u2013 Part 1 Building a RecyclerView LayoutManager \u2013 Part 2 Building a RecyclerView LayoutManager \u2013 Part 3 \u65e0\u610f\u4e2d\u53d1\u73b0\u4e86\u6709B\u7ad9\u5927\u4f6c\u7ffb\u8bd1\u4e86 Dave \u5927\u795e\u8bb2\u89e3\u81ea\u5b9a\u4e49LayoutManager\u7684\u57f9\u8bad\u89c6\u9891\uff0c\u8fd9\u7b80\u76f4\u662f\u5b9d\u85cf\uff0c\u5efa\u8bae\u6536\u85cf\u591a\u6b21\u89c2\u770b\u3002 Mastering RecyclerView Layouts \u5176\u6b21\u5c31\u662f \u5f20\u65ed\u7ae5 \u5728CSDN\u53d1\u5e03 \u638c\u63e1\u81ea\u5b9a\u4e49LayoutManager \u76f8\u5173\u535a\u5ba2\uff0c\u7279\u522b\u662f\u6587\u7ae0\u4e2d\u7684\u5e38\u89c1\u8bef\u533a\u548c\u6ce8\u610f\u4e8b\u9879\uff0c\u5efa\u8bae\u591a\u6b21\u9605\u8bfb\u3002 https://blog.csdn.net/zxt0601/article/details/52948009 \u7279\u522b\u662f\u8fd9\u53e5\u8bdd\u9053\u51fa\u4e86\u81ea\u5b9a\u4e49LayoutManager\u7684\u771f\u8c1b\uff1a \u4e00\u4e2a\u5408\u683c\u7684LayoutManager\uff0cchildCount\u6570\u91cf\u4e0d\u5e94\u5927\u4e8e\u5c4f\u5e55\u4e0a\u663e\u793a\u7684Item\u6570\u91cf\uff0c\u800cscrapCache\u7f13\u5b58\u533a\u57df\u7684Item\u6570\u91cf\u5e94\u8be5\u662f0 \uff0c\u8fd9\u91cc\u5efa\u8bae\u591a\u8bfb\u51e0\u904d\uff0c\u52a0\u6df1\u7406\u89e3\u3002 \u6700\u540e\u5c31\u662f \u9648\u5c0f\u5a9b \u7684 Android\u81ea\u5b9a\u4e49LayoutManager\u7b2c\u5341\u4e00\u5f0f\u4e4b\u98de\u9f99\u5728\u5929 \uff0c\u8fd9\u4e48\u5927\u4f6c\u7684\u601d\u8def\u603b\u662f\u90a3\u4e48\u5947\u7279\uff0c\u903b\u8f91\u603b\u662f\u90a3\u4e48\u6e05\u6670\u3002 https://blog.csdn.net/u011387817/article/details/81875021 \u5148\u8bb2\u8bb2\u81ea\u5b9a\u4e49LayoutManager\u7684\u5e38\u89c4\u5957\u8def \u7ee7\u627f RecyclerView.LayoutManager \u5e76\u5b9e\u73b0 generateDefaultLayoutParams() \u65b9\u6cd5\u3002 \u6309\u9700\uff0c\u91cd\u5199 onMeasure() \u6216 isAutoMeasureEnabled() \u65b9\u6cd5\u3002 \u91cd\u5199 onLayoutChildren() \u5f00\u59cb\u7b2c\u4e00\u6b21\u586b\u5145itemView\u3002 \u91cd\u5199 canScrollHorizontally() \u548c canScrollVertically() \u65b9\u6cd5\u652f\u6301\u6ed1\u52a8\u3002 \u91cd\u5199 scrollHorizontallyBy() \u548c scrollVerticallyBy() \u65b9\u6cd5\u5728\u6ed1\u52a8\u7684\u65f6\u5019\u586b\u5145\u548c\u56de\u6536itemView\u3002 \u91cd\u5199 scrollToPosition() \u548c smoothScrollToPosition() \u65b9\u6cd5\u652f\u6301\u3002 \u89e3\u51b3\u8f6f\u952e\u76d8\u5f39\u51fa\u6216\u6536\u8d77\u5bfc\u81f4 onLayoutChildren() \u65b9\u6cd5\u88ab\u91cd\u65b0\u8c03\u7528\u7684\u95ee\u9898\u3002 \u518d\u8bf4\u8bf4\u81ea\u5b9a\u4e49LayoutManager\u5bb9\u6613\u8fdb\u5165\u7684\u8bef\u533a \u4f7f\u7528 RecyclerView \u6216\u8005\u8bf4 \u7ee7\u627f\u4e86LayoutManager \u5c31\u81ea\u5e26\u4e86\u590d\u7528\u673a\u5236\u548c\u89c6\u56fe\u56de\u6536 \u672a\u6b63\u786e\u7684\u91cd\u5199 onMeasure() \u6216 isAutoMeasureEnabled() \u65b9\u6cd5 onLayoutChildren() \u65f6\u76f4\u63a5\u52a0\u8f7d\u4e86\u5168\u90e8itemView \u672a\u652f\u6301 scrollToPosition() \u6216 smoothScrollToPosition() \u65b9\u6cd5 \u672a\u89e3\u51b3\u8f6f\u952e\u76d8\u5f39\u51fa\u6216\u6536\u8d77 onLayoutChildren() \u65b9\u6cd5\u91cd\u65b0\u8c03\u7528\u7684\u95ee\u9898\u3002 \u4f7f\u7528RecyclerView\u6216\u8005\u8bf4\u7ee7\u627f\u4e86LayoutManager\u5c31\u81ea\u5e26\u4e86\u590d\u7528\u673a\u5236\u548c\u89c6\u56fe\u56de\u6536\uff1f \u6211\u53d1\u73b0\u5f88\u591a\u4eba\u628aRecyclerView\u60f3\u5f97\u592a\u5b8c\u7f8e\u4e86\uff0c\u8ba4\u4e3aRecyclerView\u5929\u751f\u5c31\u81ea\u5e26\u4e86\u590d\u7528\u673a\u5236\u548c\u89c6\u56fe\u56de\u6536\uff0c\u53ea\u8981\u4f7f\u7528RecyclerView\u6839\u672c\u4e0d\u7528\u5173\u5fc3\u52a0\u8f7ditem\u7684\u6570\u91cf\u3002\u5176\u5b9e\u4e0d\u7528\u5f88\u4ed4\u7ec6\u7684\u9605\u8bfbRecyclerView\u7684\u6e90\u7801\u4e5f\u80fd\u53d1\u73b0\uff0cRecyclerView\u53ea\u4e0d\u8fc7\u662f\u4e00\u4e2a\u63d0\u4f9b\u4e86 \u591a\u7ea7\u7f13\u5b58 \u7684 \u8d85\u7ea7ViewGroup \u800c\u5df2\u3002\u5e76\u4e14RecyclerView\u53ea\u662f\u5c06\u81ea\u5df1\u7684 onLayout \u65b9\u6cd5\u5b8c\u5168\u59d4\u6258\u7ed9\u4e86LayoutManager\uff0c\u6240\u4ee5\u7ee7\u627fLayoutManager\u4e5f\u4e0d\u4f1a\u81ea\u5e26\u590d\u7528\u673a\u5236\u548c\u89c6\u56fe\u56de\u6536\u3002 \u7528 LinearLayoutManager \u4e3e\u4f8b\uff0c\u5728LinearLayoutManager\u6e90\u7801\u4e2d\u6709\u4e00\u4e2a recycleByLayoutState() \u65b9\u6cd5\uff0c\u5b83\u5728\u6eda\u52a8\u586b\u5145itemView\u65f6\u8c03\u7528\uff0c\u7528\u6765\u56de\u6536\u8d85\u51fa\u5c4f\u5e55\u7684itemView\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u81ea\u5b9a\u4e49LayoutManager\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u6ce8\u610f\uff0c\u4ec0\u4e48\u65f6\u5019\u8be5\u56de\u6536itemView\u662f\u7531\u6211\u4eec\u5f00\u53d1\u8005\u81ea\u5df1\u51b3\u5b9a\uff01 @Override public int scrollHorizontallyBy(int dx, RecyclerView.Recycler recycler, RecyclerView.State state) { ... return scrollBy(dx, recycler, state); } int scrollBy(int delta, RecyclerView.Recycler recycler, RecyclerView.State state) { ... fill(recycler, mLayoutState, state, false); ... } int fill(RecyclerView.Recycler recycler, LayoutState layoutState, RecyclerView.State state, boolean stopOnFocusable) { recycleByLayoutState(recycler, layoutState); ... layoutChunk() ... recycleByLayoutState(recycler, layoutState); } void recycleByLayoutState(){ ... if (layoutState.mLayoutDirection == LayoutState.LAYOUT_START) { recycleViewsFromEnd(recycler, scrollingOffset, noRecycleSpace); } else { recycleViewsFromStart(recycler, scrollingOffset, noRecycleSpace); } } \u672a\u6b63\u786e\u7684\u91cd\u5199onMeasure()\u6216isAutoMeasureEnabled()\u65b9\u6cd5 \u4e0a\u9762 \u5e38\u89c4\u5957\u8def \u4e2d\u6211\u5199\u7684\u662f \u6309\u9700 \u91cd\u5199onMeasure()\u548cisAutoMeasureEnabled()\u65b9\u6cd5\uff0c\u4e3a\u4ec0\u4e48\u662f \u6309\u9700 \u5462\uff1f\u56e0\u4e3a LayoutManger \u7684 onMeasure() \u6709\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u5e76\u4e14 isAutoMeasureEnabled() \u9ed8\u8ba4\u8fd4\u56de\u7684 false \u3002\u8fd9\u4e5f\u662f\u4e3a\u5565\u6709\u4e9b\u535a\u5ba2\u6216\u8005Github\u7684\u6e90\u7801\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u90fd\u6ca1\u6709\u91cd\u5199\u5374\u4f9d\u7136\u6ca1\u6709\u95ee\u9898\u7684\u539f\u56e0\u6240\u5728\uff0c\u56e0\u4e3a\u4ed6\u4eec\u76f4\u63a5\u628a RecyclerView \u7684 width \u548c height \u90fd\u8bbe\u7f6e\u6210\u4e86 match_parent \u3002\u5f53\u7136\u5982\u679c\u4f60\u80fd\u786e\u5b9a\u4f60\u7684LayoutManager\u53ea\u652f\u6301\u5bbd\u9ad8\u540c\u65f6\u8981 match_parent \u624d\u80fd\u6b63\u5e38\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u641e\u3002 \u90a3\u4e48\u95ee\u9898\u53c8\u6765\u4e86\uff0c\u4ec0\u4e48\u65f6\u5019\u91cd\u5199 onMeasure() \uff0c\u4ec0\u4e48\u65f6\u5019\u91cd\u5199 isAutoMeasureEnabled() \uff0c\u6216\u8005\u6709\u6ca1\u6709\u60c5\u51b5\u540c\u65f6\u91cd\u5199\u4e24\u4e2a\u65b9\u6cd5\u5462\uff1f\u8fd9\u91cc\u5728\u6211\u9605\u8bfb\u4e86\u5927\u91cf\u6e90\u7801\u548c\u6e90\u7801\u6ce8\u91ca\u5f97\u51fa\u7684\u7ed3\u8bba\u5c31\u662f\uff1a\u4e0d\u8981\u540c\u65f6\u91cd\u5199\u4e24\u4e2a\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u4e92\u65a5\u7684\uff0c\u770b\u6e90\u7801\u4f60\u5c31\u61c2\u4e86\u3002\u91cd\u5199 onMeasure() \u7684\u60c5\u51b5\u4e5f\u6781\u5c11\uff0c\u9664\u975e\u50cf\u6211\u90a3\u4e2a PickerLayoutManger \u4e00\u6837\uff0c\u8981\u8bbe\u7f6e\u4e00\u4e2a\u7edd\u5bf9\u7684\u9ad8\u5ea6\u7ed9LayoutManager\u3002 isAutoMeasureEnabled() \u662f\u81ea\u6d4b\u91cf\u6a21\u5f0f\uff0c\u7ed9 RecyclerView \u7684 wrap_content \u7684\u7528\u7684\uff0c\u5982\u679c\u4f60\u7684LayoutManager\u8981\u652f\u6301 wrap_content \u90a3\u5c31\u5fc5\u987b\u91cd\u5199\u3002 onLayoutChildren()\u65f6\u76f4\u63a5\u52a0\u8f7d\u4e86\u5168\u90e8itemView \u7f51\u4e0a\u535a\u5ba2\u4ee5\u53caGithub\u4e0a\u6709\u4e00\u4e9bDemo\uff0c\u666e\u904d\u5b58\u5728\u4e0b\u9762\u8fd9\u79cd\u5199\u6cd5\uff1a for (int i = 0; i < getItemCount(); i++) { View view = recycler.getViewForPosition(i); addView(view); ...... } \u6709\u4e00\u8bf4\u4e00\uff0c\u80fd\u5199\u51fa\u8fd9\u79cd\u5199\u6cd5\u7684\u4eba\u771f\u7684\u4e0d\u662f\u5728\u641e\u7b11\u5417\uff1f\u5728 onLayoutChildren \u7684\u65f6\u5019\u76f4\u63a5 \u904d\u5386itemCount \u7136\u540e addView \uff0c\u8fd9\u771f\u7684\u4e0d\u662f\u5728\u4f5c\u6b7b\u5417\uff1f\u5c31\u7b97\u6709\u7f13\u5b58\u7b2c\u4e00\u6b21\u904d\u5386\u8fd8\u662f\u4f1a\u5168\u90e8\u8d70\u4e00\u904d onCreateViewHolder \u554a\uff0c\u81ea\u5df1\u5c31\u4e0d\u80fd\u628aitemCount\u8bbe\u4e2a\u5927\u70b9\u7684\u6570\u8bd5\u8bd5\u4f1a\u4e0d\u4f1a\u5361\u6b7bUI\u6e32\u67d3\u5417\uff01\u5f53\u6211\u6709\u8fd9\u79cd\u60f3\u6cd5\uff0c\u800c\u4e14\u8fd8\u60f3\u53bb\u8bc4\u8bba\u533a\u8ba8\u6559\u8ba8\u6559\u7684\u65f6\u5019\uff0c\u6211\u53c8\u53d1\u73b0\u4e86\u4e0a\u9762\u90a3\u79cd\u5199\u6cd5\u7684\u53d8\u79cd\uff0c\u7f62\u4e86\u7f62\u4e86\uff0c\u8fd9\u55b7\u5b50\u4e0d\u5f53\u4e5f\u7f62\ud83d\ude0f\ud83d\ude0f\ud83d\ude0f\u3002 for (int i = 0; i < getItemCount(); i++) { View view = recycler.getViewForPosition(i); addView(view); ...... \u8bb0\u5f55\u4e00\u4e9bitem\u7684\u5bbd\u9ad8\uff0c\u4f4d\u7f6e\u7b49\u4fe1\u606f ..... recyler.recycleView(view) } \u6700\u7b80\u5355\u7684\u6d4b\u8bd5\u65b9\u6cd5\u5c31\u662f\u628a itemCount \u8bbe\u7f6e\u4e3a Int.MAX_VALUE \uff0c\u6ca1\u6709\u5f02\u5e38\u53d1\u751f\u5c31\u7b97OK\u3002 \u672a\u652f\u6301scrollToPosition()\u6216smoothScrollToPosition()\u65b9\u6cd5 \u8fd9\u4e2a\u95ee\u9898\u4e25\u8c28\u7684\u6765\u8bb2\u4e5f\u4e0d\u7b97\u4ec0\u4e48\u5927\u95ee\u9898\uff0c\u4f46\u662f\u79c1\u4ee5\u4e3a\u4e00\u4e2a\u5408\u683c\u7684LayoutManager\u7684\u8fd8\u662f\u5e94\u8be5\u53bb\u9002\u914d\u8fd9\u4e24\u4e2a\u65b9\u6cd5\uff0c\u6bd5\u7adf RecyclerView \u7684 scrollToPosition() \u548c smoothScrollToPosition() \u53ea\u662f\u5bf9LayoutManager\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7684\u5c01\u88c5\uff0c\u7279\u522b\u662f\u4e00\u4e9b\u53d1\u5e03\u5230Github\u4e0a\u7684\u5f00\u6e90\u5e93\u66f4\u5e94\u8be5\u53bb\u9002\u914d\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u3002 \u672a\u89e3\u51b3\u8f6f\u952e\u76d8\u5f39\u51fa\u6216\u6536\u8d77onLayoutChildren()\u65b9\u6cd5\u91cd\u65b0\u8c03\u7528\u7684\u95ee\u9898 \u8fd9\u4e2a\u95ee\u9898\u6211\u53d1\u73b0\u5927\u591a\u6570\u7684\u4eba\u90fd\u6ca1\u6ce8\u610f\u5230\uff0c\u800c\u4e14\u6709\u4e00\u4e9b\u5f00\u6e90\u5e93\u4e5f\u662f\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u7684\u3002\u95ee\u9898\u51fa\u73b0\u7684\u6839\u6e90\u5c31\u662f\u5728\u5f53 EditText \u83b7\u53d6\u5230\u7126\u70b9\u5bfc\u81f4 \u8f6f\u952e\u76d8\u5f39\u8d77\u6216\u8005\u6536\u8d77 \u7684\u65f6\u5019\uff0cLayoutManager\u4f1a\u91cd\u65b0\u56de\u8c03 onLayoutChildren() \u65b9\u6cd5\u3002\u5982\u679c\u4e00\u4e2aLayoutManager\u7684 onLayoutChildren \u65b9\u6cd5\u5199\u5f97\u4e0d\u591f\u5408\u7406\uff0c\u5c31\u4f1a\u7ed9\u4f7f\u7528\u7684\u4eba\u5e26\u6765\u56f0\u6270\uff0c\u8be6\u7ec6\u7684\u5185\u5bb9\u4f1a\u653e\u5728\u4e0b\u9762\u5f00\u59cb\u81ea\u5b9a\u4e49LayoutManager\u518d\u8bb2\u3002 \u8bdd\u8bf4\u5230\u8fd9\u91cc\uff0c\u6211\u5728\u770b LinearLayoutManager \u6e90\u7801\u53c8\u4e00\u6b21\u5bf9Google\u5de5\u7a0b\u5e08\u6df1\u6df1\u7684\u6298\u670d\uff0c\u5728LinearLayoutManager\u7684 onLayoutChildren \u65b9\u6cd5\u4e2d\u6709\u4e00\u6bb5\u4ee3\u7801\u5c31\u662f\u5bf9\u8fd9\u79cd\u95ee\u9898\u7684\u5904\u7406\uff0c\u5e76\u4e14\u8fd8\u662f\u5347\u7ea7\u7248\u3002 final View focused = getFocusedChild() ... else if (focused != null && (mOrientationHelper.getDecoratedStart(focused) >= mOrientationHelper.getEndAfterPadding() || mOrientationHelper.getDecoratedEnd(focused) <= mOrientationHelper.getStartAfterPadding())) { mAnchorInfo.assignFromViewAndKeepVisibleRect(focused, getPosition(focused)); } assignFromViewAndKeepVisibleRect \u65b9\u6cd5\u662f\u5173\u952e\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u81ea\u5df1\u53bb\u770b\u770b\u6e90\u7801\u3002\u5927\u6982\u903b\u8f91\u5c31\u662f\uff1a\u83b7\u53d6\u5230RecyclerView\u4e2d\u83b7\u53d6\u5230\u7126\u70b9\u7684\u90a3\u4e2aitemView\u548c\u5b83\u7684position\uff0c\u5e76\u5f00\u59cb\u8ba1\u7b97\u5176\u4f4d\u7f6e\uff0c\u8ba9\u5b83\u4fdd\u6301\u5728\u8f6f\u952e\u76d8\u4e0a\u9762\u7684\u53ef\u89c1\u8303\u56f4\u5185\u3002 \u4e00\u4e9b\u6709\u7528\u7684Api \u5728\u5f00\u59cb\u81ea\u5b9a\u4e49LayoutManager\u524d\uff0c\u5148\u89e3\u91ca\u4e00\u4e9bApi\u7684\u7528\u6cd5\uff0c\u8fd9\u6837\u53ef\u4ee5\u66f4\u5feb\u7684\u8fdb\u5165\u4e3b\u9898\u3002 \u83b7\u53d6\u4e00\u4e2aView val view = recycler.getViewForPosition(position) \u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u4ece Recycler \u4e2d\u83b7\u53d6\u5230\u4e00\u4e2a\u4e0d\u4f1a\u4e3a null \u7684View\uff0c\u5982\u679cposition\u8d85\u8fc7itemCount\u6216\u5c0f\u4e8e0\uff0c\u5c31\u4f1a\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\u3002\u5185\u90e8\u4ee3\u7801\u903b\u8f91\u5c31\u662f\u4ece\u4e0d\u540c\u7684\u7f13\u5b58\u4e2d\u62ffView\uff0c\u6709\u5c31\u76f4\u63a5\u8fd4\u56de\u8fd9\u4e2aView\uff0c\u6ca1\u6709\u5c31\u7528 onCreateViewHolder \u521b\u5efa\u5e76\u8fd4\u56de\u3002 Recycler \u7c7b\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u4e00\u4e2a\u56de\u6536\u7ba1\u7406\u7ad9\uff0c\u9700\u8981View\u65f6\u5c31\u5411\u5b83\u8981\uff0c\u4e0d\u9700\u8981\u65f6\u5c31\u4e22\u7ed9\u5b83\u3002 \u5c06View\u6dfb\u52a0\u5230RecyclerView\u4e2d addDisappearingView(View child) addDisappearingView(View child, int index) addView(View child) addView(View child, int index) addDisappearingView \u65b9\u6cd5\u4e3b\u8981\u7528\u4e8e\u652f\u6301\u9884\u6d4b\u52a8\u753b\uff0c\u4f8b\u5982\uff1a notifyItemRemoved \u65f6\u7684\u5220\u9664\u52a8\u753b addView \u65b9\u6cd5\u66f4\u5e38\u7528\uff0c\u53ea\u8981\u662f\u6dfb\u52a0View\u90fd\u9700\u8981\u7528\u5230\u5b83\u3002 \u6d4b\u91cfView measureChild(@NonNull View child, int widthUsed, int heightUsed) measureChildWithMargins(@NonNull View child, int widthUsed, int heightUsed) \u4e24\u4e2a\u65b9\u6cd5\u90fd\u662f\u7528\u6765\u6d4b\u91cfView\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u4ece\u540d\u5b57\u6211\u4eec\u4e5f\u80fd\u770b\u51fa\uff0c\u4e00\u4e2a\u65b9\u6cd5\u662f\u4f1a\u5e26\u4e0a margin \u8ba1\u7b97\uff0c\u53e6\u5916\u4e00\u4e2a\u5219\u4e0d\u4f1a\u3002 widthUsed \u548c heightUsed \u4e5f\u80fd\u4ece\u540d\u79f0\u770b\u51fa\u7aef\u502a\uff0c\u4e00\u822c\u4f200\u5c31\u53ef\u4ee5\u4e86\uff0c\u8ddf\u7740 LinearLayoutManager \u5199\u5c31\u5bf9\u4e86\u3002 \u6ce8\u610f\uff1a \u6d4b\u91cfView\u4e5f\u4e0d\u4e00\u5b9a\u8981\u4f7f\u7528\u8fd9\u4e24\u4e2a\u65b9\u6cd5\uff0c\u5728\u7279\u6b8a\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5199\u6d4b\u91cf\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u5728 StaggeredGridLayoutManager \u4e2d\u5c31\u662f\u81ea\u5df1\u91cd\u5199\u7684\u6d4b\u91cf\u65b9\u6cd5 measureChildWithDecorationsAndMargin() \uff0c\u4ee5\u53ca\u6211\u7684\u4e00\u4e2a\u5f00\u6e90\u5e93 PickerLayoutManager \u4e2d\u5728 onMeasure \u4e2d\u76f4\u63a5\u4f7f\u7528\u4e86 view.measure() \u8fd9\u79cd\u539f\u751f\u65b9\u6cd5\u3002 \u6446\u653eView layoutDecorated(@NonNull View child, int left, int top, int right, int bottom) layoutDecoratedWithMargins(@NonNull View child, int left, int top, int right, int bottom) { \u8fd9\u4e24\u4e2a\u65b9\u6cd5\u6ca1\u5565\u597d\u8bf4\u7684\uff0c\u5c31\u662f\u5bf9 view.layout() \u7684\u5c01\u88c5\uff0c\u53ea\u8981\u5199\u8fc7\u81ea\u5b9a\u4e49ViewGroup\u7684\u4eba\u5e94\u8be5\u4e5f\u4e0d\u4f1a\u964c\u751f\u3002 \u83b7\u53d6View\u7684\u76f8\u5173\u4fe1\u606f int getPosition(@NonNull View view) \u83b7\u53d6View\u7684layout position\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5341\u5206\u6709\u7528\uff0c\u4e5f\u6ca1\u5565\u4eba\u8bb2\u5230\u8fc7\u3002 int getDecoratedMeasuredWidth(@NonNull View child) int getDecoratedMeasuredHeight(@NonNull View child) \u83b7\u53d6View\u7684\u5bbd\u9ad8\uff0c\u5e76\u4e14\u662f\u5305\u542b\u4e86ItemDecoration\u7684\u5360\u6bd4\u3002 int getDecoratedTop(@NonNull View child) int getDecoratedLeft(@NonNull View child) int getDecoratedRight(@NonNull View child) int getDecoratedBottom(@NonNull View child) \u83b7\u53d6View\u7684left\uff0ctop\uff0cright\uff0cbottom\u8ddd\u79bbRecyclerView\u8fb9\u7f18\u7684\u8ddd\u79bb\uff0c\u540c\u6837\u5305\u542b\u4e86\u4e86ItemDecoration\u7684\u5360\u6bd4\u3002 \u79fb\u52a8View offsetChildrenHorizontal(@Px int dx) offsetChildrenVertical(@Px int dy) \u6c34\u5e73\u6216\u5782\u76f4\u65b9\u5411\u7684\u79fb\u52a8\u5168\u90e8\u5b50View\uff0c\u770b\u6e90\u7801\u5f97\u77e5\u5176\u5b9e\u5c31\u662f\u904d\u5386\u8c03\u7528\u4e86\u5b50View\u7684 offsetTopAndBottom \u6216 offsetLeftAndRight \u65b9\u6cd5\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u5728\u81ea\u5b9a\u4e49ViewGroup\u79fb\u52a8\u5b50View\u65f6\u4e5f\u7ecf\u5e38\u7528\u5230\u3002 \u56de\u6536View detachAndScrapAttachedViews(@NonNull Recycler recycler) detachAndScrapView(@NonNull View child, @NonNull Recycler recycler) detachAndScrapViewAt(int index, @NonNull Recycler recycler) removeAndRecycleAllViews(@NonNull Recycler recycler) removeAndRecycleView(@NonNull View child, @NonNull Recycler recycler) removeAndRecycleViewAt(int index, @NonNull Recycler recycler) \u4e0a\u9762\u51e0\u4e2a\u65b9\u6cd5\u53ea\u8981\u8bb0\u4f4f\u662f detachAndScrap \u5f00\u5934\u7684\u5c31\u662f\u8f7b\u91cf\u7ea7\u7684\u56de\u6536View\uff0c\u9a6c\u4e0a\u53c8\u8981\u6dfb\u52a0View\u56de\u6765\u3002 removeAndRecycle \u5f00\u5934\u7684\u5c31\u662f\u52a0\u5f3a\u7248\u7684\u56de\u6536View\uff0c\u5f53\u518d\u6b21\u6dfb\u52a0View\u56de\u6765\u65f6\u4f1a\u6267\u884c onBindViewHolder \u65b9\u6cd5\u3002 \u6211\u770b\u7f51\u4e0a\u6ca1\u5565\u535a\u5ba2\u771f\u6b63\u8bb2\u6e05\u695a\u4ec0\u4e48\u65f6\u5019\u8be5\u7528\u54ea\u4e2a\u65b9\u6cd5\u6765\u56de\u6536View\u7684\uff0c\u8fd9\u91cc\u6709\u4e2a\u7b80\u5355\u7684\u529e\u6cd5\u533a\u5206\u4ec0\u4e48\u65f6\u5019\u8be5\u7528\u54ea\u4e00\u4e2a\u56de\u6536View\u7684\u65b9\u6cd5\uff0c\u90a3\u5c31\u662f\uff1a \u5728 onLayoutChildren \u56de\u6536View\u4f7f\u7528 detachAndScrap \u7684\u7cfb\u5217\u65b9\u6cd5\uff0c\u56e0\u4e3aonLayoutChildren\u65b9\u6cd5\u4f1a\u8fde\u7eed\u591a\u6b21\u8c03\u7528\uff0c detachAndScrap \u7cfb\u5217\u7684\u65b9\u6cd5\u5c31\u662f\u7528\u5728\u8fd9\u65f6\u5019\u3002 \u5728 \u6eda\u52a8\u53d1\u751f\u540e \u8981\u56de\u6536\u8d85\u51fa\u5c4f\u5e55\u4e0d\u53ef\u89c1\u7684View\u65f6\u7528 removeAndRecycle \u7684\u7cfb\u5217\u65b9\u6cd5\u3002 \u522b\u95ee\u6211\u4e3a\u5565\u77e5\u9053\uff0c\u56e0\u4e3a\u6211\u770b LinearLayoutManager \u548c StaggeredGridLayoutManager \u4e5f\u662f\u8fd9\u4e48\u7528\u7684\uff0c\u563b\u563b\uff01read the fucking source code~ OrientationHelper\u5e2e\u52a9\u7c7b \u8fd9\u4e2a\u5e2e\u52a9\u7c7b\u503c\u5f97\u597d\u597d\u5938\u8d5e\uff0c\u8fd9\u4e5f\u662f\u6211\u5728\u9605\u8bfb LinearLayoutManager \u6e90\u7801\u65f6\u53d1\u73b0\u7684\uff0cOrientationHelper\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u62bd\u8c61\u4e86\u5927\u91cf\u4fbf\u5229\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u4e24\u4e2a\u9759\u6001\u65b9\u6cd5 createHorizontalHelper \u548c createVerticalHelper \u7528\u6765\u521b\u5efa\u76f8\u5e94\u65b9\u5411\u7684\u5e2e\u52a9\u7c7b\u4f9b\u5f00\u53d1\u8005\u4f7f\u7528\u3002\u4f7f\u7528OrientationHelper\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u5982\u4e0b\u6211\u5728 StackLayoutManager \u7684\u6837\u677f\u4ee3\u7801\u3002 /** * \u79fb\u52a8\u6240\u6709\u5b50view */ private fun offsetChildren(amount: Int) { if (orientation == HORIZONTAL) { offsetChildrenHorizontal(amount) } else { offsetChildrenVertical(amount) } } ... private fun getTotalSpace(): Int { return if (orientation == HORIZONTAL) { width - paddingLeft - paddingRight } else { height - paddingTop - paddingBottom } } \u6b63\u5f0f\u5f00\u59cb\u81ea\u5b9a\u4e49LayoutManager \u73b0\u5728\u6211\u4eec\u5f00\u59cb\u6b63\u5f0f\u8bb2\u89e3\u5982\u4f55\u81ea\u5b9a\u4e49\u4e00\u4e2aLayoutManager\uff0c\u5927\u6982\u6b65\u9aa4\u5c31\u662f\u5982\u4e0a\u9762 \u81ea\u5b9a\u4e49LayoutManager\u7684\u5e38\u89c4\u5957\u8def \u4e00\u6837\uff0c\u5e76\u4e14\u6211\u4f1a\u7528\u6211\u5199\u7684\u4e24\u4e2a\u5f00\u6e90\u5e93 PickerLayoutManager \u548c StackLayoutManager \u6765\u8bb2\u89e3\uff0c\u559c\u6b22\u7684\u53ef\u4ee5 star \u4e00\u4e0b\u3002 https://github.com/simplepeng/StackLayoutManager https://github.com/simplepeng/PickerLayoutManager \u7ee7\u627fLayoutManager\u5e76\u5b9e\u73b0generateDefaultLayoutParams()\u65b9\u6cd5 \u8fd9\u6ca1\u5565\u597d\u8bf4\u7684\uff0c generateDefaultLayoutParams \u662f\u62bd\u8c61\u65b9\u6cd5\uff0c\u7ee7\u627fLayoutManager\u5c31\u5fc5\u987b\u5b9e\u73b0\uff0c\u4f60\u81ea\u5b9a\u4e49\u7684LayoutManager\u7684itemView\u652f\u6301\u5565LayoutParams\u5c31\u5199\u54ea\u79cd\uff0c\u6bd4\u5982\u6211\u5199\u7684 PickerLayoutManager \u548c StackLayoutManager \u5c31\u662f\u4e0d\u540c\u7684\u5b9e\u73b0\u3002 class PickerLayoutManager:: RecyclerView.LayoutManager(){ override fun generateDefaultLayoutParams(): RecyclerView.LayoutParams { return if (orientation == HORIZONTAL) { RecyclerView.LayoutParams( RecyclerView.LayoutParams.WRAP_CONTENT, RecyclerView.LayoutParams.MATCH_PARENT ) } else { RecyclerView.LayoutParams( RecyclerView.LayoutParams.MATCH_PARENT, RecyclerView.LayoutParams.WRAP_CONTENT ) } } } class StackLayoutManager: RecyclerView.LayoutManager(){ override fun generateDefaultLayoutParams(): RecyclerView.LayoutParams { return RecyclerView.LayoutParams( ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT ) } } \u91cd\u5199onMeasure()\u6216isAutoMeasureEnabled()\u65b9\u6cd5\u3002 class PickerLayoutManager:: RecyclerView.LayoutManager(){ override fun onMeasure( recycler: RecyclerView.Recycler, state: RecyclerView.State, widthSpec: Int, heightSpec: Int ) { if (state.itemCount == 0) { super.onMeasure(recycler, state, widthSpec, heightSpec) return } if (state.isPreLayout) return //\u5047\u5b9a\u6bcf\u4e2aitem\u7684\u5bbd\u9ad8\u4e00\u76f4\uff0c\u6240\u4ee5\u7528\u7b2c\u4e00\u4e2aview\u8ba1\u7b97\u5bbd\u9ad8\uff0c //\u8fd9\u79cd\u65b9\u5f0f\u53ef\u80fd\u4e0d\u592a\u597d val itemView = recycler.getViewForPosition(0) addView(itemView) //\u8fd9\u91cc\u4e0d\u80fd\u7528measureChild\u65b9\u6cd5\uff0c\u5177\u4f53\u770b\u5185\u90e8\u6e90\u7801\u5b9e\u73b0\uff0c\u5185\u90e8getWidth\u9ed8\u8ba4\u4e3a0 // measureChildWithMargins(itemView, 0, 0) itemView.measure(widthSpec, heightSpec) mItemWidth = getDecoratedMeasuredWidth(itemView) mItemHeight = getDecoratedMeasuredHeight(itemView) //\u56de\u6536\u8fd9\u4e2aView detachAndScrapView(itemView, recycler) //\u8bbe\u7f6e\u5bbd\u9ad8 setWidthAndHeight(mItemWidth, mItemHeight) } private fun setWidthAndHeight( width: Int, height: Int ) { if (orientation == HORIZONTAL) { setMeasuredDimension(width * visibleCount, height) } else { setMeasuredDimension(width, height * visibleCount) } } } class StackLayoutManager: RecyclerView.LayoutManager(){ override fun isAutoMeasureEnabled(): Boolean { return true } } \u4ece\u4e0a\u9762\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c PickerLayoutManager \u91cd\u5199\u4e86 onMeasure() \uff0c StackLayoutManager \u91cd\u5199\u4e86 isAutoMeasureEnabled() \u65b9\u6cd5\uff0c\u8ddf\u4e0a\u9762\u5e38\u89c1\u8bef\u533a\u4e2d\u7684\u8bb2\u5f97\u4e00\u81f4\u3002 \u91cd\u5199onLayoutChildren()\u5f00\u59cb\u586b\u5145\u5b50View\u3002 \u4ece\u8fd9\u4e2a\u65b9\u6cd5\u5f00\u59cb\uff0c PickerLayoutManager \u548c StackLayoutManager \u7684\u5957\u8def\u90fd\u662f\u4e00\u81f4\u7684\uff1a\u8ba1\u7b97\u5269\u4f59\u7a7a\u95f4->addView()->measureView()->layoutView()\u3002\u56e0\u4e3a\u90fd\u662f\u6a21\u4eff LinearLayoutManager \u7684\u5199\u6cd5\uff0c\u6240\u4ee5\u4e0b\u9762\u5f00\u59cb\u53ea\u7528 StackLayoutManager \u7684 \u4f2a\u4ee3\u7801 \u4f5c\u4ee3\u7801\u793a\u4f8b\uff0c\u7279\u522b\u7684\u5730\u65b9\u518d\u7528\u4e0d\u540c\u5b9e\u73b0\u7684\u4ee3\u7801\u505a\u6bd4\u8f83\u3002 \u8bb0\u4f4f\u4e0b\u9762\u7684\u5927\u591a\u6570\u90fd\u662f \u4f2a\u4ee3\u7801 \uff0c\u4e0d\u8981\u76f4\u63a5\u590d\u5236\u8fd0\u884c\uff0c\u56e0\u4e3a StackLayoutManager \u652f\u6301\u7684\u5c5e\u6027\u5f88\u591a\uff0c\u5305\u62ec\u4e86\u5982\u540c LinearLayoutManager \u7684 reverseLayout \u548c orientation \u7b49\uff0c\u5e76\u4e14\u4e0b\u9762\u7684\u793a\u4f8b\u53ea\u4f1a\u8bb2 orientation==HORIZONTAL \u7684\u4ee3\u7801\u5b9e\u73b0\uff0c\u4e3b\u8981\u662f\u6015\u4ee3\u7801\u903b\u8f91\u592a\u590d\u6742\u4e0d\u597d\u7406\u89e3\uff0c\u60f3\u770b\u5177\u4f53\u6e90\u7801\u7684\u53ef\u4ee5\u70b9\u51fb\u4e0a\u9762\u7684\u6e90\u7801\u94fe\u63a5\u67e5\u770b\u3002 override fun onLayoutChildren(recycler: RecyclerView.Recycler, state: RecyclerView.State) { //\u8f7b\u91cf\u7ea7\u7684\u5c06view\u79fb\u9664\u5c4f\u5e55 detachAndScrapAttachedViews(recycler) //\u5f00\u59cb\u586b\u5145view var totalSpace = width - paddingRight var currentPosition = 0 var left = 0 var top = 0 var right = 0 var bottom = 0 //\u6a21\u4effLinearLayoutManager\u7684\u5199\u6cd5\uff0c\u5f53\u53ef\u7528\u8ddd\u79bb\u8db3\u591f\u548c\u8981\u586b\u5145 //\u7684itemView\u7684position\u5728\u5408\u6cd5\u8303\u56f4\u5185\u624d\u586b\u5145View while (totalSpace > 0 && currentPosition < state.itemCount) { val view = recycler.getViewForPosition(currentPosition) addView(view) measureChild(view, 0, 0) right = left + getDecoratedMeasuredWidth(view) bottom = top + getDecoratedMeasuredHeight(view) layoutDecorated(view, left, top, right, bottom) currentPosition++ left += getDecoratedMeasuredWidth(view) //\u5173\u952e\u70b9 totalSpace -= getDecoratedMeasuredWidth(view) } //layout\u5b8c\u6210\u540e\u8f93\u51fa\u76f8\u5173\u4fe1\u606f logChildCount(\"onLayoutChildren\", recycler) } \u4e0a\u9762\u7684\u4ee3\u7801\u5f88\u7b80\u5355\u4e86\uff0c\u76f8\u4fe1\u5199\u8fc7\u81ea\u5b9a\u4e49ViewGroup\u7684\u4eba\u90fd\u80fd\u770b\u61c2\u3002\u4e0a\u9762\u4ee3\u7801\u5f88\u7b80\u5355\u7684\u5b9e\u73b0\u4e86\u4e00\u4e2a \u6a2a\u5411\u7684LinearLayoutManager \uff0c\u5982\u56fe\u6240\u793a\uff1a \u5e76\u4e14\u5728 layout \u7ed3\u675f\u540e\uff0c\u589e\u52a0\u4e86\u4e00\u4e2a\u8f93\u51fa childCount \u7684\u65b9\u6cd5\u3002 private fun logChildCount(tag: String, recycler: RecyclerView.Recycler) { Log.d(tag, \"childCount = $childCount -- scrapSize = ${recycler.scrapList.size}\") } D/onLayoutChildren: childCount = 9 -- scrapSize = 0 D/onLayoutChildren: childCount = 9 -- scrapSize = 0 D/onLayoutChildren: childCount = 9 -- scrapSize = 0 \u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u4eec\u6446\u653e\u4e86position 0-8 \u7684itemView\uff0c\u6240\u4ee5 childCount=9 \uff0c\u5e76\u4e14 scrapSize=0 \uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u4e2a\u65b9\u6cd5\u5199\u5f97\u662f\u5408\u683c\u7684\u3002\u56e0\u4e3a\u6211\u4eec\u7528 totalSpace > 0 \u4f5c\u4e86 while \u8868\u8fbe\u5f0f\u7684\u5224\u65ad\uff0c\u6240\u4ee5\u5e76\u4e0d\u7528\u5173\u5fc3 itemCount \u6709\u591a\u5927\u3002 \u91cd\u5199canScrollHorizontally()\u548ccanScrollVertically()\u65b9\u6cd5\u652f\u6301\u6ed1\u52a8\u3002 \u4e0a\u9762\u5df2\u7ecf\u521d\u59cb\u5316\u6446\u653e\u4e86\u4e00\u4e9bitemView\uff0c\u4f46\u662fRecyclerView\u8fd8\u662f\u4e0d\u80fd\u6ed1\u52a8\u7684\uff0c\u4e0d\u4fe1\u7684\u53ef\u4ee5\u8bd5\u8bd5\u3002\u6211\u4eec\u5fc5\u987b\u91cd\u5199\u4e0b\u9762\u4e24\u4e2a\u65b9\u6cd5\uff0cRecyclerView\u624d\u4f1a\u5c06\u6ed1\u52a8\u7684\u4e8b\u4ef6\u4ea4\u7ed9LayoutManager\u3002 override fun canScrollHorizontally(): Boolean { return orientation == HORIZONTAL } override fun canScrollVertically(): Boolean { return orientation == VERTICAL } \u6ca1\u5565\u597d\u8bf4\u7684\uff0c\u60f3\u652f\u6301\u54ea\u4e2a\u65b9\u5411\u7684\u6ed1\u52a8\uff0c\u5c31\u8fd4\u56de true \u3002\u540c\u65f6\u8fd4\u56detrue\u90fd\u53ef\u4ee5\uff0c\u90a3\u5c31\u662f\u540c\u65f6\u652f\u6301\u4e0a\u4e0b\u5de6\u53f3\u6ed1\u52a8\uff0c\u7c7b\u4f3cDave\u5927\u795e\u90a3\u79cd\u8868\u683c\u7c7b\u578b\u7684LayoutManager\u3002 \u91cd\u5199scrollHorizontallyBy()\u548cscrollVerticallyBy()\u65b9\u6cd5\u5728\u6ed1\u52a8\u7684\u65f6\u5019\u586b\u5145view\u548c\u56de\u6536view\u3002 override fun scrollHorizontallyBy( dx: Int, recycler: RecyclerView.Recycler, state: RecyclerView.State ): Int { return super.scrollHorizontallyBy(dx, recycler, state) } \u8fd9\u91cc\u5148\u8bb2\u4e00\u4e0b scrollHorizontallyBy \u548c scrollVerticallyBy \u4e24\u4e2a\u6ed1\u52a8\u65b9\u6cd5\u7684\u6982\u5ff5\uff1a \u6211\u770b\u4e00\u4e9b\u535a\u5ba2\u4e0b\u6709\u4e9b\u8bc4\u8bba\u8bf4\uff1a\"\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4e5f\u4e0d\u80fd\u6ed1\u52a8\u554a\uff01\"\uff0c\u8bf4\u662f\u8bf4\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u662f\u6ed1\u52a8\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u5176\u5b9e\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u53ea\u4f1a\u8fd4\u56de\u624b\u6307\u5728RecyclerView\u4e0a\u7684\u79fb\u52a8\u8ddd\u79bb\u7ed9\u6211\u4eec\uff0c\u5c31\u662f\u65b9\u6cd5\u4e2d\u5bf9\u5e94\u7684 dx \u548c dy \uff0c dx>0 \u5c31\u662f\u624b\u6307 \u4ece\u53f3\u6ed1\u5411\u5de6 \uff0c dy>0 \u5c31\u662f\u624b\u6307 \u4ece\u4e0b\u6ed1\u5411\u4e0a \uff0c\u540c\u7406 dx,dy<0 \u5219\u53cd\uff0c\u771f\u6b63\u79fb\u52a8View\u7684\u4e8b\u60c5\u8fd8\u662f\u8981\u5f00\u53d1\u8005\u81ea\u5df1\u5b9e\u73b0\uff0c LinearLayoutManager \u4e2d\u5c31\u7b80\u5355\u7684\u7528 offsetChildren \u65b9\u6cd5\u5b9e\u73b0\u7684\u79fb\u52a8\u3002\u6216\u8005\u4e5f\u6709\u7684\u8bc4\u8bba\u8bf4\uff1a\"LayoutManager\u5c01\u88c5\u7684\u4e0d\u591f\u5408\u7406\uff0c\u6ed1\u52a8\u8fd8\u8981\u6211\u4eec\u81ea\u5df1\u5b9e\u73b0\uff01\"\uff0c\u8bb2\u9053\u7406\u8bf4\u8fd9\u79cd\u8bdd\u7684\u5c0f\u670b\u53cb\u8fd8\u662f\u4e16\u9762\u89c1\u5c11\u4e86\uff0c\u4ed6\u80af\u5b9a\u6ca1\u89c1\u8fc7\u53ef\u4ee5\u659c\u7740\u62d6\u7684LayoutManager\uff0c\u6216\u8005\u5728\u6ed1\u52a8\u7684\u65f6\u5019\u5bf9itemView\u6709\u79cd\u5404\u79cd\u53d8\u6362\u7684LayoutManager\uff0c\u563b\u563b\u3002 \u4e24\u4e2a\u65b9\u6cd5\u7684 \u8fd4\u56de\u503c \u540c\u6837\u4e5f\u5341\u5206\u91cd\u8981\uff0c\u8fd4\u56de\u503c\u5c31\u662f\u8ba9RecyclerView\u77e5\u9053LayoutManager\u771f\u5b9e\u7684\u6ed1\u52a8\u8ddd\u79bb\uff0c return 0 \u65f6RecyclerView\u5c31\u4f1a\u5c55\u793a overScorll \u72b6\u6001\u4ee5\u53ca NestedScrolling \u7684\u540e\u7eed\u5904\u7406\u3002\u5173\u4e8e NestedScrolling \u8fd9\u70b9\u6211\u4e5f\u6ca1\u53d1\u73b0\u6709\u535a\u5ba2\u8bb2\u5230\uff0c\u5565\uff1foverScorll\u4f60\u4e5f\u4e0d\u77e5\u9053\uff01\u544a\u8f9e~ \u6dfb\u52a0 offsetChildrenHorizontal \u65b9\u6cd5\uff0c\u652f\u6301\u6c34\u5e73\u65b9\u5411\u7684\u6ed1\u52a8\u3002\u5565\uff1f\u4e3a\u5565\u53c8\u662f -dx \uff0c\u770b\u770b\u6e90\u7801\u6216\u8005\u5b9e\u9a8c\u5b9e\u9a8c\u4e0d\u5c31\u77e5\u9053\u4e86\u3002 override fun scrollHorizontallyBy( dx: Int, recycler: RecyclerView.Recycler, state: RecyclerView.State ): Int { //\u79fb\u52a8View offsetChildrenHorizontal(-dx) return dx } \u5c31\u8fd9\u4e48\u7b80\u5355\uff0c\u6211\u4eec\u7684LayoutManager\u5df2\u7ecf\u53ef\u4ee5\u6ed1\u52a8\u4e86\u3002\u4f46\u662f\u968f\u4e4b\u800c\u6765\u53c8\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff1a\u201c\u6ed1\u52a8\u53ea\u662f\u5728\u5df2\u5b58\u5728\u7684\u8fd9\u51e0\u4e2achildren\u95f4\u6ed1\u52a8\u201d\u3002\u8fd9\u4e0d\u662f\u5e9f\u8bdd\u5417\uff0c\u6211\u4eec\u90fd\u6ca1\u5199\u586b\u5145\u548c\u56de\u6536View\u7684\u65b9\u6cd5\uff0c\u80af\u5b9a\u6ca1\u6709\u65b0\u7684itemView\u6dfb\u52a0\u8fdb\u6765\u5440\uff0c\u8d85\u8fc7\u5c4f\u5e55\u7684View\u4e5f\u4e0d\u4f1a\u56de\u6536\u5440\u3002\u4e0b\u9762\u5f00\u59cb\u589e\u52a0\u586b\u5145View\u548c\u56de\u6536View\u7684\u4ee3\u7801\u5757\u3002 override fun scrollHorizontallyBy( dx: Int, recycler: RecyclerView.Recycler, state: RecyclerView.State ): Int { //\u586b\u5145View fill(dx, recycler) //\u79fb\u52a8View offsetChildrenHorizontal(-dx) //\u56de\u6536View recycle(dx, recycler) //\u8f93\u51fachildren logChildCount(\"scrollHorizontallyBy\", recycler) return dx } \u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u6ed1\u52a8\u7684\u65f6\u5019\u6211\u4eec\u771f\u6b63\u53ea\u505a\u4e86\u4e09\u4ef6\u4e8b\uff0c \u586b\u5145View - \u79fb\u52a8View - \u56de\u6536View \uff0c\u4e00\u4e2a\u5408\u683c\u7684LayoutManager \u81f3\u5c11 \u662f\u5e94\u8be5\u505a\u8db3\u8fd9\u4e09\u4ef6\u4e8b\u7684\uff0c\u5e76\u4e14\u987a\u5e8f\u6700\u597d\u5982\u4e0a\u9762\u4ee3\u7801\u4e00\u6837 \u5148\u586b\u5145-\u518d\u79fb\u52a8-\u6700\u540e\u56de\u6536 \uff0c\u5f53\u7136\u590d\u6742\u7684\u60c5\u51b5\u7684LayoutManager\u53ef\u4ee5\u591a\u52a0\u4e00\u4e9b\u6761\u4ef6\u68c0\u6d4b\u548c\u7279\u6b8a\u5904\u7406\uff0c\u4f8b\u5982 LinearLayoutManager \u5c31\u662f \u5148\u56de\u6536-\u518d\u586b\u5145-\u518d\u56de\u6536-\u6700\u540e\u79fb\u52a8 \u3002 \u8fd9\u91cc\u6211\u4eec\u5148\u5199\u56de\u6536\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u903b\u8f91\u76f8\u5bf9\u7b80\u5355\u70b9\u3002 private fun recycle( dx: Int, recycler: RecyclerView.Recycler ) { //\u8981\u56de\u6536View\u7684\u96c6\u5408\uff0c\u6682\u5b58 val recycleViews = hashSetOf<View>() //dx>0\u5c31\u662f\u624b\u6307\u4ece\u53f3\u6ed1\u5411\u5de6\uff0c\u6240\u4ee5\u8981\u56de\u6536\u524d\u9762\u7684children if (dx > 0) { for (i in 0 until childCount) { val child = getChildAt(i)!! val right = getDecoratedRight(child) //itemView\u7684right<0\u5c31\u662f\u8981\u8d85\u51fa\u5c4f\u5e55\u8981\u56de\u6536View if (right > 0) break recycleViews.add(child) } } //dx<0\u5c31\u662f\u624b\u6307\u4ece\u5de6\u6ed1\u5411\u53f3\uff0c\u6240\u4ee5\u8981\u56de\u6536\u540e\u9762\u7684children if (dx < 0) { for (i in childCount - 1 downTo 0) { val child = getChildAt(i)!! val left = getDecoratedLeft(child) //itemView\u7684left>recyclerView.width\u5c31\u662f\u8981\u8d85\u51fa\u5c4f\u5e55\u8981\u56de\u6536View if (left < width) break recycleViews.add(child) } } //\u771f\u6b63\u628aView\u79fb\u9664\u6389 for (view in recycleViews) { removeAndRecycleView(view, recycler) } recycleViews.clear() } \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5728\u62d6\u52a8\u662f\u65f6\u5019\uff0cLayoutManager\u786e\u5b9e\u56de\u6536\u4e86\u8d85\u51fa\u5c4f\u5e55\u7684itemView\uff0c\u5e76\u4e14\u901a\u8fc7\u67e5\u770blog\u53ef\u77e5childCount\u548cscrapSize\u540c\u6837\u662f\u5408\u683c\u7684\u3002 D/scrollHorizontallyBy: childCount = 2 -- scrapSize = 0 \u63a5\u4e0b\u6765\u624d\u662f\u91cd\u5934\u620f\uff0c\u5982\u4f55\u5408\u7406\u7684\u586b\u5145View\u662f\u4e00\u95e8\u5b66\u95ee\u3002\u901a\u8fc7\u6211\u9605\u8bfb LinearLayoutManager \u7684\u6e90\u7801\uff0c\u4e5f\u603b\u7ed3\u51fa\u4e00\u4e2a\u5957\u8def\uff0c\u90a3\u5c31\u662f\uff1a \u83b7\u53d6\u951a\u70b9View\u7684position \uff0c \u8ba1\u7b97\u65b0\u7684\u951a\u70b9View\u7684position\u548c\u4f4d\u7f6e \uff0c\u7136\u540e\u548c onLayoutChildren \u65b9\u6cd5\u4e00\u6837 addView \uff0c measureView \uff0c layoutView \u3002 private fun fill(dx: Int, recycler: RecyclerView.Recycler): Int { //\u5c06\u8981\u586b\u5145\u7684position var fillPosition = RecyclerView.NO_POSITION //\u53ef\u7528\u7684\u7a7a\u95f4\uff0c\u548conLayoutChildren\u4e2d\u7684totalSpace\u7c7b\u4f3c var availableSpace = abs(dx) //\u589e\u52a0\u4e00\u4e2a\u6ed1\u52a8\u8ddd\u79bb\u7684\u7edd\u5bf9\u503c\uff0c\u65b9\u4fbf\u8ba1\u7b97 val absDelta = abs(dx) //\u5c06\u8981\u586b\u5145\u7684View\u7684\u5de6\u4e0a\u53f3\u4e0b var left = 0 var top = 0 var right = 0 var bottom = 0 //dx>0\u5c31\u662f\u624b\u6307\u4ece\u53f3\u6ed1\u5411\u5de6\uff0c\u6240\u4ee5\u5c31\u8981\u586b\u5145\u5c3e\u90e8 if (dx > 0) { val anchorView = getChildAt(childCount - 1)!! val anchorPosition = getPosition(anchorView) val anchorRight = getDecoratedRight(anchorView) left = anchorRight //\u586b\u5145\u5c3e\u90e8\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2aposition\u5c31\u5e94\u8be5\u662f+1 fillPosition = anchorPosition + 1 //\u5982\u679c\u8981\u586b\u5145\u7684position\u8d85\u8fc7\u5408\u7406\u8303\u56f4\u5e76\u4e14\u6700\u540e\u4e00\u4e2aView\u7684 //right-\u79fb\u52a8\u7684\u8ddd\u79bb < \u53f3\u8fb9\u7f18(width)\u90a3\u5c31\u8981\u4fee\u6b63\u771f\u5b9e\u80fd\u79fb\u52a8\u7684\u8ddd\u79bb if (fillPosition >= itemCount && anchorRight - absDelta < width) { val fixScrolled = anchorRight - width Log.d(\"scrollHorizontallyBy\", \"fill == $fixScrolled\") return fixScrolled } //\u5982\u679c\u5c3e\u90e8\u7684\u951a\u70b9\u4f4d\u7f6e\u51cf\u53bbdx\u8fd8\u662f\u5728\u5c4f\u5e55\u5916\uff0c\u5c31\u4e0d\u586b\u5145\u4e0b\u4e00\u4e2aView if (anchorRight - absDelta > width) { return dx } } //dx<0\u5c31\u662f\u624b\u6307\u4ece\u5de6\u6ed1\u5411\u53f3\uff0c\u6240\u4ee5\u5c31\u8981\u586b\u5145\u5934\u90e8 if (dx < 0) { val anchorView = getChildAt(0)!! val anchorPosition = getPosition(anchorView) val anchorLeft = getDecoratedLeft(anchorView) right = anchorLeft //\u586b\u5145\u5934\u90e8\uff0c\u90a3\u4e48\u4e0a\u4e00\u4e2aposition\u5c31\u5e94\u8be5\u662f-1 fillPosition = anchorPosition - 1 //\u5982\u679c\u8981\u586b\u5145\u7684position\u8d85\u8fc7\u5408\u7406\u8303\u56f4\u5e76\u4e14\u7b2c\u4e00\u4e2aView\u7684 //left+\u79fb\u52a8\u7684\u8ddd\u79bb > \u5de6\u8fb9\u7f18(0)\u90a3\u5c31\u8981\u4fee\u6b63\u771f\u5b9e\u80fd\u79fb\u52a8\u7684\u8ddd\u79bb if (fillPosition < 0 && anchorLeft + absDelta > 0) { return anchorLeft } //\u5982\u679c\u5934\u90e8\u7684\u951a\u70b9\u4f4d\u7f6e\u52a0\u4e0adx\u8fd8\u662f\u5728\u5c4f\u5e55\u5916\uff0c\u5c31\u4e0d\u586b\u5145\u4e0a\u4e00\u4e2aView if (anchorLeft + absDelta < 0) { return dx } } //\u6839\u636e\u9650\u5b9a\u6761\u4ef6\uff0c\u4e0d\u505c\u5730\u586b\u5145View\u8fdb\u6765 while (availableSpace > 0 && (fillPosition in 0 until itemCount)) { val itemView = recycler.getViewForPosition(fillPosition) if (dx > 0) { addView(itemView) } else { addView(itemView, 0) } measureChild(itemView, 0, 0) if (dx > 0) { right = left + getDecoratedMeasuredWidth(itemView) } else { left = right - getDecoratedMeasuredWidth(itemView) } bottom = top + getDecoratedMeasuredHeight(itemView) layoutDecorated(itemView, left, top, right, bottom) if (dx > 0) { left += getDecoratedMeasuredWidth(itemView) fillPosition++ } else { right -= getDecoratedMeasuredWidth(itemView) fillPosition-- } if (fillPosition in 0 until itemCount) { availableSpace -= getDecoratedMeasuredWidth(itemView) } } return dx } \u4e0a\u9762\u7684\u4ee3\u7801\u6211\u6545\u610f\u5199\u5f97\u5f88\u5570\u55e6\uff0c\u5e94\u8be5\u5f88\u597d\u7406\u89e3\u4e86\u3002\u800c\u4e14\u806a\u660e\u7684\u5b9d\u5b9d\u5e94\u8be5\u53d1\u73b0\u4e86\u8fd9\u4e2a fill \u65b9\u6cd5\u8ddf onLayoutChildren \u7684\u65b9\u6cd5\u662f\u5f88\u8026\u5408\u7684\uff0c\u5176\u5b9e\u662f\u53ef\u4ee5\u5408\u5e76\u6210\u4e00\u4e2a\u7684\uff0c\u5c31\u50cf LinearLayoutManager \u7684 fill \u65b9\u6cd5\u4e00\u6837\u3002\u8fd8\u6709\u5c31\u662f\u518d\u6b21\u8bb0\u4f4f\u4e0a\u9762\u7684\u4ee3\u7801\u662f\u7528\u6765\u8bb2\u89e3\u7684\u4f2a\u4ee3\u7801\uff0c\u5e76\u4e0d\u662f StackLayoutManager \u7684\u771f\u5b9e\u4ee3\u7801\uff0c\u4e3a\u4e86\u5bb9\u6613\u7406\u89e3\uff0c\u6211\u5220\u9664\u4e86\u5927\u91cf\u7684\u68c0\u6d4b\u65b9\u6cd5\uff0c\u4ee5\u53ca\u5199\u7684\u975e\u5e38\u5570\u55e6\u3002 D/scrollHorizontallyBy: childCount = 9 -- scrapSize = 0 D/scrollHorizontallyBy: childCount = 10 -- scrapSize = 0 \u73b0\u5728\u6211\u4eec\u7684LayoutManager\u5c31\u4ee5\u53ca\u652f\u6301\u4e86\u5728\u6ed1\u52a8\u7684\u65f6\u5019\u586b\u5145View\u548c\u56de\u6536View\uff0c\u5e76\u4e14childCount\u4f9d\u7136\u662f\u5408\u683c\u7684\u3002 \u5269\u4e0b\u7684\u5c31\u662f\u8fb9\u754c\u68c0\u6d4b\u8ba9\u5176\u652f\u6301 overScrollMode \u4e86\uff0c\u7ec6\u5fc3\u7684\u5c0f\u670b\u53cb\u5df2\u7ecf\u53d1\u73b0 fill \u65b9\u6cd5\u5176\u5b9e\u6709\u4e00\u4e2a Int \u7684\u8fd4\u56de\u503c\uff0c\u90a3\u4e48\u73b0\u5728 offsetChildren \u548c scrollHorizontallyBy \u7684\u8fd4\u56de\u503c\u90fd\u4f7f\u7528 fill \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u3002 override fun scrollHorizontallyBy( dx: Int, recycler: RecyclerView.Recycler, state: RecyclerView.State ): Int { //\u586b\u5145View\uff0cconsumed\u5c31\u662f\u4fee\u590d\u540e\u7684\u79fb\u52a8\u503c val consumed = fill(dx, recycler) //\u79fb\u52a8View offsetChildrenHorizontal(-consumed) //\u56de\u6536View recycle(consumed, recycler) //\u8f93\u51fachildren logChildCount(\"scrollHorizontallyBy\", recycler) return consumed } \u5c31\u8fd9\u6837\u7b80\u5355\uff0c\u8fb9\u7f18\u68c0\u6d4b\u4e5f\u5b8c\u6210\u4e86\u3002 scrollToPosition()\u548csmoothScrollToPosition()\u65b9\u6cd5\u652f\u6301\u3002 \u9002\u914d scrollToPosition() \u6e90\u7801\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c\u6211\u4eec\u770b\u770b LinearLayoutManager \u7684 scrollToPosition() \u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002 //LinearLayoutManager @Override public void scrollToPosition(int position) { mPendingScrollPosition = position; mPendingScrollPositionOffset = INVALID_OFFSET; if (mPendingSavedState != null) { mPendingSavedState.invalidateAnchor(); } requestLayout(); } \u539f\u6765\u8fd9\u4e48\u7b80\u5355\u7684\u5417\uff1f\u518d\u770b\u770b mPendingScrollPosition \u662f\u4e2a\u5565\u3002 /** * When LayoutManager needs to scroll to a position, it sets this variable and requests a * layout which will check this variable and re-layout accordingly. */ int mPendingScrollPosition = RecyclerView.NO_POSITION; \u4ece\u82f1\u6587\u6ce8\u91ca\u7684\u5927\u6982\u7684\u610f\u601d\u5c31\u662f mPendingScrollPosition \u662f\u8981scorll\u5230\u7684position\uff0c\u90a3\u6211\u4eec\u7ee7\u7eed\u627e\u5b83\u662f\u5728\u54ea\u91cc\u8c03\u7528\u7684\u3002\u5728\u4e00\u8fde\u4e32\u7684\u641c\u7d22\u540e\uff0c\u6211\u53d1\u73b0\u4e86\u534e\u70b9\u3002 private boolean updateAnchorFromPendingData(RecyclerView.State state, AnchorInfo anchorInfo) { if (state.isPreLayout() || mPendingScrollPosition == RecyclerView.NO_POSITION) { return false; } // validate scroll position if (mPendingScrollPosition < 0 || mPendingScrollPosition >= state.getItemCount()) { mPendingScrollPosition = RecyclerView.NO_POSITION; mPendingScrollPositionOffset = INVALID_OFFSET; if (DEBUG) { Log.e(TAG, \"ignoring invalid scroll position \" + mPendingScrollPosition); } return false; } // if child is visible, try to make it a reference child and ensure it is fully visible. // if child is not visible, align it depending on its virtual position. anchorInfo.mPosition = mPendingScrollPosition; ... } \u8fd9\u4e2a updateAnchorFromPendingData() \u65b9\u6cd5\u6709\u591a\u5c42\u8c03\u7528\u6808\uff0c\u4f46\u662f\u6700\u7ec8\u8fd8\u662f\u5728 onLayoutChildren() \u65b9\u6cd5\u4e2d\u8c03\u7528\u7684\u3002\u8fd8\u8bb0\u5f97\u6211\u4eec\u6700\u5f00\u59cb\u5728 onLayuoutChildren() \u6709\u4e2a currentPosition = 0 \u7684\u53d8\u91cf\u5417\uff0c\u90a3\u4e2a\u53d8\u91cf\u5c31\u76f8\u5f53\u4e8e\u8fd9\u91cc\u7684 anchorInfo.mPosition \uff0c\u5c31\u662f \u951a\u70b9\u7684position \uff0c\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u51fa\u5982\u4f55\u9002\u914dscrollToPosition\u7684\u7ed3\u8bba\uff1a\u589e\u52a0mPendingScrollPosition\u53d8\u91cf\uff0c\u5728scrollToPosition()\u65b9\u6cd5\u4e2d\u5bf9\u5176\u8d4b\u503c\uff0c\u8c03\u7528requestLayout()\u65b9\u6cd5\uff0c\u7136\u540eonLayoutChildren()\u65b9\u6cd5\u4f1a\u518d\u6b21\u56de\u8c03\uff0c\u8fd9\u65f6\u5bf9\u951a\u70b9position\u91cd\u65b0\u8d4b\u503c\uff0c\u8bb0\u4f4f\u4e00\u5b9a\u505a\u597dposition\u7684\u5408\u6cd5\u6821\u9a8c\u3002 private var mPendingPosition = RecyclerView.NO_POSITION override fun onLayoutChildren(recycler: RecyclerView.Recycler, state: RecyclerView.State) { ...\u7701\u7565\u4ee3\u7801 var currentPosition = 0 if (mPendingPosition != RecyclerView.NO_POSITION){ currentPosition = mPendingPosition } ...\u7701\u7565\u4ee3\u7801 } override fun scrollToPosition(position: Int) { if (position < 0 || position >= itemCount) return mPendingPosition = position requestLayout() } \u4ed4\u7ec6\u770b\uff0c\u6211\u4eec\u7684LayoutManager\u662f\u4e0d\u662f\u53ef\u4ee5scrollToPosition\u4e86\u3002\u4f46\u662f\u8fd9\u8fd8\u4e0d\u662f\u5b8c\u6574\u7684\u5b9e\u73b0\uff0c\u5982\u679c\u4f60\u4ed4\u7ec6\u5bf9\u6bd4 LinearLayuotManager \u7684scrollToPosition\u5c31\u80fd\u53d1\u73b0\u5dee\u522b\u6240\u5728\uff0c\u6211\u8fd9\u91cc\u53ea\u662f\u629b\u7816\u5f15\u7389\u4e00\u4e0b\uff0c\u80fd\u8ba9\u5927\u5bb6\u77e5\u9053\u5982\u4f55\u9002\u914dscrollToPosition\u5c31\u884c\u4e86\uff0c\u5b8c\u6574\u7684\u5b9e\u73b0\u5927\u591a\u6570\u5c31\u662f\u7ec6\u8282\u7684\u5904\u7406\uff0c\u548c\u5957\u8def\u65e0\u5173\uff0c\u542c\u61c2\u638c\u58f0\ud83d\udc4f\ud83d\udc4f\ud83d\udc4f\ud83d\udc4f\u3002 \u8fd8\u6709\u4e00\u70b9\u6211\u770b\u5927\u591a\u6570\u7684\u535a\u5ba2\u4e5f\u6ca1\u8bb2\u5230\uff0c\u90a3\u5c31\u662f onLayoutCompleted() \u8fd9\u4e2a\u65b9\u6cd5\u5176\u5b9e\u633a\u6709\u7528\u7684\uff0c\u4e3a\u5565\u6ca1\u4eba\u8bf4\u5462\uff1f onLayoutCompleted \u4f1a\u5728LayoutManager\u8c03\u7528\u5b8c onLayoutChildren() \u540e\u8c03\u7528\uff0c\u53ef\u4ee5\u7528\u6765\u505a\u5f88\u591a\u6536\u5c3e\u7684\u5de5\u4f5c\u3002\u4f8b\u5982\uff1a\u91cd\u7f6emPendingScrollPosition\u7684\u503c //LinearLayoutManager @Override public void onLayoutCompleted(RecyclerView.State state) { super.onLayoutCompleted(state); mPendingSavedState = null; // we don't need this anymore mPendingScrollPosition = RecyclerView.NO_POSITION; mPendingScrollPositionOffset = INVALID_OFFSET; mAnchorInfo.reset(); } \u9002\u914dsmoothScrollToPosition() \u7ee7\u7eed\u6252 LinearLayuotManager \u7684 smoothScrollToPosition \u7684\u6e90\u7801\u3002 //LinearLayuotManager @Override public void smoothScrollToPosition(RecyclerView recyclerView, RecyclerView.State state, int position) { LinearSmoothScroller linearSmoothScroller = new LinearSmoothScroller(recyclerView.getContext()); linearSmoothScroller.setTargetPosition(position); startSmoothScroll(linearSmoothScroller); } \u4e5d\u6298\uff1f\u4e0d\u7ba1\u4e86\uff0c\u76f4\u63a5\u590d\u5236\uff0c\u7c98\u8d34\uff0c\u518d\u770b\u6548\u679c\uff0c\u6bd5\u7adf\u7956\u4f20CV\u5de5\u7a0b\u5e08\u5c82\u975e\u6d6a\u5f97\u865a\u540d\u3002 override fun smoothScrollToPosition( recyclerView: RecyclerView, state: RecyclerView.State, position: Int ) { val linearSmoothScroller = LinearSmoothScroller(recyclerView.context) linearSmoothScroller.targetPosition = position startSmoothScroll(linearSmoothScroller) } \u54a6\uff01\u8fd9\u4e0d\u662fscrollToPosition\u7684\u6548\u679c\u5417\uff1f\u4e5f\u4e0d\u662f\u6211\u4eecsmoothScroll\u7684\u5e73\u6ed1\u6548\u679c\u5440\u3002\u4e8e\u662f\u6211\u7ee7\u7eed\u770b\u535a\u5ba2\uff0c\u7ffb\u6e90\u7801\uff0c\u4e5f\u8fd8\u662f\u770b\u5230\u4e86Dave\u5927\u795e\u7684\u535a\u5ba2\u624d\u627e\u5230\u4e86\u771f\u6b63\u7684\u91cd\u70b9 computeScrollVectorForPosition(int targetPosition) \u8fd9\u4e2a\u65b9\u6cd5\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u5728 LinearLayoutManager \u7684 smoothScrollToPosition \u65b9\u6cd5\u4e0b\u9762\uff0c\u4f46\u662f\u6ca1\u6709\u6ce8\u91ca\uff0c\u662f\u771f\u96be\u8ba9\u4eba\u731c\u3002 @Override public PointF computeScrollVectorForPosition(int targetPosition) { if (getChildCount() == 0) { return null; } final int firstChildPos = getPosition(getChildAt(0)); final int direction = targetPosition < firstChildPos != mShouldReverseLayout ? -1 : 1; if (mOrientation == HORIZONTAL) { return new PointF(direction, 0); } else { return new PointF(0, direction); } } \u8fd9\u4e2a computeScrollVectorForPosition \u65b9\u6cd5\u662f SmoothScroller \u7c7b\u7684\u4e00\u4e2a\u65b9\u6cd5\u3002 LinearSmoothScroller \u53c8\u662f\u7ee7\u627f\u4e8e SmoothScroller \u3002 @Nullable public PointF computeScrollVectorForPosition(int targetPosition) { LayoutManager layoutManager = getLayoutManager(); if (layoutManager instanceof ScrollVectorProvider) { return ((ScrollVectorProvider) layoutManager) .computeScrollVectorForPosition(targetPosition); } Log.w(TAG, \"You should override computeScrollVectorForPosition when the LayoutManager\" + \" does not implement \" + ScrollVectorProvider.class.getCanonicalName()); return null; } \u4ece\u6e90\u7801\u6765\u770b\uff0c\u53c8\u5728\u5224\u65adLayoutManager\u662f\u5426\u662fScrollVectorProvider\u7684\u5b50\u7c7b\u3002\u5982\u679c\u662f\u5c31\u6267\u884ccomputeScrollVectorForPosition\u65b9\u6cd5\uff0c\u90a3\u4e48\u8fd9\u6837\u6765\u8bf4\u7684\u8bddLinearLayoutManager\u80af\u5b9a\u5b9e\u73b0\u4e86ScrollVectorProvider\u63a5\u53e3\u3002 public class LinearLayoutManager extends RecyclerView.LayoutManager implements ItemTouchHelper.ViewDropHandler, RecyclerView.SmoothScroller.ScrollVectorProvider { \u679c\u7136\u548c\u6211\u4eec\u731c\u60f3\u7684\u4e00\u6837\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u7ee7\u7eed\u6a21\u4eff\u8fd9\u79cd\u5199\u6cd5\u3002 class BlogLayoutManager : RecyclerView.LayoutManager() ,RecyclerView.SmoothScroller.ScrollVectorProvider{ override fun computeScrollVectorForPosition(targetPosition: Int): PointF? { if (childCount == 0) { return null } val firstChildPos = getPosition(getChildAt(0)!!) val direction = if (targetPosition < firstChildPos) -1 else 1 return PointF(direction.toFloat(), 0f) } } \u7ec6\u5fc3\u7684\u5c0f\u670b\u53cb\u53c8\u53d1\u73b0\u4e86\uff0c\u6211\u4eec\u5e73\u6ed1\u6eda\u52a8\u5230 50 \u8fd9\u4e2aposition\uff0c\u4f46\u662f 50 \u662f\u9760\u540e\u505c\u6b62\u7684\uff0c\u5e76\u4e0d\u662f\u6eda\u52a8\u5230\u524d\u9762\u8fb9\u7f18\u7684\u4f4d\u7f6e\u505c\u6b62\u3002\u6ca1\u9519\uff0c\u6b63\u786e\u7684\u6548\u679c\u5c31\u662f\u8fd9\u6837\uff0c\u5305\u62ec LinearLayoutManager \u7684 smoothScrollToPosition \u7684\u6548\u679c\u4e5f\u662f\u8fd9\u6837\u3002\u6240\u4ee5\u524d\u9762\u6211\u624d\u4f1a\u8bf4 scrollToPosition \u7684\u5b9e\u73b0\u4e0d\u662f\u5b8c\u6574\u6548\u679c\uff0c\u5b8c\u6574\u6548\u679c\u5e94\u8be5\u548c smoothScrollToPosition \u4e00\u6837\uff0cscrollToPosition\u5230\u540e\u9762\u7684position\u5c31\u662f\u5e94\u8be5 \u4ece\u540e\u5f80\u524d\u586b\u5145 \uff0cscrollToPosition\u5230\u524d\u9762\u7684position\u624d\u662f \u4ece\u524d\u5f80\u540e\u586b\u5145 \u3002 \u63a5\u7740\u6211\u4eec\u8bb2\u8bb2 computeScrollVectorForPosition \u8fd9\u4e2a\u65b9\u6cd5\u91cc\u9762\u7684\u5b9e\u73b0\u5957\u8def\u3002 val firstChildPos = getPosition(getChildAt(0)!!) val direction = if (targetPosition < firstChildPos) -1 else 1 return PointF(direction.toFloat(), 0f) \u901a\u8fc7\u6211\u9605\u8bfb\u6e90\u7801\u6ce8\u91ca\u5f97\u77e5\uff0c\u91cd\u70b9\u5c31\u5728\u8fd9\u4e2a PointF \u7684\u8fd4\u56de\u503c\uff0c\u6e90\u7801\u6ce8\u91ca\u4e2d\u544a\u8bc9\u6211\u4eec\u5411\u91cf\u7684\u5927\u5c0f\u5e76\u4e0d\u91cd\u8981\uff0c\u91cd\u8981\u7684\u662f targetPosition \u548c \u5411\u91cf\u7684\u65b9\u5411 \uff0c PointF \u7684 x \u4ee3\u8868\u6c34\u5e73\u65b9\u5411\uff0c y \u4ee3\u8868\u7ad6\u76f4\u65b9\u5411\u3002 \u6574\u6570 \u4ee3\u8868\u6b63\u5411\u79fb\u52a8\uff0c \u8d1f\u6570 \u4ee3\u8868\u53cd\u5411\u79fb\u52a8\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 direction \u3002\u4f46\u662f\u5176\u5b9e\u8fd9\u4e2a\u8bf4\u6cd5\u4e5f\u4e0d\u662f\u5168\u5bf9\uff0c\u5982\u679c\u4f60\u9700\u8981\u800c\u4e14\u80fd\u591f\u7b97\u51fa\u7cbe\u786e\u7684\u79fb\u52a8\u503c\uff0c\u90a3\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f20\u9012\u7cbe\u786e\u7684\u503c\u7ed9 PointF \u3002 \u89e3\u51b3\u8f6f\u952e\u76d8\u5f39\u51fa\u6216\u6536\u8d77onLayoutChildren()\u65b9\u6cd5\u91cd\u65b0\u8c03\u7528\u7684\u95ee\u9898\u3002 \u8fd9\u4e2a\u95ee\u9898\u6211\u4e5f\u662f\u65e0\u610f\u4e2d\u53d1\u73b0\u7684\u3002 \u5982\u56fe\u6240\u793a\uff0c\u6211\u4eec\u5728\u6eda\u52a8\u4e00\u6bb5\u8ddd\u79bb\u540e\uff0c\u8ba9\u8f6f\u952e\u76d8\u5f39\u51fa\uff0c\u53d1\u73b0LayoutManager\u81ea\u52a8\u56de\u5230 position=0 \u90a3\u91cc\uff0c\u518d\u6eda\u52a8\u4e00\u6bb5\u8ddd\u79bb\uff0c\u8f6f\u952e\u76d8\u6536\u8d77\uff0cLayoutManager\u53c8\u81ea\u52a8\u56de\u5230 position=0 \u90a3\u91cc\u3002\u5206\u6790\u539f\u56e0\u53ef\u4ee5\u77e5\u9053\u662f onLayoutChildren \u65b9\u6cd5\u88ab\u91cd\u65b0\u8c03\u7528\u5bfc\u81f4\uff0c\u56e0\u4e3a onLayoutChildren \u65b9\u6cd5\u4e2d\u6211\u4eec\u7684 currentPosition=0 \uff0c\u6240\u4ee5\u5bfc\u81f4\u4e86LayoutManager\u4ece0\u5f00\u59cb\u91cd\u65b0\u5e03\u5c40\u3002\u4e0b\u9762\u6211\u4eec\u5f00\u59cb\u4fee\u6b63position\u4e3a\u771f\u5b9e\u6eda\u52a8\u540e\u7684\u503c\u3002 override fun onLayoutChildren(recycler: RecyclerView.Recycler, state: RecyclerView.State) { var totalSpace = width - paddingRight var currentPosition = 0 //\u5f53childCount != 0\u65f6\uff0c\u8bc1\u660e\u662f\u5df2\u7ecf\u586b\u5145\u8fc7View\u7684\uff0c\u56e0\u4e3a\u6709\u56de\u6536 //\u6240\u4ee5\u76f4\u63a5\u8d4b\u503c\u4e3a\u7b2c\u4e00\u4e2achild\u7684position\u5c31\u53ef\u4ee5 if (childCount != 0) { currentPosition = getPosition(getChildAt(0)!!) } if (mPendingPosition != RecyclerView.NO_POSITION) { currentPosition = mPendingPosition } //\u8f7b\u91cf\u7ea7\u7684\u5c06view\u79fb\u9664\u5c4f\u5e55 detachAndScrapAttachedViews(recycler) //\u5f00\u59cb\u586b\u5145view var left = 0 ...\u7701\u7565\u4ee3\u7801 } \u4e0a\u9762\u793a\u4f8b\u4ee3\u7801\u6ce8\u610f detachAndScrapAttachedViews(recycler) \u65b9\u6cd5\u662f\u5728 \u4fee\u6b63position \u65b9\u6cd5\u7684\u540e\u9762\uff0c\u56e0\u4e3a\u5148\u8c03\u7528 detachAndScrapAttachedViews \u540e\uff0cchildCount\u5c31\u4f1a\u4e00\u76f4\u4e3a 0 \u554a\uff01 \u8fd8\u662f\u5982\u56fe\u6240\u793a\uff0c\u6211\u4eec\u62d6\u52a8\u5230\u4e86 position=25 \u7684itemView\u90a3\u91cc\uff0c\u7136\u540e\u8f6f\u952e\u76d8\u5f39\u8d77 onLayoutChildren \u8c03\u7528\uff0c\u8fd9\u6b21\u7684\u786e\u662f\u4ece currentPosition=25 \u5f00\u59cb\u91cd\u65b0\u5e03\u5c40\u3002 \u4f46\u662f\u73b0\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e5f\u8fd8\u662f\u6709\u7455\u75b5\uff0c\u4ed4\u7ec6\u770b\u56fe\uff0c\u6211\u4eec\u53d1\u73b0 position=25 \u7684itemView\u660e\u660e\u88ab\u62d6\u52a8\u4e86\u4e00\u822c\u7684\u5bbd\u5ea6\u5230\u5c4f\u5e55\u5916\uff0c\u4f46\u662f\u91cd\u65b0 onLayoutChildren \u65f6\uff0c\u53c8\u662f\u4ece\u5c4f\u5e55\u5de6\u8fb9\u7f18\u5f00\u59cblayoutView\u4e86\u3002\u90a3\u4e48\u600e\u4e48\u89e3\u51b3\u5462\uff1f\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u5b66\u4e60 LinearLayoutManager \u7684\u89e3\u51b3\u529e\u6cd5\uff0c\u5f00\u59cb\u83b7\u53d6\u4e00\u4e2a fixOffset \u7684\u503c\uff0c\u5728\u91cd\u65b0layout\u7ed3\u675f\u53bb\u79fb\u52a8\u8fd9\u4e2a\u503c\u7684\u8ddd\u79bb\uff0c LinearLayoutManager \u662f\u5c06\u6ed1\u52a8\uff0c\u586b\u5145\uff0c\u56de\u6536\u5c01\u88c5\u6210\u4e86\u4e00\u4e2a scrollBy() \u65b9\u6cd5\uff0c\u7136\u540e\u5728layout\u7ed3\u675f\u8c03\u7528scrollBy\u65b9\u6cd5\u53bb\u4fee\u6b63\u504f\u79fb\u91cf\uff0c\u8fd9\u4e48\u505a\u53ef\u4ee5\u89e3\u51b3\u504f\u79fb\u6ed1\u52a8\u7684\u540c\u65f6\u586b\u5145\u548c\u56de\u6536View\uff0c\u6211\u8fd9\u91cc\u5077\u4e2a\u61d2\uff0c\u76f4\u63a5\u7528 offsetChildren \u53bb\u4fee\u6b63\u4e00\u4e0b\u504f\u79fb\u91cf\u3002 override fun onLayoutChildren(recycler: RecyclerView.Recycler, state: RecyclerView.State) { var totalSpace = width - paddingRight var currentPosition = 0 var fixOffset = 0 //\u5f53childCount != 0\u65f6\uff0c\u8bc1\u660e\u662f\u5df2\u7ecf\u586b\u5145\u8fc7View\u7684\uff0c\u56e0\u4e3a\u6709\u56de\u6536 //\u6240\u4ee5\u76f4\u63a5\u8d4b\u503c\u4e3a\u7b2c\u4e00\u4e2achild\u7684position\u5c31\u53ef\u4ee5 if (childCount != 0) { currentPosition = getPosition(getChildAt(0)!!) fixOffset = getDecoratedLeft(getChildAt(0)!!) } //...\u7701\u7565\u4ee3\u7801 offsetChildrenHorizontal(fixOffset) } OK~\uff0c\u6536\u5de5\uff01\u5565\uff1f\u8981\u5b9e\u73b0\u7684\u4e00\u4e2a StackLayoutManager \uff0c\u4e3a\u5565\u4f60\u8fd9\u4e2a\u662f LinearLayoutManger \uff01\u90fd\u770b\u5230\u8fd9\u91cc\u4e86\u5982\u679c\u4f60\u8fd8\u80fd\u6709\u8fd9\u79cd\u95ee\u9898\uff0c\u8bc1\u660e\u6211\u5199\u4e86\u4e00\u7bc7\u6c34\u6587\uff0c\u9003~ \u4e0a\u9762\u7684\u4f2a\u4ee3\u7801\u793a\u4f8b \u6700\u540e \u5b66\u4e60\u81ea\u5b9a\u4e49LayoutManager\u7684\u6536\u83b7\u633a\u591a\u7684\uff0c\u7279\u522b\u662f\u4e00\u4e9b\u903b\u8f91\u4e0a\u7684\u5904\u7406\uff0c\u7531\u8877\u7684\u4f69\u670dRecyclerView\u7684\u4f5c\u8005\uff0c\u771f\u7684\u5565\u60c5\u51b5\u90fd\u8003\u8651\u5230\u4e86\u3002\u867d\u7136\u8bf4\u65e5\u5e38\u4f7f\u7528RecyclerView\u81ea\u5e26\u7684\u90a3\u51e0\u4e2aLayoutManager\u5c31\u591f\u7528\u4e86\uff0c\u4f46\u662f\u5b66\u4e60\u4e00\u4e0b\u81ea\u5b9a\u4e49LayoutManager\u4e5f\u4e0d\u59a8\uff0c\u800c\u4e14\u6df1\u5165\u4e86\u8fd8\u53ef\u4ee5\u540c\u65f6\u52a0\u6df1\u5bf9RecyclerView\u7684\u7406\u89e3\uff0c\u4f55\u4e50\u800c\u4e0d\u4e3a\u5462~ \u4ece\u5f00\u59cb\u5b66\u4e60\u81ea\u5b9a\u4e49LayoutManager\uff0c\u5230\u5199\u4e86\u51e0\u4e2a\u5f00\u6e90\u5e93\uff0c\u518d\u5230\u5b8c\u6210\u8fd9\u7bc7\u6587\u7ae0\uff0c\u65ad\u65ad\u7eed\u7eed\u82b1\u4e86\u4e00\u4e2a\u591a\u6708\u5427\uff0c\u5982\u679c\u4f60\u89c9\u5f97\u8fd9\u7bc7\u6587\u7ae0\u6709\u5e2e\u52a9\u4f60\uff0c\u5e2e\u5fd9\u7ed9\u6587\u7ae0\u70b9\u4e2a\u8d5e\u6216\u8005\u7ed9\u5f00\u6e90\u5e93\u4e00\u4e2astar\u5427\uff0c\u8ba9\u6211\u77e5\u9053\u4ed8\u51fa\u8fd8\u662f\u4f1a\u6709\u6536\u83b7\u7684\uff0c\u8c22\u8c22~ https://github.com/simplepeng/StackLayoutManager https://github.com/simplepeng/PickerLayoutManager","title":"\u5b66\u4f1a\u81ea\u5b9a\u4e49LayoutManager"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#layoutmanager","text":"\u6700\u5f00\u59cb\u6211\u5728\u5b66\u4e60\u81ea\u5b9a\u4e49LayoutManager\u7684\u65f6\u5019\uff0c\u4e5f\u662f\u7f51\u4e0a\u641c\u6587\u7ae0\uff0c\u770b\u535a\u5ba2\uff0c\u4ee5\u53ca\u4e00\u4e9b\u516c\u4f17\u53f7\u7684\u63a8\u6587\u3002\u521a\u5f00\u59cb\u770b\u7684\u65f6\u5019\u89c9\u5f97\u8fd8\u662f\u90a3\u4e48\u56de\u4e8b\uff0c\u4f46\u662f\u5728\u6162\u6162\u7684\u6df1\u5165LayoutManager\u6e90\u7801\u624d\u53d1\u73b0\u5f88\u591a\u7684\u6587\u7ae0\u5176\u5b9e\u90fd\u662f\u4e0d\u5408\u683c\uff0c\u4e43\u81f3\u53ef\u4ee5\u8bf4\u662f\u5f88\u8bef\u5bfc\u4eba\u7684\uff0c\u6240\u4ee5\u6211\u624d\u60f3\u81ea\u5df1\u5199\u4e00\u7bc7\u5173\u4e8e\u81ea\u5b9a\u4e49LayoutManager\u7684\u6587\u7ae0\uff0c\u5e0c\u671b\u80fd\u5e2e\u52a9\u5230\u4e00\u90e8\u5206\u4eba\u80fd\u5165\u95e8\u81ea\u5b9a\u4e49LayoutManager\u5427\u3002","title":"\u5b66\u4f1a\u81ea\u5b9a\u4e49LayoutManager"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#layoutmanager_1","text":"\u524d\u9762\u867d\u7136\u8bf4\u6709\u5f88\u591a\u535a\u5ba2\u662f\u4e0d\u5408\u683c\u7684\uff0c\u4f46\u662f\u540c\u6837\u8fd8\u662f\u6709\u4e00\u4e9b\u4f18\u79c0\u7684\u4f5c\u8005\u7684\u535a\u5ba2\u5bf9\u5728\u4e0b\u542f\u53d1\u5f88\u5927\uff0c\u7279\u522b\u662f Dave \u5927\u795e building-a-recyclerview-layoutmanager-part \u7684\u7cfb\u5217\u7684\u6587\u7ae0\uff0c\u771f\u7684\u662f\u8bb2\u5f97\u4e0d\u80fd\u518d\u68d2\u4e86\uff01\u867d\u7136\u5df2\u7ecf\u662f14\u5e74\u7684\u6587\u7ae0\uff0c\u4f46\u662f\u653e\u5728\u5f53\u4e0b\u6765\u770b\uff0c\u4f9d\u7136\u662f\u81ea\u5b9a\u4e49LayoutManager\u76f8\u5173\u6587\u7ae0\u7684\u9876\u5cf0\uff0c\u867d\u7136\u6587\u7ae0\u662f\u82f1\u6587\uff0c\u4f46\u662f\u8fd8\u662f\u5f3a\u70c8\u63a8\u8350\u9605\u8bfb\uff01 Building a RecyclerView LayoutManager \u2013 Part 1 Building a RecyclerView LayoutManager \u2013 Part 2 Building a RecyclerView LayoutManager \u2013 Part 3 \u65e0\u610f\u4e2d\u53d1\u73b0\u4e86\u6709B\u7ad9\u5927\u4f6c\u7ffb\u8bd1\u4e86 Dave \u5927\u795e\u8bb2\u89e3\u81ea\u5b9a\u4e49LayoutManager\u7684\u57f9\u8bad\u89c6\u9891\uff0c\u8fd9\u7b80\u76f4\u662f\u5b9d\u85cf\uff0c\u5efa\u8bae\u6536\u85cf\u591a\u6b21\u89c2\u770b\u3002 Mastering RecyclerView Layouts \u5176\u6b21\u5c31\u662f \u5f20\u65ed\u7ae5 \u5728CSDN\u53d1\u5e03 \u638c\u63e1\u81ea\u5b9a\u4e49LayoutManager \u76f8\u5173\u535a\u5ba2\uff0c\u7279\u522b\u662f\u6587\u7ae0\u4e2d\u7684\u5e38\u89c1\u8bef\u533a\u548c\u6ce8\u610f\u4e8b\u9879\uff0c\u5efa\u8bae\u591a\u6b21\u9605\u8bfb\u3002 https://blog.csdn.net/zxt0601/article/details/52948009 \u7279\u522b\u662f\u8fd9\u53e5\u8bdd\u9053\u51fa\u4e86\u81ea\u5b9a\u4e49LayoutManager\u7684\u771f\u8c1b\uff1a \u4e00\u4e2a\u5408\u683c\u7684LayoutManager\uff0cchildCount\u6570\u91cf\u4e0d\u5e94\u5927\u4e8e\u5c4f\u5e55\u4e0a\u663e\u793a\u7684Item\u6570\u91cf\uff0c\u800cscrapCache\u7f13\u5b58\u533a\u57df\u7684Item\u6570\u91cf\u5e94\u8be5\u662f0 \uff0c\u8fd9\u91cc\u5efa\u8bae\u591a\u8bfb\u51e0\u904d\uff0c\u52a0\u6df1\u7406\u89e3\u3002 \u6700\u540e\u5c31\u662f \u9648\u5c0f\u5a9b \u7684 Android\u81ea\u5b9a\u4e49LayoutManager\u7b2c\u5341\u4e00\u5f0f\u4e4b\u98de\u9f99\u5728\u5929 \uff0c\u8fd9\u4e48\u5927\u4f6c\u7684\u601d\u8def\u603b\u662f\u90a3\u4e48\u5947\u7279\uff0c\u903b\u8f91\u603b\u662f\u90a3\u4e48\u6e05\u6670\u3002 https://blog.csdn.net/u011387817/article/details/81875021","title":"\u4e00\u4e9b\u81ea\u5b9a\u4e49LayoutManager\u4f18\u79c0\u6587\u7ae0\u63a8\u8350"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#layoutmanager_2","text":"\u7ee7\u627f RecyclerView.LayoutManager \u5e76\u5b9e\u73b0 generateDefaultLayoutParams() \u65b9\u6cd5\u3002 \u6309\u9700\uff0c\u91cd\u5199 onMeasure() \u6216 isAutoMeasureEnabled() \u65b9\u6cd5\u3002 \u91cd\u5199 onLayoutChildren() \u5f00\u59cb\u7b2c\u4e00\u6b21\u586b\u5145itemView\u3002 \u91cd\u5199 canScrollHorizontally() \u548c canScrollVertically() \u65b9\u6cd5\u652f\u6301\u6ed1\u52a8\u3002 \u91cd\u5199 scrollHorizontallyBy() \u548c scrollVerticallyBy() \u65b9\u6cd5\u5728\u6ed1\u52a8\u7684\u65f6\u5019\u586b\u5145\u548c\u56de\u6536itemView\u3002 \u91cd\u5199 scrollToPosition() \u548c smoothScrollToPosition() \u65b9\u6cd5\u652f\u6301\u3002 \u89e3\u51b3\u8f6f\u952e\u76d8\u5f39\u51fa\u6216\u6536\u8d77\u5bfc\u81f4 onLayoutChildren() \u65b9\u6cd5\u88ab\u91cd\u65b0\u8c03\u7528\u7684\u95ee\u9898\u3002","title":"\u5148\u8bb2\u8bb2\u81ea\u5b9a\u4e49LayoutManager\u7684\u5e38\u89c4\u5957\u8def"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#layoutmanager_3","text":"\u4f7f\u7528 RecyclerView \u6216\u8005\u8bf4 \u7ee7\u627f\u4e86LayoutManager \u5c31\u81ea\u5e26\u4e86\u590d\u7528\u673a\u5236\u548c\u89c6\u56fe\u56de\u6536 \u672a\u6b63\u786e\u7684\u91cd\u5199 onMeasure() \u6216 isAutoMeasureEnabled() \u65b9\u6cd5 onLayoutChildren() \u65f6\u76f4\u63a5\u52a0\u8f7d\u4e86\u5168\u90e8itemView \u672a\u652f\u6301 scrollToPosition() \u6216 smoothScrollToPosition() \u65b9\u6cd5 \u672a\u89e3\u51b3\u8f6f\u952e\u76d8\u5f39\u51fa\u6216\u6536\u8d77 onLayoutChildren() \u65b9\u6cd5\u91cd\u65b0\u8c03\u7528\u7684\u95ee\u9898\u3002","title":"\u518d\u8bf4\u8bf4\u81ea\u5b9a\u4e49LayoutManager\u5bb9\u6613\u8fdb\u5165\u7684\u8bef\u533a"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#recyclerviewlayoutmanager","text":"\u6211\u53d1\u73b0\u5f88\u591a\u4eba\u628aRecyclerView\u60f3\u5f97\u592a\u5b8c\u7f8e\u4e86\uff0c\u8ba4\u4e3aRecyclerView\u5929\u751f\u5c31\u81ea\u5e26\u4e86\u590d\u7528\u673a\u5236\u548c\u89c6\u56fe\u56de\u6536\uff0c\u53ea\u8981\u4f7f\u7528RecyclerView\u6839\u672c\u4e0d\u7528\u5173\u5fc3\u52a0\u8f7ditem\u7684\u6570\u91cf\u3002\u5176\u5b9e\u4e0d\u7528\u5f88\u4ed4\u7ec6\u7684\u9605\u8bfbRecyclerView\u7684\u6e90\u7801\u4e5f\u80fd\u53d1\u73b0\uff0cRecyclerView\u53ea\u4e0d\u8fc7\u662f\u4e00\u4e2a\u63d0\u4f9b\u4e86 \u591a\u7ea7\u7f13\u5b58 \u7684 \u8d85\u7ea7ViewGroup \u800c\u5df2\u3002\u5e76\u4e14RecyclerView\u53ea\u662f\u5c06\u81ea\u5df1\u7684 onLayout \u65b9\u6cd5\u5b8c\u5168\u59d4\u6258\u7ed9\u4e86LayoutManager\uff0c\u6240\u4ee5\u7ee7\u627fLayoutManager\u4e5f\u4e0d\u4f1a\u81ea\u5e26\u590d\u7528\u673a\u5236\u548c\u89c6\u56fe\u56de\u6536\u3002 \u7528 LinearLayoutManager \u4e3e\u4f8b\uff0c\u5728LinearLayoutManager\u6e90\u7801\u4e2d\u6709\u4e00\u4e2a recycleByLayoutState() \u65b9\u6cd5\uff0c\u5b83\u5728\u6eda\u52a8\u586b\u5145itemView\u65f6\u8c03\u7528\uff0c\u7528\u6765\u56de\u6536\u8d85\u51fa\u5c4f\u5e55\u7684itemView\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u81ea\u5b9a\u4e49LayoutManager\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u6ce8\u610f\uff0c\u4ec0\u4e48\u65f6\u5019\u8be5\u56de\u6536itemView\u662f\u7531\u6211\u4eec\u5f00\u53d1\u8005\u81ea\u5df1\u51b3\u5b9a\uff01 @Override public int scrollHorizontallyBy(int dx, RecyclerView.Recycler recycler, RecyclerView.State state) { ... return scrollBy(dx, recycler, state); } int scrollBy(int delta, RecyclerView.Recycler recycler, RecyclerView.State state) { ... fill(recycler, mLayoutState, state, false); ... } int fill(RecyclerView.Recycler recycler, LayoutState layoutState, RecyclerView.State state, boolean stopOnFocusable) { recycleByLayoutState(recycler, layoutState); ... layoutChunk() ... recycleByLayoutState(recycler, layoutState); } void recycleByLayoutState(){ ... if (layoutState.mLayoutDirection == LayoutState.LAYOUT_START) { recycleViewsFromEnd(recycler, scrollingOffset, noRecycleSpace); } else { recycleViewsFromStart(recycler, scrollingOffset, noRecycleSpace); } }","title":"\u4f7f\u7528RecyclerView\u6216\u8005\u8bf4\u7ee7\u627f\u4e86LayoutManager\u5c31\u81ea\u5e26\u4e86\u590d\u7528\u673a\u5236\u548c\u89c6\u56fe\u56de\u6536\uff1f"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#onmeasureisautomeasureenabled","text":"\u4e0a\u9762 \u5e38\u89c4\u5957\u8def \u4e2d\u6211\u5199\u7684\u662f \u6309\u9700 \u91cd\u5199onMeasure()\u548cisAutoMeasureEnabled()\u65b9\u6cd5\uff0c\u4e3a\u4ec0\u4e48\u662f \u6309\u9700 \u5462\uff1f\u56e0\u4e3a LayoutManger \u7684 onMeasure() \u6709\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u5e76\u4e14 isAutoMeasureEnabled() \u9ed8\u8ba4\u8fd4\u56de\u7684 false \u3002\u8fd9\u4e5f\u662f\u4e3a\u5565\u6709\u4e9b\u535a\u5ba2\u6216\u8005Github\u7684\u6e90\u7801\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u90fd\u6ca1\u6709\u91cd\u5199\u5374\u4f9d\u7136\u6ca1\u6709\u95ee\u9898\u7684\u539f\u56e0\u6240\u5728\uff0c\u56e0\u4e3a\u4ed6\u4eec\u76f4\u63a5\u628a RecyclerView \u7684 width \u548c height \u90fd\u8bbe\u7f6e\u6210\u4e86 match_parent \u3002\u5f53\u7136\u5982\u679c\u4f60\u80fd\u786e\u5b9a\u4f60\u7684LayoutManager\u53ea\u652f\u6301\u5bbd\u9ad8\u540c\u65f6\u8981 match_parent \u624d\u80fd\u6b63\u5e38\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u641e\u3002 \u90a3\u4e48\u95ee\u9898\u53c8\u6765\u4e86\uff0c\u4ec0\u4e48\u65f6\u5019\u91cd\u5199 onMeasure() \uff0c\u4ec0\u4e48\u65f6\u5019\u91cd\u5199 isAutoMeasureEnabled() \uff0c\u6216\u8005\u6709\u6ca1\u6709\u60c5\u51b5\u540c\u65f6\u91cd\u5199\u4e24\u4e2a\u65b9\u6cd5\u5462\uff1f\u8fd9\u91cc\u5728\u6211\u9605\u8bfb\u4e86\u5927\u91cf\u6e90\u7801\u548c\u6e90\u7801\u6ce8\u91ca\u5f97\u51fa\u7684\u7ed3\u8bba\u5c31\u662f\uff1a\u4e0d\u8981\u540c\u65f6\u91cd\u5199\u4e24\u4e2a\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u4e92\u65a5\u7684\uff0c\u770b\u6e90\u7801\u4f60\u5c31\u61c2\u4e86\u3002\u91cd\u5199 onMeasure() \u7684\u60c5\u51b5\u4e5f\u6781\u5c11\uff0c\u9664\u975e\u50cf\u6211\u90a3\u4e2a PickerLayoutManger \u4e00\u6837\uff0c\u8981\u8bbe\u7f6e\u4e00\u4e2a\u7edd\u5bf9\u7684\u9ad8\u5ea6\u7ed9LayoutManager\u3002 isAutoMeasureEnabled() \u662f\u81ea\u6d4b\u91cf\u6a21\u5f0f\uff0c\u7ed9 RecyclerView \u7684 wrap_content \u7684\u7528\u7684\uff0c\u5982\u679c\u4f60\u7684LayoutManager\u8981\u652f\u6301 wrap_content \u90a3\u5c31\u5fc5\u987b\u91cd\u5199\u3002","title":"\u672a\u6b63\u786e\u7684\u91cd\u5199onMeasure()\u6216isAutoMeasureEnabled()\u65b9\u6cd5"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#onlayoutchildrenitemview","text":"\u7f51\u4e0a\u535a\u5ba2\u4ee5\u53caGithub\u4e0a\u6709\u4e00\u4e9bDemo\uff0c\u666e\u904d\u5b58\u5728\u4e0b\u9762\u8fd9\u79cd\u5199\u6cd5\uff1a for (int i = 0; i < getItemCount(); i++) { View view = recycler.getViewForPosition(i); addView(view); ...... } \u6709\u4e00\u8bf4\u4e00\uff0c\u80fd\u5199\u51fa\u8fd9\u79cd\u5199\u6cd5\u7684\u4eba\u771f\u7684\u4e0d\u662f\u5728\u641e\u7b11\u5417\uff1f\u5728 onLayoutChildren \u7684\u65f6\u5019\u76f4\u63a5 \u904d\u5386itemCount \u7136\u540e addView \uff0c\u8fd9\u771f\u7684\u4e0d\u662f\u5728\u4f5c\u6b7b\u5417\uff1f\u5c31\u7b97\u6709\u7f13\u5b58\u7b2c\u4e00\u6b21\u904d\u5386\u8fd8\u662f\u4f1a\u5168\u90e8\u8d70\u4e00\u904d onCreateViewHolder \u554a\uff0c\u81ea\u5df1\u5c31\u4e0d\u80fd\u628aitemCount\u8bbe\u4e2a\u5927\u70b9\u7684\u6570\u8bd5\u8bd5\u4f1a\u4e0d\u4f1a\u5361\u6b7bUI\u6e32\u67d3\u5417\uff01\u5f53\u6211\u6709\u8fd9\u79cd\u60f3\u6cd5\uff0c\u800c\u4e14\u8fd8\u60f3\u53bb\u8bc4\u8bba\u533a\u8ba8\u6559\u8ba8\u6559\u7684\u65f6\u5019\uff0c\u6211\u53c8\u53d1\u73b0\u4e86\u4e0a\u9762\u90a3\u79cd\u5199\u6cd5\u7684\u53d8\u79cd\uff0c\u7f62\u4e86\u7f62\u4e86\uff0c\u8fd9\u55b7\u5b50\u4e0d\u5f53\u4e5f\u7f62\ud83d\ude0f\ud83d\ude0f\ud83d\ude0f\u3002 for (int i = 0; i < getItemCount(); i++) { View view = recycler.getViewForPosition(i); addView(view); ...... \u8bb0\u5f55\u4e00\u4e9bitem\u7684\u5bbd\u9ad8\uff0c\u4f4d\u7f6e\u7b49\u4fe1\u606f ..... recyler.recycleView(view) } \u6700\u7b80\u5355\u7684\u6d4b\u8bd5\u65b9\u6cd5\u5c31\u662f\u628a itemCount \u8bbe\u7f6e\u4e3a Int.MAX_VALUE \uff0c\u6ca1\u6709\u5f02\u5e38\u53d1\u751f\u5c31\u7b97OK\u3002","title":"onLayoutChildren()\u65f6\u76f4\u63a5\u52a0\u8f7d\u4e86\u5168\u90e8itemView"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#scrolltopositionsmoothscrolltoposition","text":"\u8fd9\u4e2a\u95ee\u9898\u4e25\u8c28\u7684\u6765\u8bb2\u4e5f\u4e0d\u7b97\u4ec0\u4e48\u5927\u95ee\u9898\uff0c\u4f46\u662f\u79c1\u4ee5\u4e3a\u4e00\u4e2a\u5408\u683c\u7684LayoutManager\u7684\u8fd8\u662f\u5e94\u8be5\u53bb\u9002\u914d\u8fd9\u4e24\u4e2a\u65b9\u6cd5\uff0c\u6bd5\u7adf RecyclerView \u7684 scrollToPosition() \u548c smoothScrollToPosition() \u53ea\u662f\u5bf9LayoutManager\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7684\u5c01\u88c5\uff0c\u7279\u522b\u662f\u4e00\u4e9b\u53d1\u5e03\u5230Github\u4e0a\u7684\u5f00\u6e90\u5e93\u66f4\u5e94\u8be5\u53bb\u9002\u914d\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u3002","title":"\u672a\u652f\u6301scrollToPosition()\u6216smoothScrollToPosition()\u65b9\u6cd5"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#onlayoutchildren","text":"\u8fd9\u4e2a\u95ee\u9898\u6211\u53d1\u73b0\u5927\u591a\u6570\u7684\u4eba\u90fd\u6ca1\u6ce8\u610f\u5230\uff0c\u800c\u4e14\u6709\u4e00\u4e9b\u5f00\u6e90\u5e93\u4e5f\u662f\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u7684\u3002\u95ee\u9898\u51fa\u73b0\u7684\u6839\u6e90\u5c31\u662f\u5728\u5f53 EditText \u83b7\u53d6\u5230\u7126\u70b9\u5bfc\u81f4 \u8f6f\u952e\u76d8\u5f39\u8d77\u6216\u8005\u6536\u8d77 \u7684\u65f6\u5019\uff0cLayoutManager\u4f1a\u91cd\u65b0\u56de\u8c03 onLayoutChildren() \u65b9\u6cd5\u3002\u5982\u679c\u4e00\u4e2aLayoutManager\u7684 onLayoutChildren \u65b9\u6cd5\u5199\u5f97\u4e0d\u591f\u5408\u7406\uff0c\u5c31\u4f1a\u7ed9\u4f7f\u7528\u7684\u4eba\u5e26\u6765\u56f0\u6270\uff0c\u8be6\u7ec6\u7684\u5185\u5bb9\u4f1a\u653e\u5728\u4e0b\u9762\u5f00\u59cb\u81ea\u5b9a\u4e49LayoutManager\u518d\u8bb2\u3002 \u8bdd\u8bf4\u5230\u8fd9\u91cc\uff0c\u6211\u5728\u770b LinearLayoutManager \u6e90\u7801\u53c8\u4e00\u6b21\u5bf9Google\u5de5\u7a0b\u5e08\u6df1\u6df1\u7684\u6298\u670d\uff0c\u5728LinearLayoutManager\u7684 onLayoutChildren \u65b9\u6cd5\u4e2d\u6709\u4e00\u6bb5\u4ee3\u7801\u5c31\u662f\u5bf9\u8fd9\u79cd\u95ee\u9898\u7684\u5904\u7406\uff0c\u5e76\u4e14\u8fd8\u662f\u5347\u7ea7\u7248\u3002 final View focused = getFocusedChild() ... else if (focused != null && (mOrientationHelper.getDecoratedStart(focused) >= mOrientationHelper.getEndAfterPadding() || mOrientationHelper.getDecoratedEnd(focused) <= mOrientationHelper.getStartAfterPadding())) { mAnchorInfo.assignFromViewAndKeepVisibleRect(focused, getPosition(focused)); } assignFromViewAndKeepVisibleRect \u65b9\u6cd5\u662f\u5173\u952e\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u81ea\u5df1\u53bb\u770b\u770b\u6e90\u7801\u3002\u5927\u6982\u903b\u8f91\u5c31\u662f\uff1a\u83b7\u53d6\u5230RecyclerView\u4e2d\u83b7\u53d6\u5230\u7126\u70b9\u7684\u90a3\u4e2aitemView\u548c\u5b83\u7684position\uff0c\u5e76\u5f00\u59cb\u8ba1\u7b97\u5176\u4f4d\u7f6e\uff0c\u8ba9\u5b83\u4fdd\u6301\u5728\u8f6f\u952e\u76d8\u4e0a\u9762\u7684\u53ef\u89c1\u8303\u56f4\u5185\u3002","title":"\u672a\u89e3\u51b3\u8f6f\u952e\u76d8\u5f39\u51fa\u6216\u6536\u8d77onLayoutChildren()\u65b9\u6cd5\u91cd\u65b0\u8c03\u7528\u7684\u95ee\u9898"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#api","text":"\u5728\u5f00\u59cb\u81ea\u5b9a\u4e49LayoutManager\u524d\uff0c\u5148\u89e3\u91ca\u4e00\u4e9bApi\u7684\u7528\u6cd5\uff0c\u8fd9\u6837\u53ef\u4ee5\u66f4\u5feb\u7684\u8fdb\u5165\u4e3b\u9898\u3002","title":"\u4e00\u4e9b\u6709\u7528\u7684Api"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#view","text":"val view = recycler.getViewForPosition(position) \u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u4ece Recycler \u4e2d\u83b7\u53d6\u5230\u4e00\u4e2a\u4e0d\u4f1a\u4e3a null \u7684View\uff0c\u5982\u679cposition\u8d85\u8fc7itemCount\u6216\u5c0f\u4e8e0\uff0c\u5c31\u4f1a\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\u3002\u5185\u90e8\u4ee3\u7801\u903b\u8f91\u5c31\u662f\u4ece\u4e0d\u540c\u7684\u7f13\u5b58\u4e2d\u62ffView\uff0c\u6709\u5c31\u76f4\u63a5\u8fd4\u56de\u8fd9\u4e2aView\uff0c\u6ca1\u6709\u5c31\u7528 onCreateViewHolder \u521b\u5efa\u5e76\u8fd4\u56de\u3002 Recycler \u7c7b\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u4e00\u4e2a\u56de\u6536\u7ba1\u7406\u7ad9\uff0c\u9700\u8981View\u65f6\u5c31\u5411\u5b83\u8981\uff0c\u4e0d\u9700\u8981\u65f6\u5c31\u4e22\u7ed9\u5b83\u3002","title":"\u83b7\u53d6\u4e00\u4e2aView"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#viewrecyclerview","text":"addDisappearingView(View child) addDisappearingView(View child, int index) addView(View child) addView(View child, int index) addDisappearingView \u65b9\u6cd5\u4e3b\u8981\u7528\u4e8e\u652f\u6301\u9884\u6d4b\u52a8\u753b\uff0c\u4f8b\u5982\uff1a notifyItemRemoved \u65f6\u7684\u5220\u9664\u52a8\u753b addView \u65b9\u6cd5\u66f4\u5e38\u7528\uff0c\u53ea\u8981\u662f\u6dfb\u52a0View\u90fd\u9700\u8981\u7528\u5230\u5b83\u3002","title":"\u5c06View\u6dfb\u52a0\u5230RecyclerView\u4e2d"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#view_1","text":"measureChild(@NonNull View child, int widthUsed, int heightUsed) measureChildWithMargins(@NonNull View child, int widthUsed, int heightUsed) \u4e24\u4e2a\u65b9\u6cd5\u90fd\u662f\u7528\u6765\u6d4b\u91cfView\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u4ece\u540d\u5b57\u6211\u4eec\u4e5f\u80fd\u770b\u51fa\uff0c\u4e00\u4e2a\u65b9\u6cd5\u662f\u4f1a\u5e26\u4e0a margin \u8ba1\u7b97\uff0c\u53e6\u5916\u4e00\u4e2a\u5219\u4e0d\u4f1a\u3002 widthUsed \u548c heightUsed \u4e5f\u80fd\u4ece\u540d\u79f0\u770b\u51fa\u7aef\u502a\uff0c\u4e00\u822c\u4f200\u5c31\u53ef\u4ee5\u4e86\uff0c\u8ddf\u7740 LinearLayoutManager \u5199\u5c31\u5bf9\u4e86\u3002 \u6ce8\u610f\uff1a \u6d4b\u91cfView\u4e5f\u4e0d\u4e00\u5b9a\u8981\u4f7f\u7528\u8fd9\u4e24\u4e2a\u65b9\u6cd5\uff0c\u5728\u7279\u6b8a\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5199\u6d4b\u91cf\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u5728 StaggeredGridLayoutManager \u4e2d\u5c31\u662f\u81ea\u5df1\u91cd\u5199\u7684\u6d4b\u91cf\u65b9\u6cd5 measureChildWithDecorationsAndMargin() \uff0c\u4ee5\u53ca\u6211\u7684\u4e00\u4e2a\u5f00\u6e90\u5e93 PickerLayoutManager \u4e2d\u5728 onMeasure \u4e2d\u76f4\u63a5\u4f7f\u7528\u4e86 view.measure() \u8fd9\u79cd\u539f\u751f\u65b9\u6cd5\u3002","title":"\u6d4b\u91cfView"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#view_2","text":"layoutDecorated(@NonNull View child, int left, int top, int right, int bottom) layoutDecoratedWithMargins(@NonNull View child, int left, int top, int right, int bottom) { \u8fd9\u4e24\u4e2a\u65b9\u6cd5\u6ca1\u5565\u597d\u8bf4\u7684\uff0c\u5c31\u662f\u5bf9 view.layout() \u7684\u5c01\u88c5\uff0c\u53ea\u8981\u5199\u8fc7\u81ea\u5b9a\u4e49ViewGroup\u7684\u4eba\u5e94\u8be5\u4e5f\u4e0d\u4f1a\u964c\u751f\u3002","title":"\u6446\u653eView"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#view_3","text":"int getPosition(@NonNull View view) \u83b7\u53d6View\u7684layout position\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5341\u5206\u6709\u7528\uff0c\u4e5f\u6ca1\u5565\u4eba\u8bb2\u5230\u8fc7\u3002 int getDecoratedMeasuredWidth(@NonNull View child) int getDecoratedMeasuredHeight(@NonNull View child) \u83b7\u53d6View\u7684\u5bbd\u9ad8\uff0c\u5e76\u4e14\u662f\u5305\u542b\u4e86ItemDecoration\u7684\u5360\u6bd4\u3002 int getDecoratedTop(@NonNull View child) int getDecoratedLeft(@NonNull View child) int getDecoratedRight(@NonNull View child) int getDecoratedBottom(@NonNull View child) \u83b7\u53d6View\u7684left\uff0ctop\uff0cright\uff0cbottom\u8ddd\u79bbRecyclerView\u8fb9\u7f18\u7684\u8ddd\u79bb\uff0c\u540c\u6837\u5305\u542b\u4e86\u4e86ItemDecoration\u7684\u5360\u6bd4\u3002","title":"\u83b7\u53d6View\u7684\u76f8\u5173\u4fe1\u606f"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#view_4","text":"offsetChildrenHorizontal(@Px int dx) offsetChildrenVertical(@Px int dy) \u6c34\u5e73\u6216\u5782\u76f4\u65b9\u5411\u7684\u79fb\u52a8\u5168\u90e8\u5b50View\uff0c\u770b\u6e90\u7801\u5f97\u77e5\u5176\u5b9e\u5c31\u662f\u904d\u5386\u8c03\u7528\u4e86\u5b50View\u7684 offsetTopAndBottom \u6216 offsetLeftAndRight \u65b9\u6cd5\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u5728\u81ea\u5b9a\u4e49ViewGroup\u79fb\u52a8\u5b50View\u65f6\u4e5f\u7ecf\u5e38\u7528\u5230\u3002","title":"\u79fb\u52a8View"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#view_5","text":"detachAndScrapAttachedViews(@NonNull Recycler recycler) detachAndScrapView(@NonNull View child, @NonNull Recycler recycler) detachAndScrapViewAt(int index, @NonNull Recycler recycler) removeAndRecycleAllViews(@NonNull Recycler recycler) removeAndRecycleView(@NonNull View child, @NonNull Recycler recycler) removeAndRecycleViewAt(int index, @NonNull Recycler recycler) \u4e0a\u9762\u51e0\u4e2a\u65b9\u6cd5\u53ea\u8981\u8bb0\u4f4f\u662f detachAndScrap \u5f00\u5934\u7684\u5c31\u662f\u8f7b\u91cf\u7ea7\u7684\u56de\u6536View\uff0c\u9a6c\u4e0a\u53c8\u8981\u6dfb\u52a0View\u56de\u6765\u3002 removeAndRecycle \u5f00\u5934\u7684\u5c31\u662f\u52a0\u5f3a\u7248\u7684\u56de\u6536View\uff0c\u5f53\u518d\u6b21\u6dfb\u52a0View\u56de\u6765\u65f6\u4f1a\u6267\u884c onBindViewHolder \u65b9\u6cd5\u3002 \u6211\u770b\u7f51\u4e0a\u6ca1\u5565\u535a\u5ba2\u771f\u6b63\u8bb2\u6e05\u695a\u4ec0\u4e48\u65f6\u5019\u8be5\u7528\u54ea\u4e2a\u65b9\u6cd5\u6765\u56de\u6536View\u7684\uff0c\u8fd9\u91cc\u6709\u4e2a\u7b80\u5355\u7684\u529e\u6cd5\u533a\u5206\u4ec0\u4e48\u65f6\u5019\u8be5\u7528\u54ea\u4e00\u4e2a\u56de\u6536View\u7684\u65b9\u6cd5\uff0c\u90a3\u5c31\u662f\uff1a \u5728 onLayoutChildren \u56de\u6536View\u4f7f\u7528 detachAndScrap \u7684\u7cfb\u5217\u65b9\u6cd5\uff0c\u56e0\u4e3aonLayoutChildren\u65b9\u6cd5\u4f1a\u8fde\u7eed\u591a\u6b21\u8c03\u7528\uff0c detachAndScrap \u7cfb\u5217\u7684\u65b9\u6cd5\u5c31\u662f\u7528\u5728\u8fd9\u65f6\u5019\u3002 \u5728 \u6eda\u52a8\u53d1\u751f\u540e \u8981\u56de\u6536\u8d85\u51fa\u5c4f\u5e55\u4e0d\u53ef\u89c1\u7684View\u65f6\u7528 removeAndRecycle \u7684\u7cfb\u5217\u65b9\u6cd5\u3002 \u522b\u95ee\u6211\u4e3a\u5565\u77e5\u9053\uff0c\u56e0\u4e3a\u6211\u770b LinearLayoutManager \u548c StaggeredGridLayoutManager \u4e5f\u662f\u8fd9\u4e48\u7528\u7684\uff0c\u563b\u563b\uff01read the fucking source code~","title":"\u56de\u6536View"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#orientationhelper","text":"\u8fd9\u4e2a\u5e2e\u52a9\u7c7b\u503c\u5f97\u597d\u597d\u5938\u8d5e\uff0c\u8fd9\u4e5f\u662f\u6211\u5728\u9605\u8bfb LinearLayoutManager \u6e90\u7801\u65f6\u53d1\u73b0\u7684\uff0cOrientationHelper\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u62bd\u8c61\u4e86\u5927\u91cf\u4fbf\u5229\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u4e24\u4e2a\u9759\u6001\u65b9\u6cd5 createHorizontalHelper \u548c createVerticalHelper \u7528\u6765\u521b\u5efa\u76f8\u5e94\u65b9\u5411\u7684\u5e2e\u52a9\u7c7b\u4f9b\u5f00\u53d1\u8005\u4f7f\u7528\u3002\u4f7f\u7528OrientationHelper\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u5982\u4e0b\u6211\u5728 StackLayoutManager \u7684\u6837\u677f\u4ee3\u7801\u3002 /** * \u79fb\u52a8\u6240\u6709\u5b50view */ private fun offsetChildren(amount: Int) { if (orientation == HORIZONTAL) { offsetChildrenHorizontal(amount) } else { offsetChildrenVertical(amount) } } ... private fun getTotalSpace(): Int { return if (orientation == HORIZONTAL) { width - paddingLeft - paddingRight } else { height - paddingTop - paddingBottom } }","title":"OrientationHelper\u5e2e\u52a9\u7c7b"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#layoutmanager_4","text":"\u73b0\u5728\u6211\u4eec\u5f00\u59cb\u6b63\u5f0f\u8bb2\u89e3\u5982\u4f55\u81ea\u5b9a\u4e49\u4e00\u4e2aLayoutManager\uff0c\u5927\u6982\u6b65\u9aa4\u5c31\u662f\u5982\u4e0a\u9762 \u81ea\u5b9a\u4e49LayoutManager\u7684\u5e38\u89c4\u5957\u8def \u4e00\u6837\uff0c\u5e76\u4e14\u6211\u4f1a\u7528\u6211\u5199\u7684\u4e24\u4e2a\u5f00\u6e90\u5e93 PickerLayoutManager \u548c StackLayoutManager \u6765\u8bb2\u89e3\uff0c\u559c\u6b22\u7684\u53ef\u4ee5 star \u4e00\u4e0b\u3002 https://github.com/simplepeng/StackLayoutManager https://github.com/simplepeng/PickerLayoutManager","title":"\u6b63\u5f0f\u5f00\u59cb\u81ea\u5b9a\u4e49LayoutManager"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#layoutmanagergeneratedefaultlayoutparams","text":"\u8fd9\u6ca1\u5565\u597d\u8bf4\u7684\uff0c generateDefaultLayoutParams \u662f\u62bd\u8c61\u65b9\u6cd5\uff0c\u7ee7\u627fLayoutManager\u5c31\u5fc5\u987b\u5b9e\u73b0\uff0c\u4f60\u81ea\u5b9a\u4e49\u7684LayoutManager\u7684itemView\u652f\u6301\u5565LayoutParams\u5c31\u5199\u54ea\u79cd\uff0c\u6bd4\u5982\u6211\u5199\u7684 PickerLayoutManager \u548c StackLayoutManager \u5c31\u662f\u4e0d\u540c\u7684\u5b9e\u73b0\u3002 class PickerLayoutManager:: RecyclerView.LayoutManager(){ override fun generateDefaultLayoutParams(): RecyclerView.LayoutParams { return if (orientation == HORIZONTAL) { RecyclerView.LayoutParams( RecyclerView.LayoutParams.WRAP_CONTENT, RecyclerView.LayoutParams.MATCH_PARENT ) } else { RecyclerView.LayoutParams( RecyclerView.LayoutParams.MATCH_PARENT, RecyclerView.LayoutParams.WRAP_CONTENT ) } } } class StackLayoutManager: RecyclerView.LayoutManager(){ override fun generateDefaultLayoutParams(): RecyclerView.LayoutParams { return RecyclerView.LayoutParams( ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT ) } }","title":"\u7ee7\u627fLayoutManager\u5e76\u5b9e\u73b0generateDefaultLayoutParams()\u65b9\u6cd5"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#onmeasureisautomeasureenabled_1","text":"class PickerLayoutManager:: RecyclerView.LayoutManager(){ override fun onMeasure( recycler: RecyclerView.Recycler, state: RecyclerView.State, widthSpec: Int, heightSpec: Int ) { if (state.itemCount == 0) { super.onMeasure(recycler, state, widthSpec, heightSpec) return } if (state.isPreLayout) return //\u5047\u5b9a\u6bcf\u4e2aitem\u7684\u5bbd\u9ad8\u4e00\u76f4\uff0c\u6240\u4ee5\u7528\u7b2c\u4e00\u4e2aview\u8ba1\u7b97\u5bbd\u9ad8\uff0c //\u8fd9\u79cd\u65b9\u5f0f\u53ef\u80fd\u4e0d\u592a\u597d val itemView = recycler.getViewForPosition(0) addView(itemView) //\u8fd9\u91cc\u4e0d\u80fd\u7528measureChild\u65b9\u6cd5\uff0c\u5177\u4f53\u770b\u5185\u90e8\u6e90\u7801\u5b9e\u73b0\uff0c\u5185\u90e8getWidth\u9ed8\u8ba4\u4e3a0 // measureChildWithMargins(itemView, 0, 0) itemView.measure(widthSpec, heightSpec) mItemWidth = getDecoratedMeasuredWidth(itemView) mItemHeight = getDecoratedMeasuredHeight(itemView) //\u56de\u6536\u8fd9\u4e2aView detachAndScrapView(itemView, recycler) //\u8bbe\u7f6e\u5bbd\u9ad8 setWidthAndHeight(mItemWidth, mItemHeight) } private fun setWidthAndHeight( width: Int, height: Int ) { if (orientation == HORIZONTAL) { setMeasuredDimension(width * visibleCount, height) } else { setMeasuredDimension(width, height * visibleCount) } } } class StackLayoutManager: RecyclerView.LayoutManager(){ override fun isAutoMeasureEnabled(): Boolean { return true } } \u4ece\u4e0a\u9762\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c PickerLayoutManager \u91cd\u5199\u4e86 onMeasure() \uff0c StackLayoutManager \u91cd\u5199\u4e86 isAutoMeasureEnabled() \u65b9\u6cd5\uff0c\u8ddf\u4e0a\u9762\u5e38\u89c1\u8bef\u533a\u4e2d\u7684\u8bb2\u5f97\u4e00\u81f4\u3002","title":"\u91cd\u5199onMeasure()\u6216isAutoMeasureEnabled()\u65b9\u6cd5\u3002"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#onlayoutchildrenview","text":"\u4ece\u8fd9\u4e2a\u65b9\u6cd5\u5f00\u59cb\uff0c PickerLayoutManager \u548c StackLayoutManager \u7684\u5957\u8def\u90fd\u662f\u4e00\u81f4\u7684\uff1a\u8ba1\u7b97\u5269\u4f59\u7a7a\u95f4->addView()->measureView()->layoutView()\u3002\u56e0\u4e3a\u90fd\u662f\u6a21\u4eff LinearLayoutManager \u7684\u5199\u6cd5\uff0c\u6240\u4ee5\u4e0b\u9762\u5f00\u59cb\u53ea\u7528 StackLayoutManager \u7684 \u4f2a\u4ee3\u7801 \u4f5c\u4ee3\u7801\u793a\u4f8b\uff0c\u7279\u522b\u7684\u5730\u65b9\u518d\u7528\u4e0d\u540c\u5b9e\u73b0\u7684\u4ee3\u7801\u505a\u6bd4\u8f83\u3002 \u8bb0\u4f4f\u4e0b\u9762\u7684\u5927\u591a\u6570\u90fd\u662f \u4f2a\u4ee3\u7801 \uff0c\u4e0d\u8981\u76f4\u63a5\u590d\u5236\u8fd0\u884c\uff0c\u56e0\u4e3a StackLayoutManager \u652f\u6301\u7684\u5c5e\u6027\u5f88\u591a\uff0c\u5305\u62ec\u4e86\u5982\u540c LinearLayoutManager \u7684 reverseLayout \u548c orientation \u7b49\uff0c\u5e76\u4e14\u4e0b\u9762\u7684\u793a\u4f8b\u53ea\u4f1a\u8bb2 orientation==HORIZONTAL \u7684\u4ee3\u7801\u5b9e\u73b0\uff0c\u4e3b\u8981\u662f\u6015\u4ee3\u7801\u903b\u8f91\u592a\u590d\u6742\u4e0d\u597d\u7406\u89e3\uff0c\u60f3\u770b\u5177\u4f53\u6e90\u7801\u7684\u53ef\u4ee5\u70b9\u51fb\u4e0a\u9762\u7684\u6e90\u7801\u94fe\u63a5\u67e5\u770b\u3002 override fun onLayoutChildren(recycler: RecyclerView.Recycler, state: RecyclerView.State) { //\u8f7b\u91cf\u7ea7\u7684\u5c06view\u79fb\u9664\u5c4f\u5e55 detachAndScrapAttachedViews(recycler) //\u5f00\u59cb\u586b\u5145view var totalSpace = width - paddingRight var currentPosition = 0 var left = 0 var top = 0 var right = 0 var bottom = 0 //\u6a21\u4effLinearLayoutManager\u7684\u5199\u6cd5\uff0c\u5f53\u53ef\u7528\u8ddd\u79bb\u8db3\u591f\u548c\u8981\u586b\u5145 //\u7684itemView\u7684position\u5728\u5408\u6cd5\u8303\u56f4\u5185\u624d\u586b\u5145View while (totalSpace > 0 && currentPosition < state.itemCount) { val view = recycler.getViewForPosition(currentPosition) addView(view) measureChild(view, 0, 0) right = left + getDecoratedMeasuredWidth(view) bottom = top + getDecoratedMeasuredHeight(view) layoutDecorated(view, left, top, right, bottom) currentPosition++ left += getDecoratedMeasuredWidth(view) //\u5173\u952e\u70b9 totalSpace -= getDecoratedMeasuredWidth(view) } //layout\u5b8c\u6210\u540e\u8f93\u51fa\u76f8\u5173\u4fe1\u606f logChildCount(\"onLayoutChildren\", recycler) } \u4e0a\u9762\u7684\u4ee3\u7801\u5f88\u7b80\u5355\u4e86\uff0c\u76f8\u4fe1\u5199\u8fc7\u81ea\u5b9a\u4e49ViewGroup\u7684\u4eba\u90fd\u80fd\u770b\u61c2\u3002\u4e0a\u9762\u4ee3\u7801\u5f88\u7b80\u5355\u7684\u5b9e\u73b0\u4e86\u4e00\u4e2a \u6a2a\u5411\u7684LinearLayoutManager \uff0c\u5982\u56fe\u6240\u793a\uff1a \u5e76\u4e14\u5728 layout \u7ed3\u675f\u540e\uff0c\u589e\u52a0\u4e86\u4e00\u4e2a\u8f93\u51fa childCount \u7684\u65b9\u6cd5\u3002 private fun logChildCount(tag: String, recycler: RecyclerView.Recycler) { Log.d(tag, \"childCount = $childCount -- scrapSize = ${recycler.scrapList.size}\") } D/onLayoutChildren: childCount = 9 -- scrapSize = 0 D/onLayoutChildren: childCount = 9 -- scrapSize = 0 D/onLayoutChildren: childCount = 9 -- scrapSize = 0 \u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u4eec\u6446\u653e\u4e86position 0-8 \u7684itemView\uff0c\u6240\u4ee5 childCount=9 \uff0c\u5e76\u4e14 scrapSize=0 \uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u4e2a\u65b9\u6cd5\u5199\u5f97\u662f\u5408\u683c\u7684\u3002\u56e0\u4e3a\u6211\u4eec\u7528 totalSpace > 0 \u4f5c\u4e86 while \u8868\u8fbe\u5f0f\u7684\u5224\u65ad\uff0c\u6240\u4ee5\u5e76\u4e0d\u7528\u5173\u5fc3 itemCount \u6709\u591a\u5927\u3002","title":"\u91cd\u5199onLayoutChildren()\u5f00\u59cb\u586b\u5145\u5b50View\u3002"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#canscrollhorizontallycanscrollvertically","text":"\u4e0a\u9762\u5df2\u7ecf\u521d\u59cb\u5316\u6446\u653e\u4e86\u4e00\u4e9bitemView\uff0c\u4f46\u662fRecyclerView\u8fd8\u662f\u4e0d\u80fd\u6ed1\u52a8\u7684\uff0c\u4e0d\u4fe1\u7684\u53ef\u4ee5\u8bd5\u8bd5\u3002\u6211\u4eec\u5fc5\u987b\u91cd\u5199\u4e0b\u9762\u4e24\u4e2a\u65b9\u6cd5\uff0cRecyclerView\u624d\u4f1a\u5c06\u6ed1\u52a8\u7684\u4e8b\u4ef6\u4ea4\u7ed9LayoutManager\u3002 override fun canScrollHorizontally(): Boolean { return orientation == HORIZONTAL } override fun canScrollVertically(): Boolean { return orientation == VERTICAL } \u6ca1\u5565\u597d\u8bf4\u7684\uff0c\u60f3\u652f\u6301\u54ea\u4e2a\u65b9\u5411\u7684\u6ed1\u52a8\uff0c\u5c31\u8fd4\u56de true \u3002\u540c\u65f6\u8fd4\u56detrue\u90fd\u53ef\u4ee5\uff0c\u90a3\u5c31\u662f\u540c\u65f6\u652f\u6301\u4e0a\u4e0b\u5de6\u53f3\u6ed1\u52a8\uff0c\u7c7b\u4f3cDave\u5927\u795e\u90a3\u79cd\u8868\u683c\u7c7b\u578b\u7684LayoutManager\u3002","title":"\u91cd\u5199canScrollHorizontally()\u548ccanScrollVertically()\u65b9\u6cd5\u652f\u6301\u6ed1\u52a8\u3002"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#scrollhorizontallybyscrollverticallybyviewview","text":"override fun scrollHorizontallyBy( dx: Int, recycler: RecyclerView.Recycler, state: RecyclerView.State ): Int { return super.scrollHorizontallyBy(dx, recycler, state) } \u8fd9\u91cc\u5148\u8bb2\u4e00\u4e0b scrollHorizontallyBy \u548c scrollVerticallyBy \u4e24\u4e2a\u6ed1\u52a8\u65b9\u6cd5\u7684\u6982\u5ff5\uff1a \u6211\u770b\u4e00\u4e9b\u535a\u5ba2\u4e0b\u6709\u4e9b\u8bc4\u8bba\u8bf4\uff1a\"\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4e5f\u4e0d\u80fd\u6ed1\u52a8\u554a\uff01\"\uff0c\u8bf4\u662f\u8bf4\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u662f\u6ed1\u52a8\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u5176\u5b9e\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u53ea\u4f1a\u8fd4\u56de\u624b\u6307\u5728RecyclerView\u4e0a\u7684\u79fb\u52a8\u8ddd\u79bb\u7ed9\u6211\u4eec\uff0c\u5c31\u662f\u65b9\u6cd5\u4e2d\u5bf9\u5e94\u7684 dx \u548c dy \uff0c dx>0 \u5c31\u662f\u624b\u6307 \u4ece\u53f3\u6ed1\u5411\u5de6 \uff0c dy>0 \u5c31\u662f\u624b\u6307 \u4ece\u4e0b\u6ed1\u5411\u4e0a \uff0c\u540c\u7406 dx,dy<0 \u5219\u53cd\uff0c\u771f\u6b63\u79fb\u52a8View\u7684\u4e8b\u60c5\u8fd8\u662f\u8981\u5f00\u53d1\u8005\u81ea\u5df1\u5b9e\u73b0\uff0c LinearLayoutManager \u4e2d\u5c31\u7b80\u5355\u7684\u7528 offsetChildren \u65b9\u6cd5\u5b9e\u73b0\u7684\u79fb\u52a8\u3002\u6216\u8005\u4e5f\u6709\u7684\u8bc4\u8bba\u8bf4\uff1a\"LayoutManager\u5c01\u88c5\u7684\u4e0d\u591f\u5408\u7406\uff0c\u6ed1\u52a8\u8fd8\u8981\u6211\u4eec\u81ea\u5df1\u5b9e\u73b0\uff01\"\uff0c\u8bb2\u9053\u7406\u8bf4\u8fd9\u79cd\u8bdd\u7684\u5c0f\u670b\u53cb\u8fd8\u662f\u4e16\u9762\u89c1\u5c11\u4e86\uff0c\u4ed6\u80af\u5b9a\u6ca1\u89c1\u8fc7\u53ef\u4ee5\u659c\u7740\u62d6\u7684LayoutManager\uff0c\u6216\u8005\u5728\u6ed1\u52a8\u7684\u65f6\u5019\u5bf9itemView\u6709\u79cd\u5404\u79cd\u53d8\u6362\u7684LayoutManager\uff0c\u563b\u563b\u3002 \u4e24\u4e2a\u65b9\u6cd5\u7684 \u8fd4\u56de\u503c \u540c\u6837\u4e5f\u5341\u5206\u91cd\u8981\uff0c\u8fd4\u56de\u503c\u5c31\u662f\u8ba9RecyclerView\u77e5\u9053LayoutManager\u771f\u5b9e\u7684\u6ed1\u52a8\u8ddd\u79bb\uff0c return 0 \u65f6RecyclerView\u5c31\u4f1a\u5c55\u793a overScorll \u72b6\u6001\u4ee5\u53ca NestedScrolling \u7684\u540e\u7eed\u5904\u7406\u3002\u5173\u4e8e NestedScrolling \u8fd9\u70b9\u6211\u4e5f\u6ca1\u53d1\u73b0\u6709\u535a\u5ba2\u8bb2\u5230\uff0c\u5565\uff1foverScorll\u4f60\u4e5f\u4e0d\u77e5\u9053\uff01\u544a\u8f9e~ \u6dfb\u52a0 offsetChildrenHorizontal \u65b9\u6cd5\uff0c\u652f\u6301\u6c34\u5e73\u65b9\u5411\u7684\u6ed1\u52a8\u3002\u5565\uff1f\u4e3a\u5565\u53c8\u662f -dx \uff0c\u770b\u770b\u6e90\u7801\u6216\u8005\u5b9e\u9a8c\u5b9e\u9a8c\u4e0d\u5c31\u77e5\u9053\u4e86\u3002 override fun scrollHorizontallyBy( dx: Int, recycler: RecyclerView.Recycler, state: RecyclerView.State ): Int { //\u79fb\u52a8View offsetChildrenHorizontal(-dx) return dx } \u5c31\u8fd9\u4e48\u7b80\u5355\uff0c\u6211\u4eec\u7684LayoutManager\u5df2\u7ecf\u53ef\u4ee5\u6ed1\u52a8\u4e86\u3002\u4f46\u662f\u968f\u4e4b\u800c\u6765\u53c8\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff1a\u201c\u6ed1\u52a8\u53ea\u662f\u5728\u5df2\u5b58\u5728\u7684\u8fd9\u51e0\u4e2achildren\u95f4\u6ed1\u52a8\u201d\u3002\u8fd9\u4e0d\u662f\u5e9f\u8bdd\u5417\uff0c\u6211\u4eec\u90fd\u6ca1\u5199\u586b\u5145\u548c\u56de\u6536View\u7684\u65b9\u6cd5\uff0c\u80af\u5b9a\u6ca1\u6709\u65b0\u7684itemView\u6dfb\u52a0\u8fdb\u6765\u5440\uff0c\u8d85\u8fc7\u5c4f\u5e55\u7684View\u4e5f\u4e0d\u4f1a\u56de\u6536\u5440\u3002\u4e0b\u9762\u5f00\u59cb\u589e\u52a0\u586b\u5145View\u548c\u56de\u6536View\u7684\u4ee3\u7801\u5757\u3002 override fun scrollHorizontallyBy( dx: Int, recycler: RecyclerView.Recycler, state: RecyclerView.State ): Int { //\u586b\u5145View fill(dx, recycler) //\u79fb\u52a8View offsetChildrenHorizontal(-dx) //\u56de\u6536View recycle(dx, recycler) //\u8f93\u51fachildren logChildCount(\"scrollHorizontallyBy\", recycler) return dx } \u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u6ed1\u52a8\u7684\u65f6\u5019\u6211\u4eec\u771f\u6b63\u53ea\u505a\u4e86\u4e09\u4ef6\u4e8b\uff0c \u586b\u5145View - \u79fb\u52a8View - \u56de\u6536View \uff0c\u4e00\u4e2a\u5408\u683c\u7684LayoutManager \u81f3\u5c11 \u662f\u5e94\u8be5\u505a\u8db3\u8fd9\u4e09\u4ef6\u4e8b\u7684\uff0c\u5e76\u4e14\u987a\u5e8f\u6700\u597d\u5982\u4e0a\u9762\u4ee3\u7801\u4e00\u6837 \u5148\u586b\u5145-\u518d\u79fb\u52a8-\u6700\u540e\u56de\u6536 \uff0c\u5f53\u7136\u590d\u6742\u7684\u60c5\u51b5\u7684LayoutManager\u53ef\u4ee5\u591a\u52a0\u4e00\u4e9b\u6761\u4ef6\u68c0\u6d4b\u548c\u7279\u6b8a\u5904\u7406\uff0c\u4f8b\u5982 LinearLayoutManager \u5c31\u662f \u5148\u56de\u6536-\u518d\u586b\u5145-\u518d\u56de\u6536-\u6700\u540e\u79fb\u52a8 \u3002 \u8fd9\u91cc\u6211\u4eec\u5148\u5199\u56de\u6536\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u903b\u8f91\u76f8\u5bf9\u7b80\u5355\u70b9\u3002 private fun recycle( dx: Int, recycler: RecyclerView.Recycler ) { //\u8981\u56de\u6536View\u7684\u96c6\u5408\uff0c\u6682\u5b58 val recycleViews = hashSetOf<View>() //dx>0\u5c31\u662f\u624b\u6307\u4ece\u53f3\u6ed1\u5411\u5de6\uff0c\u6240\u4ee5\u8981\u56de\u6536\u524d\u9762\u7684children if (dx > 0) { for (i in 0 until childCount) { val child = getChildAt(i)!! val right = getDecoratedRight(child) //itemView\u7684right<0\u5c31\u662f\u8981\u8d85\u51fa\u5c4f\u5e55\u8981\u56de\u6536View if (right > 0) break recycleViews.add(child) } } //dx<0\u5c31\u662f\u624b\u6307\u4ece\u5de6\u6ed1\u5411\u53f3\uff0c\u6240\u4ee5\u8981\u56de\u6536\u540e\u9762\u7684children if (dx < 0) { for (i in childCount - 1 downTo 0) { val child = getChildAt(i)!! val left = getDecoratedLeft(child) //itemView\u7684left>recyclerView.width\u5c31\u662f\u8981\u8d85\u51fa\u5c4f\u5e55\u8981\u56de\u6536View if (left < width) break recycleViews.add(child) } } //\u771f\u6b63\u628aView\u79fb\u9664\u6389 for (view in recycleViews) { removeAndRecycleView(view, recycler) } recycleViews.clear() } \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5728\u62d6\u52a8\u662f\u65f6\u5019\uff0cLayoutManager\u786e\u5b9e\u56de\u6536\u4e86\u8d85\u51fa\u5c4f\u5e55\u7684itemView\uff0c\u5e76\u4e14\u901a\u8fc7\u67e5\u770blog\u53ef\u77e5childCount\u548cscrapSize\u540c\u6837\u662f\u5408\u683c\u7684\u3002 D/scrollHorizontallyBy: childCount = 2 -- scrapSize = 0 \u63a5\u4e0b\u6765\u624d\u662f\u91cd\u5934\u620f\uff0c\u5982\u4f55\u5408\u7406\u7684\u586b\u5145View\u662f\u4e00\u95e8\u5b66\u95ee\u3002\u901a\u8fc7\u6211\u9605\u8bfb LinearLayoutManager \u7684\u6e90\u7801\uff0c\u4e5f\u603b\u7ed3\u51fa\u4e00\u4e2a\u5957\u8def\uff0c\u90a3\u5c31\u662f\uff1a \u83b7\u53d6\u951a\u70b9View\u7684position \uff0c \u8ba1\u7b97\u65b0\u7684\u951a\u70b9View\u7684position\u548c\u4f4d\u7f6e \uff0c\u7136\u540e\u548c onLayoutChildren \u65b9\u6cd5\u4e00\u6837 addView \uff0c measureView \uff0c layoutView \u3002 private fun fill(dx: Int, recycler: RecyclerView.Recycler): Int { //\u5c06\u8981\u586b\u5145\u7684position var fillPosition = RecyclerView.NO_POSITION //\u53ef\u7528\u7684\u7a7a\u95f4\uff0c\u548conLayoutChildren\u4e2d\u7684totalSpace\u7c7b\u4f3c var availableSpace = abs(dx) //\u589e\u52a0\u4e00\u4e2a\u6ed1\u52a8\u8ddd\u79bb\u7684\u7edd\u5bf9\u503c\uff0c\u65b9\u4fbf\u8ba1\u7b97 val absDelta = abs(dx) //\u5c06\u8981\u586b\u5145\u7684View\u7684\u5de6\u4e0a\u53f3\u4e0b var left = 0 var top = 0 var right = 0 var bottom = 0 //dx>0\u5c31\u662f\u624b\u6307\u4ece\u53f3\u6ed1\u5411\u5de6\uff0c\u6240\u4ee5\u5c31\u8981\u586b\u5145\u5c3e\u90e8 if (dx > 0) { val anchorView = getChildAt(childCount - 1)!! val anchorPosition = getPosition(anchorView) val anchorRight = getDecoratedRight(anchorView) left = anchorRight //\u586b\u5145\u5c3e\u90e8\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2aposition\u5c31\u5e94\u8be5\u662f+1 fillPosition = anchorPosition + 1 //\u5982\u679c\u8981\u586b\u5145\u7684position\u8d85\u8fc7\u5408\u7406\u8303\u56f4\u5e76\u4e14\u6700\u540e\u4e00\u4e2aView\u7684 //right-\u79fb\u52a8\u7684\u8ddd\u79bb < \u53f3\u8fb9\u7f18(width)\u90a3\u5c31\u8981\u4fee\u6b63\u771f\u5b9e\u80fd\u79fb\u52a8\u7684\u8ddd\u79bb if (fillPosition >= itemCount && anchorRight - absDelta < width) { val fixScrolled = anchorRight - width Log.d(\"scrollHorizontallyBy\", \"fill == $fixScrolled\") return fixScrolled } //\u5982\u679c\u5c3e\u90e8\u7684\u951a\u70b9\u4f4d\u7f6e\u51cf\u53bbdx\u8fd8\u662f\u5728\u5c4f\u5e55\u5916\uff0c\u5c31\u4e0d\u586b\u5145\u4e0b\u4e00\u4e2aView if (anchorRight - absDelta > width) { return dx } } //dx<0\u5c31\u662f\u624b\u6307\u4ece\u5de6\u6ed1\u5411\u53f3\uff0c\u6240\u4ee5\u5c31\u8981\u586b\u5145\u5934\u90e8 if (dx < 0) { val anchorView = getChildAt(0)!! val anchorPosition = getPosition(anchorView) val anchorLeft = getDecoratedLeft(anchorView) right = anchorLeft //\u586b\u5145\u5934\u90e8\uff0c\u90a3\u4e48\u4e0a\u4e00\u4e2aposition\u5c31\u5e94\u8be5\u662f-1 fillPosition = anchorPosition - 1 //\u5982\u679c\u8981\u586b\u5145\u7684position\u8d85\u8fc7\u5408\u7406\u8303\u56f4\u5e76\u4e14\u7b2c\u4e00\u4e2aView\u7684 //left+\u79fb\u52a8\u7684\u8ddd\u79bb > \u5de6\u8fb9\u7f18(0)\u90a3\u5c31\u8981\u4fee\u6b63\u771f\u5b9e\u80fd\u79fb\u52a8\u7684\u8ddd\u79bb if (fillPosition < 0 && anchorLeft + absDelta > 0) { return anchorLeft } //\u5982\u679c\u5934\u90e8\u7684\u951a\u70b9\u4f4d\u7f6e\u52a0\u4e0adx\u8fd8\u662f\u5728\u5c4f\u5e55\u5916\uff0c\u5c31\u4e0d\u586b\u5145\u4e0a\u4e00\u4e2aView if (anchorLeft + absDelta < 0) { return dx } } //\u6839\u636e\u9650\u5b9a\u6761\u4ef6\uff0c\u4e0d\u505c\u5730\u586b\u5145View\u8fdb\u6765 while (availableSpace > 0 && (fillPosition in 0 until itemCount)) { val itemView = recycler.getViewForPosition(fillPosition) if (dx > 0) { addView(itemView) } else { addView(itemView, 0) } measureChild(itemView, 0, 0) if (dx > 0) { right = left + getDecoratedMeasuredWidth(itemView) } else { left = right - getDecoratedMeasuredWidth(itemView) } bottom = top + getDecoratedMeasuredHeight(itemView) layoutDecorated(itemView, left, top, right, bottom) if (dx > 0) { left += getDecoratedMeasuredWidth(itemView) fillPosition++ } else { right -= getDecoratedMeasuredWidth(itemView) fillPosition-- } if (fillPosition in 0 until itemCount) { availableSpace -= getDecoratedMeasuredWidth(itemView) } } return dx } \u4e0a\u9762\u7684\u4ee3\u7801\u6211\u6545\u610f\u5199\u5f97\u5f88\u5570\u55e6\uff0c\u5e94\u8be5\u5f88\u597d\u7406\u89e3\u4e86\u3002\u800c\u4e14\u806a\u660e\u7684\u5b9d\u5b9d\u5e94\u8be5\u53d1\u73b0\u4e86\u8fd9\u4e2a fill \u65b9\u6cd5\u8ddf onLayoutChildren \u7684\u65b9\u6cd5\u662f\u5f88\u8026\u5408\u7684\uff0c\u5176\u5b9e\u662f\u53ef\u4ee5\u5408\u5e76\u6210\u4e00\u4e2a\u7684\uff0c\u5c31\u50cf LinearLayoutManager \u7684 fill \u65b9\u6cd5\u4e00\u6837\u3002\u8fd8\u6709\u5c31\u662f\u518d\u6b21\u8bb0\u4f4f\u4e0a\u9762\u7684\u4ee3\u7801\u662f\u7528\u6765\u8bb2\u89e3\u7684\u4f2a\u4ee3\u7801\uff0c\u5e76\u4e0d\u662f StackLayoutManager \u7684\u771f\u5b9e\u4ee3\u7801\uff0c\u4e3a\u4e86\u5bb9\u6613\u7406\u89e3\uff0c\u6211\u5220\u9664\u4e86\u5927\u91cf\u7684\u68c0\u6d4b\u65b9\u6cd5\uff0c\u4ee5\u53ca\u5199\u7684\u975e\u5e38\u5570\u55e6\u3002 D/scrollHorizontallyBy: childCount = 9 -- scrapSize = 0 D/scrollHorizontallyBy: childCount = 10 -- scrapSize = 0 \u73b0\u5728\u6211\u4eec\u7684LayoutManager\u5c31\u4ee5\u53ca\u652f\u6301\u4e86\u5728\u6ed1\u52a8\u7684\u65f6\u5019\u586b\u5145View\u548c\u56de\u6536View\uff0c\u5e76\u4e14childCount\u4f9d\u7136\u662f\u5408\u683c\u7684\u3002 \u5269\u4e0b\u7684\u5c31\u662f\u8fb9\u754c\u68c0\u6d4b\u8ba9\u5176\u652f\u6301 overScrollMode \u4e86\uff0c\u7ec6\u5fc3\u7684\u5c0f\u670b\u53cb\u5df2\u7ecf\u53d1\u73b0 fill \u65b9\u6cd5\u5176\u5b9e\u6709\u4e00\u4e2a Int \u7684\u8fd4\u56de\u503c\uff0c\u90a3\u4e48\u73b0\u5728 offsetChildren \u548c scrollHorizontallyBy \u7684\u8fd4\u56de\u503c\u90fd\u4f7f\u7528 fill \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u3002 override fun scrollHorizontallyBy( dx: Int, recycler: RecyclerView.Recycler, state: RecyclerView.State ): Int { //\u586b\u5145View\uff0cconsumed\u5c31\u662f\u4fee\u590d\u540e\u7684\u79fb\u52a8\u503c val consumed = fill(dx, recycler) //\u79fb\u52a8View offsetChildrenHorizontal(-consumed) //\u56de\u6536View recycle(consumed, recycler) //\u8f93\u51fachildren logChildCount(\"scrollHorizontallyBy\", recycler) return consumed } \u5c31\u8fd9\u6837\u7b80\u5355\uff0c\u8fb9\u7f18\u68c0\u6d4b\u4e5f\u5b8c\u6210\u4e86\u3002","title":"\u91cd\u5199scrollHorizontallyBy()\u548cscrollVerticallyBy()\u65b9\u6cd5\u5728\u6ed1\u52a8\u7684\u65f6\u5019\u586b\u5145view\u548c\u56de\u6536view\u3002"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#scrolltopositionsmoothscrolltoposition_1","text":"","title":"scrollToPosition()\u548csmoothScrollToPosition()\u65b9\u6cd5\u652f\u6301\u3002"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#scrolltoposition","text":"\u6e90\u7801\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c\u6211\u4eec\u770b\u770b LinearLayoutManager \u7684 scrollToPosition() \u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002 //LinearLayoutManager @Override public void scrollToPosition(int position) { mPendingScrollPosition = position; mPendingScrollPositionOffset = INVALID_OFFSET; if (mPendingSavedState != null) { mPendingSavedState.invalidateAnchor(); } requestLayout(); } \u539f\u6765\u8fd9\u4e48\u7b80\u5355\u7684\u5417\uff1f\u518d\u770b\u770b mPendingScrollPosition \u662f\u4e2a\u5565\u3002 /** * When LayoutManager needs to scroll to a position, it sets this variable and requests a * layout which will check this variable and re-layout accordingly. */ int mPendingScrollPosition = RecyclerView.NO_POSITION; \u4ece\u82f1\u6587\u6ce8\u91ca\u7684\u5927\u6982\u7684\u610f\u601d\u5c31\u662f mPendingScrollPosition \u662f\u8981scorll\u5230\u7684position\uff0c\u90a3\u6211\u4eec\u7ee7\u7eed\u627e\u5b83\u662f\u5728\u54ea\u91cc\u8c03\u7528\u7684\u3002\u5728\u4e00\u8fde\u4e32\u7684\u641c\u7d22\u540e\uff0c\u6211\u53d1\u73b0\u4e86\u534e\u70b9\u3002 private boolean updateAnchorFromPendingData(RecyclerView.State state, AnchorInfo anchorInfo) { if (state.isPreLayout() || mPendingScrollPosition == RecyclerView.NO_POSITION) { return false; } // validate scroll position if (mPendingScrollPosition < 0 || mPendingScrollPosition >= state.getItemCount()) { mPendingScrollPosition = RecyclerView.NO_POSITION; mPendingScrollPositionOffset = INVALID_OFFSET; if (DEBUG) { Log.e(TAG, \"ignoring invalid scroll position \" + mPendingScrollPosition); } return false; } // if child is visible, try to make it a reference child and ensure it is fully visible. // if child is not visible, align it depending on its virtual position. anchorInfo.mPosition = mPendingScrollPosition; ... } \u8fd9\u4e2a updateAnchorFromPendingData() \u65b9\u6cd5\u6709\u591a\u5c42\u8c03\u7528\u6808\uff0c\u4f46\u662f\u6700\u7ec8\u8fd8\u662f\u5728 onLayoutChildren() \u65b9\u6cd5\u4e2d\u8c03\u7528\u7684\u3002\u8fd8\u8bb0\u5f97\u6211\u4eec\u6700\u5f00\u59cb\u5728 onLayuoutChildren() \u6709\u4e2a currentPosition = 0 \u7684\u53d8\u91cf\u5417\uff0c\u90a3\u4e2a\u53d8\u91cf\u5c31\u76f8\u5f53\u4e8e\u8fd9\u91cc\u7684 anchorInfo.mPosition \uff0c\u5c31\u662f \u951a\u70b9\u7684position \uff0c\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u51fa\u5982\u4f55\u9002\u914dscrollToPosition\u7684\u7ed3\u8bba\uff1a\u589e\u52a0mPendingScrollPosition\u53d8\u91cf\uff0c\u5728scrollToPosition()\u65b9\u6cd5\u4e2d\u5bf9\u5176\u8d4b\u503c\uff0c\u8c03\u7528requestLayout()\u65b9\u6cd5\uff0c\u7136\u540eonLayoutChildren()\u65b9\u6cd5\u4f1a\u518d\u6b21\u56de\u8c03\uff0c\u8fd9\u65f6\u5bf9\u951a\u70b9position\u91cd\u65b0\u8d4b\u503c\uff0c\u8bb0\u4f4f\u4e00\u5b9a\u505a\u597dposition\u7684\u5408\u6cd5\u6821\u9a8c\u3002 private var mPendingPosition = RecyclerView.NO_POSITION override fun onLayoutChildren(recycler: RecyclerView.Recycler, state: RecyclerView.State) { ...\u7701\u7565\u4ee3\u7801 var currentPosition = 0 if (mPendingPosition != RecyclerView.NO_POSITION){ currentPosition = mPendingPosition } ...\u7701\u7565\u4ee3\u7801 } override fun scrollToPosition(position: Int) { if (position < 0 || position >= itemCount) return mPendingPosition = position requestLayout() } \u4ed4\u7ec6\u770b\uff0c\u6211\u4eec\u7684LayoutManager\u662f\u4e0d\u662f\u53ef\u4ee5scrollToPosition\u4e86\u3002\u4f46\u662f\u8fd9\u8fd8\u4e0d\u662f\u5b8c\u6574\u7684\u5b9e\u73b0\uff0c\u5982\u679c\u4f60\u4ed4\u7ec6\u5bf9\u6bd4 LinearLayuotManager \u7684scrollToPosition\u5c31\u80fd\u53d1\u73b0\u5dee\u522b\u6240\u5728\uff0c\u6211\u8fd9\u91cc\u53ea\u662f\u629b\u7816\u5f15\u7389\u4e00\u4e0b\uff0c\u80fd\u8ba9\u5927\u5bb6\u77e5\u9053\u5982\u4f55\u9002\u914dscrollToPosition\u5c31\u884c\u4e86\uff0c\u5b8c\u6574\u7684\u5b9e\u73b0\u5927\u591a\u6570\u5c31\u662f\u7ec6\u8282\u7684\u5904\u7406\uff0c\u548c\u5957\u8def\u65e0\u5173\uff0c\u542c\u61c2\u638c\u58f0\ud83d\udc4f\ud83d\udc4f\ud83d\udc4f\ud83d\udc4f\u3002 \u8fd8\u6709\u4e00\u70b9\u6211\u770b\u5927\u591a\u6570\u7684\u535a\u5ba2\u4e5f\u6ca1\u8bb2\u5230\uff0c\u90a3\u5c31\u662f onLayoutCompleted() \u8fd9\u4e2a\u65b9\u6cd5\u5176\u5b9e\u633a\u6709\u7528\u7684\uff0c\u4e3a\u5565\u6ca1\u4eba\u8bf4\u5462\uff1f onLayoutCompleted \u4f1a\u5728LayoutManager\u8c03\u7528\u5b8c onLayoutChildren() \u540e\u8c03\u7528\uff0c\u53ef\u4ee5\u7528\u6765\u505a\u5f88\u591a\u6536\u5c3e\u7684\u5de5\u4f5c\u3002\u4f8b\u5982\uff1a\u91cd\u7f6emPendingScrollPosition\u7684\u503c //LinearLayoutManager @Override public void onLayoutCompleted(RecyclerView.State state) { super.onLayoutCompleted(state); mPendingSavedState = null; // we don't need this anymore mPendingScrollPosition = RecyclerView.NO_POSITION; mPendingScrollPositionOffset = INVALID_OFFSET; mAnchorInfo.reset(); }","title":"\u9002\u914d scrollToPosition()"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#smoothscrolltoposition","text":"\u7ee7\u7eed\u6252 LinearLayuotManager \u7684 smoothScrollToPosition \u7684\u6e90\u7801\u3002 //LinearLayuotManager @Override public void smoothScrollToPosition(RecyclerView recyclerView, RecyclerView.State state, int position) { LinearSmoothScroller linearSmoothScroller = new LinearSmoothScroller(recyclerView.getContext()); linearSmoothScroller.setTargetPosition(position); startSmoothScroll(linearSmoothScroller); } \u4e5d\u6298\uff1f\u4e0d\u7ba1\u4e86\uff0c\u76f4\u63a5\u590d\u5236\uff0c\u7c98\u8d34\uff0c\u518d\u770b\u6548\u679c\uff0c\u6bd5\u7adf\u7956\u4f20CV\u5de5\u7a0b\u5e08\u5c82\u975e\u6d6a\u5f97\u865a\u540d\u3002 override fun smoothScrollToPosition( recyclerView: RecyclerView, state: RecyclerView.State, position: Int ) { val linearSmoothScroller = LinearSmoothScroller(recyclerView.context) linearSmoothScroller.targetPosition = position startSmoothScroll(linearSmoothScroller) } \u54a6\uff01\u8fd9\u4e0d\u662fscrollToPosition\u7684\u6548\u679c\u5417\uff1f\u4e5f\u4e0d\u662f\u6211\u4eecsmoothScroll\u7684\u5e73\u6ed1\u6548\u679c\u5440\u3002\u4e8e\u662f\u6211\u7ee7\u7eed\u770b\u535a\u5ba2\uff0c\u7ffb\u6e90\u7801\uff0c\u4e5f\u8fd8\u662f\u770b\u5230\u4e86Dave\u5927\u795e\u7684\u535a\u5ba2\u624d\u627e\u5230\u4e86\u771f\u6b63\u7684\u91cd\u70b9 computeScrollVectorForPosition(int targetPosition) \u8fd9\u4e2a\u65b9\u6cd5\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u5728 LinearLayoutManager \u7684 smoothScrollToPosition \u65b9\u6cd5\u4e0b\u9762\uff0c\u4f46\u662f\u6ca1\u6709\u6ce8\u91ca\uff0c\u662f\u771f\u96be\u8ba9\u4eba\u731c\u3002 @Override public PointF computeScrollVectorForPosition(int targetPosition) { if (getChildCount() == 0) { return null; } final int firstChildPos = getPosition(getChildAt(0)); final int direction = targetPosition < firstChildPos != mShouldReverseLayout ? -1 : 1; if (mOrientation == HORIZONTAL) { return new PointF(direction, 0); } else { return new PointF(0, direction); } } \u8fd9\u4e2a computeScrollVectorForPosition \u65b9\u6cd5\u662f SmoothScroller \u7c7b\u7684\u4e00\u4e2a\u65b9\u6cd5\u3002 LinearSmoothScroller \u53c8\u662f\u7ee7\u627f\u4e8e SmoothScroller \u3002 @Nullable public PointF computeScrollVectorForPosition(int targetPosition) { LayoutManager layoutManager = getLayoutManager(); if (layoutManager instanceof ScrollVectorProvider) { return ((ScrollVectorProvider) layoutManager) .computeScrollVectorForPosition(targetPosition); } Log.w(TAG, \"You should override computeScrollVectorForPosition when the LayoutManager\" + \" does not implement \" + ScrollVectorProvider.class.getCanonicalName()); return null; } \u4ece\u6e90\u7801\u6765\u770b\uff0c\u53c8\u5728\u5224\u65adLayoutManager\u662f\u5426\u662fScrollVectorProvider\u7684\u5b50\u7c7b\u3002\u5982\u679c\u662f\u5c31\u6267\u884ccomputeScrollVectorForPosition\u65b9\u6cd5\uff0c\u90a3\u4e48\u8fd9\u6837\u6765\u8bf4\u7684\u8bddLinearLayoutManager\u80af\u5b9a\u5b9e\u73b0\u4e86ScrollVectorProvider\u63a5\u53e3\u3002 public class LinearLayoutManager extends RecyclerView.LayoutManager implements ItemTouchHelper.ViewDropHandler, RecyclerView.SmoothScroller.ScrollVectorProvider { \u679c\u7136\u548c\u6211\u4eec\u731c\u60f3\u7684\u4e00\u6837\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u7ee7\u7eed\u6a21\u4eff\u8fd9\u79cd\u5199\u6cd5\u3002 class BlogLayoutManager : RecyclerView.LayoutManager() ,RecyclerView.SmoothScroller.ScrollVectorProvider{ override fun computeScrollVectorForPosition(targetPosition: Int): PointF? { if (childCount == 0) { return null } val firstChildPos = getPosition(getChildAt(0)!!) val direction = if (targetPosition < firstChildPos) -1 else 1 return PointF(direction.toFloat(), 0f) } } \u7ec6\u5fc3\u7684\u5c0f\u670b\u53cb\u53c8\u53d1\u73b0\u4e86\uff0c\u6211\u4eec\u5e73\u6ed1\u6eda\u52a8\u5230 50 \u8fd9\u4e2aposition\uff0c\u4f46\u662f 50 \u662f\u9760\u540e\u505c\u6b62\u7684\uff0c\u5e76\u4e0d\u662f\u6eda\u52a8\u5230\u524d\u9762\u8fb9\u7f18\u7684\u4f4d\u7f6e\u505c\u6b62\u3002\u6ca1\u9519\uff0c\u6b63\u786e\u7684\u6548\u679c\u5c31\u662f\u8fd9\u6837\uff0c\u5305\u62ec LinearLayoutManager \u7684 smoothScrollToPosition \u7684\u6548\u679c\u4e5f\u662f\u8fd9\u6837\u3002\u6240\u4ee5\u524d\u9762\u6211\u624d\u4f1a\u8bf4 scrollToPosition \u7684\u5b9e\u73b0\u4e0d\u662f\u5b8c\u6574\u6548\u679c\uff0c\u5b8c\u6574\u6548\u679c\u5e94\u8be5\u548c smoothScrollToPosition \u4e00\u6837\uff0cscrollToPosition\u5230\u540e\u9762\u7684position\u5c31\u662f\u5e94\u8be5 \u4ece\u540e\u5f80\u524d\u586b\u5145 \uff0cscrollToPosition\u5230\u524d\u9762\u7684position\u624d\u662f \u4ece\u524d\u5f80\u540e\u586b\u5145 \u3002 \u63a5\u7740\u6211\u4eec\u8bb2\u8bb2 computeScrollVectorForPosition \u8fd9\u4e2a\u65b9\u6cd5\u91cc\u9762\u7684\u5b9e\u73b0\u5957\u8def\u3002 val firstChildPos = getPosition(getChildAt(0)!!) val direction = if (targetPosition < firstChildPos) -1 else 1 return PointF(direction.toFloat(), 0f) \u901a\u8fc7\u6211\u9605\u8bfb\u6e90\u7801\u6ce8\u91ca\u5f97\u77e5\uff0c\u91cd\u70b9\u5c31\u5728\u8fd9\u4e2a PointF \u7684\u8fd4\u56de\u503c\uff0c\u6e90\u7801\u6ce8\u91ca\u4e2d\u544a\u8bc9\u6211\u4eec\u5411\u91cf\u7684\u5927\u5c0f\u5e76\u4e0d\u91cd\u8981\uff0c\u91cd\u8981\u7684\u662f targetPosition \u548c \u5411\u91cf\u7684\u65b9\u5411 \uff0c PointF \u7684 x \u4ee3\u8868\u6c34\u5e73\u65b9\u5411\uff0c y \u4ee3\u8868\u7ad6\u76f4\u65b9\u5411\u3002 \u6574\u6570 \u4ee3\u8868\u6b63\u5411\u79fb\u52a8\uff0c \u8d1f\u6570 \u4ee3\u8868\u53cd\u5411\u79fb\u52a8\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 direction \u3002\u4f46\u662f\u5176\u5b9e\u8fd9\u4e2a\u8bf4\u6cd5\u4e5f\u4e0d\u662f\u5168\u5bf9\uff0c\u5982\u679c\u4f60\u9700\u8981\u800c\u4e14\u80fd\u591f\u7b97\u51fa\u7cbe\u786e\u7684\u79fb\u52a8\u503c\uff0c\u90a3\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f20\u9012\u7cbe\u786e\u7684\u503c\u7ed9 PointF \u3002","title":"\u9002\u914dsmoothScrollToPosition()"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#onlayoutchildren_1","text":"\u8fd9\u4e2a\u95ee\u9898\u6211\u4e5f\u662f\u65e0\u610f\u4e2d\u53d1\u73b0\u7684\u3002 \u5982\u56fe\u6240\u793a\uff0c\u6211\u4eec\u5728\u6eda\u52a8\u4e00\u6bb5\u8ddd\u79bb\u540e\uff0c\u8ba9\u8f6f\u952e\u76d8\u5f39\u51fa\uff0c\u53d1\u73b0LayoutManager\u81ea\u52a8\u56de\u5230 position=0 \u90a3\u91cc\uff0c\u518d\u6eda\u52a8\u4e00\u6bb5\u8ddd\u79bb\uff0c\u8f6f\u952e\u76d8\u6536\u8d77\uff0cLayoutManager\u53c8\u81ea\u52a8\u56de\u5230 position=0 \u90a3\u91cc\u3002\u5206\u6790\u539f\u56e0\u53ef\u4ee5\u77e5\u9053\u662f onLayoutChildren \u65b9\u6cd5\u88ab\u91cd\u65b0\u8c03\u7528\u5bfc\u81f4\uff0c\u56e0\u4e3a onLayoutChildren \u65b9\u6cd5\u4e2d\u6211\u4eec\u7684 currentPosition=0 \uff0c\u6240\u4ee5\u5bfc\u81f4\u4e86LayoutManager\u4ece0\u5f00\u59cb\u91cd\u65b0\u5e03\u5c40\u3002\u4e0b\u9762\u6211\u4eec\u5f00\u59cb\u4fee\u6b63position\u4e3a\u771f\u5b9e\u6eda\u52a8\u540e\u7684\u503c\u3002 override fun onLayoutChildren(recycler: RecyclerView.Recycler, state: RecyclerView.State) { var totalSpace = width - paddingRight var currentPosition = 0 //\u5f53childCount != 0\u65f6\uff0c\u8bc1\u660e\u662f\u5df2\u7ecf\u586b\u5145\u8fc7View\u7684\uff0c\u56e0\u4e3a\u6709\u56de\u6536 //\u6240\u4ee5\u76f4\u63a5\u8d4b\u503c\u4e3a\u7b2c\u4e00\u4e2achild\u7684position\u5c31\u53ef\u4ee5 if (childCount != 0) { currentPosition = getPosition(getChildAt(0)!!) } if (mPendingPosition != RecyclerView.NO_POSITION) { currentPosition = mPendingPosition } //\u8f7b\u91cf\u7ea7\u7684\u5c06view\u79fb\u9664\u5c4f\u5e55 detachAndScrapAttachedViews(recycler) //\u5f00\u59cb\u586b\u5145view var left = 0 ...\u7701\u7565\u4ee3\u7801 } \u4e0a\u9762\u793a\u4f8b\u4ee3\u7801\u6ce8\u610f detachAndScrapAttachedViews(recycler) \u65b9\u6cd5\u662f\u5728 \u4fee\u6b63position \u65b9\u6cd5\u7684\u540e\u9762\uff0c\u56e0\u4e3a\u5148\u8c03\u7528 detachAndScrapAttachedViews \u540e\uff0cchildCount\u5c31\u4f1a\u4e00\u76f4\u4e3a 0 \u554a\uff01 \u8fd8\u662f\u5982\u56fe\u6240\u793a\uff0c\u6211\u4eec\u62d6\u52a8\u5230\u4e86 position=25 \u7684itemView\u90a3\u91cc\uff0c\u7136\u540e\u8f6f\u952e\u76d8\u5f39\u8d77 onLayoutChildren \u8c03\u7528\uff0c\u8fd9\u6b21\u7684\u786e\u662f\u4ece currentPosition=25 \u5f00\u59cb\u91cd\u65b0\u5e03\u5c40\u3002 \u4f46\u662f\u73b0\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e5f\u8fd8\u662f\u6709\u7455\u75b5\uff0c\u4ed4\u7ec6\u770b\u56fe\uff0c\u6211\u4eec\u53d1\u73b0 position=25 \u7684itemView\u660e\u660e\u88ab\u62d6\u52a8\u4e86\u4e00\u822c\u7684\u5bbd\u5ea6\u5230\u5c4f\u5e55\u5916\uff0c\u4f46\u662f\u91cd\u65b0 onLayoutChildren \u65f6\uff0c\u53c8\u662f\u4ece\u5c4f\u5e55\u5de6\u8fb9\u7f18\u5f00\u59cblayoutView\u4e86\u3002\u90a3\u4e48\u600e\u4e48\u89e3\u51b3\u5462\uff1f\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u5b66\u4e60 LinearLayoutManager \u7684\u89e3\u51b3\u529e\u6cd5\uff0c\u5f00\u59cb\u83b7\u53d6\u4e00\u4e2a fixOffset \u7684\u503c\uff0c\u5728\u91cd\u65b0layout\u7ed3\u675f\u53bb\u79fb\u52a8\u8fd9\u4e2a\u503c\u7684\u8ddd\u79bb\uff0c LinearLayoutManager \u662f\u5c06\u6ed1\u52a8\uff0c\u586b\u5145\uff0c\u56de\u6536\u5c01\u88c5\u6210\u4e86\u4e00\u4e2a scrollBy() \u65b9\u6cd5\uff0c\u7136\u540e\u5728layout\u7ed3\u675f\u8c03\u7528scrollBy\u65b9\u6cd5\u53bb\u4fee\u6b63\u504f\u79fb\u91cf\uff0c\u8fd9\u4e48\u505a\u53ef\u4ee5\u89e3\u51b3\u504f\u79fb\u6ed1\u52a8\u7684\u540c\u65f6\u586b\u5145\u548c\u56de\u6536View\uff0c\u6211\u8fd9\u91cc\u5077\u4e2a\u61d2\uff0c\u76f4\u63a5\u7528 offsetChildren \u53bb\u4fee\u6b63\u4e00\u4e0b\u504f\u79fb\u91cf\u3002 override fun onLayoutChildren(recycler: RecyclerView.Recycler, state: RecyclerView.State) { var totalSpace = width - paddingRight var currentPosition = 0 var fixOffset = 0 //\u5f53childCount != 0\u65f6\uff0c\u8bc1\u660e\u662f\u5df2\u7ecf\u586b\u5145\u8fc7View\u7684\uff0c\u56e0\u4e3a\u6709\u56de\u6536 //\u6240\u4ee5\u76f4\u63a5\u8d4b\u503c\u4e3a\u7b2c\u4e00\u4e2achild\u7684position\u5c31\u53ef\u4ee5 if (childCount != 0) { currentPosition = getPosition(getChildAt(0)!!) fixOffset = getDecoratedLeft(getChildAt(0)!!) } //...\u7701\u7565\u4ee3\u7801 offsetChildrenHorizontal(fixOffset) } OK~\uff0c\u6536\u5de5\uff01\u5565\uff1f\u8981\u5b9e\u73b0\u7684\u4e00\u4e2a StackLayoutManager \uff0c\u4e3a\u5565\u4f60\u8fd9\u4e2a\u662f LinearLayoutManger \uff01\u90fd\u770b\u5230\u8fd9\u91cc\u4e86\u5982\u679c\u4f60\u8fd8\u80fd\u6709\u8fd9\u79cd\u95ee\u9898\uff0c\u8bc1\u660e\u6211\u5199\u4e86\u4e00\u7bc7\u6c34\u6587\uff0c\u9003~ \u4e0a\u9762\u7684\u4f2a\u4ee3\u7801\u793a\u4f8b","title":"\u89e3\u51b3\u8f6f\u952e\u76d8\u5f39\u51fa\u6216\u6536\u8d77onLayoutChildren()\u65b9\u6cd5\u91cd\u65b0\u8c03\u7528\u7684\u95ee\u9898\u3002"},{"location":"android/%E9%9A%8F%E7%AC%94/%E5%AD%A6%E4%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89LayoutManager/#_1","text":"\u5b66\u4e60\u81ea\u5b9a\u4e49LayoutManager\u7684\u6536\u83b7\u633a\u591a\u7684\uff0c\u7279\u522b\u662f\u4e00\u4e9b\u903b\u8f91\u4e0a\u7684\u5904\u7406\uff0c\u7531\u8877\u7684\u4f69\u670dRecyclerView\u7684\u4f5c\u8005\uff0c\u771f\u7684\u5565\u60c5\u51b5\u90fd\u8003\u8651\u5230\u4e86\u3002\u867d\u7136\u8bf4\u65e5\u5e38\u4f7f\u7528RecyclerView\u81ea\u5e26\u7684\u90a3\u51e0\u4e2aLayoutManager\u5c31\u591f\u7528\u4e86\uff0c\u4f46\u662f\u5b66\u4e60\u4e00\u4e0b\u81ea\u5b9a\u4e49LayoutManager\u4e5f\u4e0d\u59a8\uff0c\u800c\u4e14\u6df1\u5165\u4e86\u8fd8\u53ef\u4ee5\u540c\u65f6\u52a0\u6df1\u5bf9RecyclerView\u7684\u7406\u89e3\uff0c\u4f55\u4e50\u800c\u4e0d\u4e3a\u5462~ \u4ece\u5f00\u59cb\u5b66\u4e60\u81ea\u5b9a\u4e49LayoutManager\uff0c\u5230\u5199\u4e86\u51e0\u4e2a\u5f00\u6e90\u5e93\uff0c\u518d\u5230\u5b8c\u6210\u8fd9\u7bc7\u6587\u7ae0\uff0c\u65ad\u65ad\u7eed\u7eed\u82b1\u4e86\u4e00\u4e2a\u591a\u6708\u5427\uff0c\u5982\u679c\u4f60\u89c9\u5f97\u8fd9\u7bc7\u6587\u7ae0\u6709\u5e2e\u52a9\u4f60\uff0c\u5e2e\u5fd9\u7ed9\u6587\u7ae0\u70b9\u4e2a\u8d5e\u6216\u8005\u7ed9\u5f00\u6e90\u5e93\u4e00\u4e2astar\u5427\uff0c\u8ba9\u6211\u77e5\u9053\u4ed8\u51fa\u8fd8\u662f\u4f1a\u6709\u6536\u83b7\u7684\uff0c\u8c22\u8c22~ https://github.com/simplepeng/StackLayoutManager https://github.com/simplepeng/PickerLayoutManager","title":"\u6700\u540e"},{"location":"android/%E9%9A%8F%E7%AC%94/%E6%97%A0%E9%9A%9C%E7%A2%8D%E6%9C%8D%E5%8A%A1%E7%A0%94%E7%A9%B6/","text":"\u65e0\u969c\u788d\u670d\u52a1\u7814\u7a76 AccessibilityService \u65e0\u969c\u788d\u670d\u52a1\u7c7b * onAccessibilityEvent - \u65e0\u969c\u788d\u4e8b\u4ef6\u7684\u56de\u8c03\u65b9\u6cd5 * onInterrupt - \u8bbf\u95ee\u4e2d\u65ad\u7684\u56de\u8c03 * onServiceConnected - \u670d\u52a1\u8fde\u63a5\u7684\u56de\u8c03 * onGesture - \u89e6\u6478\u624b\u52bf\u56de\u8c03 * onKeyEvent - \u6309\u952e\u56de\u8c03 * getWindows -\u8fd4\u56de\u5f53\u524d\u7a97\u53e3\u4e0a\u6240\u6709\u7684Window * getWindowsOnAllDisplays -\u8fd4\u56de\u6240\u6709\u7a97\u53e3\u4e0a\u7684Window * getRootInActiveWindow -\u8fd4\u56de\u5f53\u524d\u7a97\u53e3\u7684root Node * disableSelf -\u5173\u95ed\u5f53\u524d\u670d\u52a1 * getFingerprintGestureController \u83b7\u53d6\u6307\u7eb9\u624b\u52bf\u7684\u63a7\u5236\u5668 * dispatchGesture - \u5206\u53d1\u624b\u52bf * getSoftKeyboardController - \u8fd4\u56de\u8f6f\u952e\u76d8\u63a7\u5236\u5668\uff0c\u53ef\u7528\u4e8e\u67e5\u8be2\u548c\u4fee\u6539\u8f6f\u952e\u76d8\u663e\u793a\u6a21\u5f0f * getSystemActions - \u8fd4\u56de\u5f53\u524d\u7cfb\u7edf\u53ef\u7528\u7684\u65e0\u969c\u788dActions * performGlobalAction -\u6267\u884c\u5168\u5c40\u52a8\u4f5c * findFocus - \u67e5\u627e\u7126\u70b9\u9009\u4e2d\u7684Node * getServiceInfo -\u83b7\u53d6\u6539\u670d\u52a1\u7684\u4fe1\u606f * takeScreenshot -\u5c4f\u5e55\u622a\u56fe * setAccessibilityFocusAppearance -\u8bbe\u7f6e\u8f85\u52a9\u7126\u70b9\u7684\u63cf\u8fb9\u5927\u5c0f\u548c\u989c\u8272 AccessibilityEvent \u65e0\u969c\u788d\u670d\u52a1\u56de\u8c03\u7684\u4e8b\u4ef6\u7c7b AccessibilityNodeInfo \u65e0\u969c\u788d\u670d\u52a1\u7684\u4e00\u4e2a\u8282\u70b9 * focusSearch - \u5728\u6307\u5b9a\u65b9\u5411\u4e0a\u641c\u7d22\u53ef\u4ee5\u83b7\u53d6\u8f93\u5165\u7126\u70b9\u7684\u6700\u8fd1\u89c6\u56fe * getChildCount - \u8fd4\u56de\u8282\u70b9count * getChild - \u6839\u636e\u7d22\u5f15\u83b7\u53d6\u5b50\u8282\u70b9Node * getActionList - \u83b7\u53d6\u53ef\u4ee5\u5728\u8282\u70b9\u6267\u884c\u7684Actions * getAvailableExtraData - \u83b7\u53d6\u6b64\u8282\u70b9\u53ef\u7528\u7684\u989d\u5916\u6570\u636e * getMaxTextLength - \u8fd4\u56de\u6b64\u8282\u70b9\u7684\u6700\u5927\u6587\u672c\u957f\u5ea6 * performAction - \u5728\u8282\u70b9\u4e0a\u6267\u884c\u64cd\u4f5c * findAccessibilityNodeInfosByText - \u901a\u8fc7\u6587\u672c\u67e5\u627e\u8282\u70b9 * findAccessibilityNodeInfosByViewId - \u901a\u8fc7viewId\u67e5\u627e\u8282\u70b9 * getWindow - \u83b7\u53d6\u8be5\u8282\u70b9\u6240\u5c5e\u7684Window * getParent - \u83b7\u53d6\u7236\u8282\u70b9 * getBoundsInScreen - \u83b7\u53d6\u5c4f\u5e55\u5750\u6807\u4e2d\u7684\u8282\u70b9\u8fb9\u754c * isCheckable - \u8be5\u8282\u70b9\u662f\u5426\u53ef\u88ab\u9009\u4e2d * isChecked - \u8be5\u8282\u70b9\u662f\u5426\u88ab\u9009\u4e2d * isFocused - \u8be5\u8282\u70b9\u662f\u5426\u88ab\u805a\u7126 * isVisibleToUser - \u6b64\u8282\u70b9\u662f\u5426\u5bf9\u7528\u6237\u53ef\u89c1 * isAccessibilityFocused - \u6b64\u8282\u70b9\u662f\u5426\u53ef\u88ab\u805a\u7126 * isSelected - \u6b64\u8282\u70b9\u662f\u5426\u53ef\u88ab\u9009\u4e2d * isClickable - \u6b64\u8282\u70b9\u662f\u5426\u53ef\u88ab\u70b9\u51fb * isLongClickable - \u6b64\u8282\u70b9\u662f\u5426\u53ef\u88ab\u957f\u6309 * isEnabled - \u6b64\u8282\u70b9\u662f\u5426\u53ef\u7528 * isPassword - \u6b64\u8282\u70b9\u662f\u5426\u672a\u5bc6\u7801 * isScrollable - \u662f\u5426\u53ef\u6eda\u52a8 * isEditable - \u662f\u5426\u53ef\u8f93\u5165\u6587\u5b57 * getDrawingOrder - \u83b7\u53d6\u7ed8\u5236\u987a\u5e8f * getCollectionInfo - \u5982\u679c\u8282\u70b9\u662f\u96c6\u5408\uff0c\u5219\u83b7\u53d6\u96c6\u5408\u4fe1\u606f\u3002\u96c6\u5408\u5b50\u59cb\u7ec8\u662f\u96c6\u5408\u9879 * isContentInvalid - \u83b7\u53d6\u6b64\u8282\u70b9\u7684\u5185\u5bb9\u662f\u5426\u65e0\u6548\u3002\u4f8b\u5982\uff0c\u65e5\u671f\u683c\u5f0f\u4e0d\u6b63\u786e\u3002 * isContextClickable - \u9f20\u6807\u70b9\u51fb\u662f\u5426\u53ef\u7528 * isMultiLine - \u83b7\u53d6\u8282\u70b9\u662f\u5426\u4e3a\u591a\u884c\u53ef\u7f16\u8f91\u6587\u672c * canOpenPopup - \u83b7\u53d6\u6b64\u8282\u70b9\u662f\u5426\u6253\u5f00\u5f39\u51fa\u7a97\u53e3\u6216\u5bf9\u8bdd\u6846 * isDismissable - \u662f\u5426\u53ef\u4ee5\u5173\u95ed\u8be5\u8282\u70b9 * getPackageName - \u83b7\u53d6\u5305\u540d * getClassName - \u83b7\u53d6\u7c7b\u540d * getText - \u83b7\u53d6\u6b64\u8282\u70b9\u4e0a\u7684\u6587\u5b57 * replaceClickableSpan - \u66ff\u6362\u8282\u70b9\u4e0a\u7684\u6587\u672c * getViewIdResourceName - \u83b7\u53d6\u5168\u8def\u5f84\u7684ViewId * getInputType - \u83b7\u53d6\u8f93\u5165\u7c7b\u578b\uff0c\u53ef\u80fd\u7528\u4e8eEditText * getExtras - \u83b7\u53d6\u989d\u5916\u7684\u6570\u636e\u4fe1\u606f","title":"\u65e0\u969c\u788d\u670d\u52a1\u7814\u7a76"},{"location":"android/%E9%9A%8F%E7%AC%94/%E6%97%A0%E9%9A%9C%E7%A2%8D%E6%9C%8D%E5%8A%A1%E7%A0%94%E7%A9%B6/#_1","text":"","title":"\u65e0\u969c\u788d\u670d\u52a1\u7814\u7a76"},{"location":"android/%E9%9A%8F%E7%AC%94/%E6%97%A0%E9%9A%9C%E7%A2%8D%E6%9C%8D%E5%8A%A1%E7%A0%94%E7%A9%B6/#accessibilityservice","text":"\u65e0\u969c\u788d\u670d\u52a1\u7c7b * onAccessibilityEvent - \u65e0\u969c\u788d\u4e8b\u4ef6\u7684\u56de\u8c03\u65b9\u6cd5 * onInterrupt - \u8bbf\u95ee\u4e2d\u65ad\u7684\u56de\u8c03 * onServiceConnected - \u670d\u52a1\u8fde\u63a5\u7684\u56de\u8c03 * onGesture - \u89e6\u6478\u624b\u52bf\u56de\u8c03 * onKeyEvent - \u6309\u952e\u56de\u8c03 * getWindows -\u8fd4\u56de\u5f53\u524d\u7a97\u53e3\u4e0a\u6240\u6709\u7684Window * getWindowsOnAllDisplays -\u8fd4\u56de\u6240\u6709\u7a97\u53e3\u4e0a\u7684Window * getRootInActiveWindow -\u8fd4\u56de\u5f53\u524d\u7a97\u53e3\u7684root Node * disableSelf -\u5173\u95ed\u5f53\u524d\u670d\u52a1 * getFingerprintGestureController \u83b7\u53d6\u6307\u7eb9\u624b\u52bf\u7684\u63a7\u5236\u5668 * dispatchGesture - \u5206\u53d1\u624b\u52bf * getSoftKeyboardController - \u8fd4\u56de\u8f6f\u952e\u76d8\u63a7\u5236\u5668\uff0c\u53ef\u7528\u4e8e\u67e5\u8be2\u548c\u4fee\u6539\u8f6f\u952e\u76d8\u663e\u793a\u6a21\u5f0f * getSystemActions - \u8fd4\u56de\u5f53\u524d\u7cfb\u7edf\u53ef\u7528\u7684\u65e0\u969c\u788dActions * performGlobalAction -\u6267\u884c\u5168\u5c40\u52a8\u4f5c * findFocus - \u67e5\u627e\u7126\u70b9\u9009\u4e2d\u7684Node * getServiceInfo -\u83b7\u53d6\u6539\u670d\u52a1\u7684\u4fe1\u606f * takeScreenshot -\u5c4f\u5e55\u622a\u56fe * setAccessibilityFocusAppearance -\u8bbe\u7f6e\u8f85\u52a9\u7126\u70b9\u7684\u63cf\u8fb9\u5927\u5c0f\u548c\u989c\u8272","title":"AccessibilityService"},{"location":"android/%E9%9A%8F%E7%AC%94/%E6%97%A0%E9%9A%9C%E7%A2%8D%E6%9C%8D%E5%8A%A1%E7%A0%94%E7%A9%B6/#accessibilityevent","text":"\u65e0\u969c\u788d\u670d\u52a1\u56de\u8c03\u7684\u4e8b\u4ef6\u7c7b","title":"AccessibilityEvent"},{"location":"android/%E9%9A%8F%E7%AC%94/%E6%97%A0%E9%9A%9C%E7%A2%8D%E6%9C%8D%E5%8A%A1%E7%A0%94%E7%A9%B6/#accessibilitynodeinfo","text":"\u65e0\u969c\u788d\u670d\u52a1\u7684\u4e00\u4e2a\u8282\u70b9 * focusSearch - \u5728\u6307\u5b9a\u65b9\u5411\u4e0a\u641c\u7d22\u53ef\u4ee5\u83b7\u53d6\u8f93\u5165\u7126\u70b9\u7684\u6700\u8fd1\u89c6\u56fe * getChildCount - \u8fd4\u56de\u8282\u70b9count * getChild - \u6839\u636e\u7d22\u5f15\u83b7\u53d6\u5b50\u8282\u70b9Node * getActionList - \u83b7\u53d6\u53ef\u4ee5\u5728\u8282\u70b9\u6267\u884c\u7684Actions * getAvailableExtraData - \u83b7\u53d6\u6b64\u8282\u70b9\u53ef\u7528\u7684\u989d\u5916\u6570\u636e * getMaxTextLength - \u8fd4\u56de\u6b64\u8282\u70b9\u7684\u6700\u5927\u6587\u672c\u957f\u5ea6 * performAction - \u5728\u8282\u70b9\u4e0a\u6267\u884c\u64cd\u4f5c * findAccessibilityNodeInfosByText - \u901a\u8fc7\u6587\u672c\u67e5\u627e\u8282\u70b9 * findAccessibilityNodeInfosByViewId - \u901a\u8fc7viewId\u67e5\u627e\u8282\u70b9 * getWindow - \u83b7\u53d6\u8be5\u8282\u70b9\u6240\u5c5e\u7684Window * getParent - \u83b7\u53d6\u7236\u8282\u70b9 * getBoundsInScreen - \u83b7\u53d6\u5c4f\u5e55\u5750\u6807\u4e2d\u7684\u8282\u70b9\u8fb9\u754c * isCheckable - \u8be5\u8282\u70b9\u662f\u5426\u53ef\u88ab\u9009\u4e2d * isChecked - \u8be5\u8282\u70b9\u662f\u5426\u88ab\u9009\u4e2d * isFocused - \u8be5\u8282\u70b9\u662f\u5426\u88ab\u805a\u7126 * isVisibleToUser - \u6b64\u8282\u70b9\u662f\u5426\u5bf9\u7528\u6237\u53ef\u89c1 * isAccessibilityFocused - \u6b64\u8282\u70b9\u662f\u5426\u53ef\u88ab\u805a\u7126 * isSelected - \u6b64\u8282\u70b9\u662f\u5426\u53ef\u88ab\u9009\u4e2d * isClickable - \u6b64\u8282\u70b9\u662f\u5426\u53ef\u88ab\u70b9\u51fb * isLongClickable - \u6b64\u8282\u70b9\u662f\u5426\u53ef\u88ab\u957f\u6309 * isEnabled - \u6b64\u8282\u70b9\u662f\u5426\u53ef\u7528 * isPassword - \u6b64\u8282\u70b9\u662f\u5426\u672a\u5bc6\u7801 * isScrollable - \u662f\u5426\u53ef\u6eda\u52a8 * isEditable - \u662f\u5426\u53ef\u8f93\u5165\u6587\u5b57 * getDrawingOrder - \u83b7\u53d6\u7ed8\u5236\u987a\u5e8f * getCollectionInfo - \u5982\u679c\u8282\u70b9\u662f\u96c6\u5408\uff0c\u5219\u83b7\u53d6\u96c6\u5408\u4fe1\u606f\u3002\u96c6\u5408\u5b50\u59cb\u7ec8\u662f\u96c6\u5408\u9879 * isContentInvalid - \u83b7\u53d6\u6b64\u8282\u70b9\u7684\u5185\u5bb9\u662f\u5426\u65e0\u6548\u3002\u4f8b\u5982\uff0c\u65e5\u671f\u683c\u5f0f\u4e0d\u6b63\u786e\u3002 * isContextClickable - \u9f20\u6807\u70b9\u51fb\u662f\u5426\u53ef\u7528 * isMultiLine - \u83b7\u53d6\u8282\u70b9\u662f\u5426\u4e3a\u591a\u884c\u53ef\u7f16\u8f91\u6587\u672c * canOpenPopup - \u83b7\u53d6\u6b64\u8282\u70b9\u662f\u5426\u6253\u5f00\u5f39\u51fa\u7a97\u53e3\u6216\u5bf9\u8bdd\u6846 * isDismissable - \u662f\u5426\u53ef\u4ee5\u5173\u95ed\u8be5\u8282\u70b9 * getPackageName - \u83b7\u53d6\u5305\u540d * getClassName - \u83b7\u53d6\u7c7b\u540d * getText - \u83b7\u53d6\u6b64\u8282\u70b9\u4e0a\u7684\u6587\u5b57 * replaceClickableSpan - \u66ff\u6362\u8282\u70b9\u4e0a\u7684\u6587\u672c * getViewIdResourceName - \u83b7\u53d6\u5168\u8def\u5f84\u7684ViewId * getInputType - \u83b7\u53d6\u8f93\u5165\u7c7b\u578b\uff0c\u53ef\u80fd\u7528\u4e8eEditText * getExtras - \u83b7\u53d6\u989d\u5916\u7684\u6570\u636e\u4fe1\u606f","title":"AccessibilityNodeInfo"},{"location":"android/%E9%9A%8F%E7%AC%94/%E7%94%A8Kotlin%E7%BB%99RecyclerView%E5%86%99%E4%B8%80%E4%B8%AA%E8%B6%85%E7%BA%A7Adapter/","text":"Kotlin\u5c01\u88c5RecyclerView\u7684Adapter \u6b63\u5e38RecycleView + Adapter \u7684\u5199\u6cd5 class MainActivity : AppCompatActivity() { private lateinit var mRecyclerView: RecyclerView override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) setContentView(R.layout.activity_main) mRecyclerView = findViewById(R.id.recyclerView) mRecyclerView.layoutManager = LinearLayoutManager(this) val itemList = listOf(Program(1, \"java\"), Program(2, \"c\"), Program(3, \"c++\"), Program(4, \"python\"), Program(5, \"go\"), Program(6, \"ruby\"), Program(7, \"kotlin\"), Program(8, \"scale\"), Program(9, \"lisp\"), Program(10, \"swift\"), Program(11, \"object-c\"), Program(12, \"html\"), Program(13, \"javascript\")) mRecyclerView.adapter = RvAdapter(R.layout.item_rv, itemList) } } class RvAdapter constructor(private val layoutId: Int, private val itemList: List<Program>) : RecyclerView.Adapter<RvAdapter.ViewHolder>() { override fun onCreateViewHolder(parent: ViewGroup?, viewType: Int): ViewHolder { val itemView = LayoutInflater.from(parent?.context) .inflate(layoutId, null) return ViewHolder(itemView) } override fun onBindViewHolder(holder: ViewHolder?, position: Int) { val item = itemList[holder?.adapterPosition!!] holder.mTvPosition.text = \"\"\"${item.position} --- ${item.name}\"\"\" } override fun getItemCount() = itemList.size class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) { var mTvPosition: TextView = itemView.findViewById(R.id.tv_position) } } \u7528Kotlin\u5c01\u88c5\u4e00\u4e2a\u6700\u521d\u59cb\u7684Adapter class KtAdapter<T> constructor(private val layoutId: Int, private val itemList: List<T>, //\u5b9a\u4e49\u4e00\u4e2a\u7ee7\u627fView\u7684lambda\u8868\u8fbe\u5f0f\uff0c\u5e76\u4e14\u8fd9\u4e2a\u63a5\u53d7\u4e00\u4e2a\u6cdb\u578b\u7684\u5b9e\u4f53 private val bindHolder: View.(T) -> Unit) : RecyclerView.Adapter<KtAdapter.ViewHolder>() { override fun onCreateViewHolder(parent: ViewGroup?, viewType: Int): ViewHolder { val itemView = LayoutInflater.from(parent?.context) .inflate(layoutId, null) return ViewHolder(itemView) } override fun onBindViewHolder(holder: ViewHolder?, position: Int) { val item = itemList[holder?.adapterPosition!!] //\u4f7f\u7528\u8fd9\u4e2alambda\u8868\u8fbe\u5f0f holder.itemView.bindHolder(item) } override fun getItemCount() = itemList.size class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) } import kotlinx.android.synthetic.main.item_rv.view.* ... mRecyclerView.adapter = KtAdapter(R.layout.item_rv, itemList, { //\u6240\u4ee5\u8fd9\u91cclambda\u7684it\u5c31\u662f\u6cdb\u578bT\u5bf9\u5e94\u7684\u5b9e\u4f53 tv_position.text = \"${it.position} --- ${it.name}\" }) \u589e\u52a0Item\u70b9\u51fb\u4e8b\u4ef6 class KtAdapter<T> constructor(private val layoutId: Int, private val itemList: List<T>, //\u5b9a\u4e49\u4e00\u4e2alambda\u8868\u8fbe\u5f0f private val bindHolder: View.(T) -> Unit) : RecyclerView.Adapter<KtAdapter.ViewHolder>() { private var itemClick: T.() -> Unit = {} constructor(layoutId: Int, itemList: List<T>, bindHolder: View.(T) -> Unit, itemClick: T.() -> Unit = {}) : this(layoutId, itemList, bindHolder) { this.itemClick = itemClick } override fun onCreateViewHolder(parent: ViewGroup?, viewType: Int): ViewHolder { val itemView = LayoutInflater.from(parent?.context) .inflate(layoutId, null) val holder = ViewHolder(itemView) return holder } override fun onBindViewHolder(holder: ViewHolder?, position: Int) { val item = itemList[holder?.adapterPosition!!] holder.itemView.bindHolder(item) holder.itemView.setOnClickListener { itemOnClick(it, position) } } override fun getItemCount() = itemList.size class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) protected open fun itemOnClick(itemView: View, position: Int) { itemList[position].itemClick() } } mRecyclerView.adapter = KtAdapter(R.layout.item_rv, itemList, { tv_position.text = \"${it.position} --- ${it.name}\" }, { Toast.makeText(applicationContext, this.name, Toast.LENGTH_SHORT).show() })","title":"Kotlin\u5c01\u88c5RecyclerView\u7684Adapter"},{"location":"android/%E9%9A%8F%E7%AC%94/%E7%94%A8Kotlin%E7%BB%99RecyclerView%E5%86%99%E4%B8%80%E4%B8%AA%E8%B6%85%E7%BA%A7Adapter/#kotlinrecyclerviewadapter","text":"","title":"Kotlin\u5c01\u88c5RecyclerView\u7684Adapter"},{"location":"android/%E9%9A%8F%E7%AC%94/%E7%94%A8Kotlin%E7%BB%99RecyclerView%E5%86%99%E4%B8%80%E4%B8%AA%E8%B6%85%E7%BA%A7Adapter/#recycleview-adapter","text":"class MainActivity : AppCompatActivity() { private lateinit var mRecyclerView: RecyclerView override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) setContentView(R.layout.activity_main) mRecyclerView = findViewById(R.id.recyclerView) mRecyclerView.layoutManager = LinearLayoutManager(this) val itemList = listOf(Program(1, \"java\"), Program(2, \"c\"), Program(3, \"c++\"), Program(4, \"python\"), Program(5, \"go\"), Program(6, \"ruby\"), Program(7, \"kotlin\"), Program(8, \"scale\"), Program(9, \"lisp\"), Program(10, \"swift\"), Program(11, \"object-c\"), Program(12, \"html\"), Program(13, \"javascript\")) mRecyclerView.adapter = RvAdapter(R.layout.item_rv, itemList) } } class RvAdapter constructor(private val layoutId: Int, private val itemList: List<Program>) : RecyclerView.Adapter<RvAdapter.ViewHolder>() { override fun onCreateViewHolder(parent: ViewGroup?, viewType: Int): ViewHolder { val itemView = LayoutInflater.from(parent?.context) .inflate(layoutId, null) return ViewHolder(itemView) } override fun onBindViewHolder(holder: ViewHolder?, position: Int) { val item = itemList[holder?.adapterPosition!!] holder.mTvPosition.text = \"\"\"${item.position} --- ${item.name}\"\"\" } override fun getItemCount() = itemList.size class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) { var mTvPosition: TextView = itemView.findViewById(R.id.tv_position) } }","title":"\u6b63\u5e38RecycleView + Adapter \u7684\u5199\u6cd5"},{"location":"android/%E9%9A%8F%E7%AC%94/%E7%94%A8Kotlin%E7%BB%99RecyclerView%E5%86%99%E4%B8%80%E4%B8%AA%E8%B6%85%E7%BA%A7Adapter/#kotlinadapter","text":"class KtAdapter<T> constructor(private val layoutId: Int, private val itemList: List<T>, //\u5b9a\u4e49\u4e00\u4e2a\u7ee7\u627fView\u7684lambda\u8868\u8fbe\u5f0f\uff0c\u5e76\u4e14\u8fd9\u4e2a\u63a5\u53d7\u4e00\u4e2a\u6cdb\u578b\u7684\u5b9e\u4f53 private val bindHolder: View.(T) -> Unit) : RecyclerView.Adapter<KtAdapter.ViewHolder>() { override fun onCreateViewHolder(parent: ViewGroup?, viewType: Int): ViewHolder { val itemView = LayoutInflater.from(parent?.context) .inflate(layoutId, null) return ViewHolder(itemView) } override fun onBindViewHolder(holder: ViewHolder?, position: Int) { val item = itemList[holder?.adapterPosition!!] //\u4f7f\u7528\u8fd9\u4e2alambda\u8868\u8fbe\u5f0f holder.itemView.bindHolder(item) } override fun getItemCount() = itemList.size class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) } import kotlinx.android.synthetic.main.item_rv.view.* ... mRecyclerView.adapter = KtAdapter(R.layout.item_rv, itemList, { //\u6240\u4ee5\u8fd9\u91cclambda\u7684it\u5c31\u662f\u6cdb\u578bT\u5bf9\u5e94\u7684\u5b9e\u4f53 tv_position.text = \"${it.position} --- ${it.name}\" })","title":"\u7528Kotlin\u5c01\u88c5\u4e00\u4e2a\u6700\u521d\u59cb\u7684Adapter"},{"location":"android/%E9%9A%8F%E7%AC%94/%E7%94%A8Kotlin%E7%BB%99RecyclerView%E5%86%99%E4%B8%80%E4%B8%AA%E8%B6%85%E7%BA%A7Adapter/#item","text":"class KtAdapter<T> constructor(private val layoutId: Int, private val itemList: List<T>, //\u5b9a\u4e49\u4e00\u4e2alambda\u8868\u8fbe\u5f0f private val bindHolder: View.(T) -> Unit) : RecyclerView.Adapter<KtAdapter.ViewHolder>() { private var itemClick: T.() -> Unit = {} constructor(layoutId: Int, itemList: List<T>, bindHolder: View.(T) -> Unit, itemClick: T.() -> Unit = {}) : this(layoutId, itemList, bindHolder) { this.itemClick = itemClick } override fun onCreateViewHolder(parent: ViewGroup?, viewType: Int): ViewHolder { val itemView = LayoutInflater.from(parent?.context) .inflate(layoutId, null) val holder = ViewHolder(itemView) return holder } override fun onBindViewHolder(holder: ViewHolder?, position: Int) { val item = itemList[holder?.adapterPosition!!] holder.itemView.bindHolder(item) holder.itemView.setOnClickListener { itemOnClick(it, position) } } override fun getItemCount() = itemList.size class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) protected open fun itemOnClick(itemView: View, position: Int) { itemList[position].itemClick() } } mRecyclerView.adapter = KtAdapter(R.layout.item_rv, itemList, { tv_position.text = \"${it.position} --- ${it.name}\" }, { Toast.makeText(applicationContext, this.name, Toast.LENGTH_SHORT).show() })","title":"\u589e\u52a0Item\u70b9\u51fb\u4e8b\u4ef6"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89SnackBar/","text":"\u81ea\u5b9a\u4e49SnackBar \u6211\u6d4f\u89c8material.io\u7f51\u7ad9\u65f6\uff0c\u4ece\u6240\u8c13\u7684\u201cMaterial Design 2\u201d\u4e2d\u627e\u5230\u4e00\u4e9b\u65b0\u7684\u7ec4\u4ef6\uff0c\u5e76\u53d1\u73b0Snackbar\u5df2\u7ecf\u6539\u53d8\u4e86\uff0c\u5b83\u4e0d\u518d\u5360\u7528\u6574\u4e2a\u5c4f\u5e55\u957f\u5ea6\uff0c\u5e76\u4e14\u5468\u56f4\u4f1a\u6709\u4e00\u4e2a\u95f4\u8ddd\u3002 \u4f46\u6211\u5e76\u6ca1\u6709\u4eceSupport Library\u7684alpha\u7248\u672c\u4e2d\u627e\u5230\u5b83\uff0c\u6240\u4ee5\u6211\u51b3\u5b9a\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e0b\u3002 1\u3001\u521b\u5efaDrawable\u6587\u4ef6 <shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\"> <solid android:color=\"#323232\" /> <corners android:radius=\"4dp\" /> </shape> 2\u3001\u521b\u5efa\u5de5\u5177\u7c7b public class SnackbarHelper { public static void config(Context context, Snackbar snack) { addMargins(snack); setRoundBordersBg(context, snack); ViewCompat.setElevation(snack.getView(), 6f); } private static void addMargins(Snackbar snack) { ViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) snack.getView().getLayoutParams(); params.setMargins(12, 12, 12, 12); snack.getView().setLayoutParams(params); } private static void setRoundBordersBg(Context context, Snackbar snackbar) { snackbar.getView().setBackground(context.getResources().getDrawable(R.drawable.bg_snackbar)); } } 3\u3001\u4f7f\u7528 public void showSnackbar(View view) { Snackbar snackbar = Snackbar.make(view, \"\u8fd9\u4e2a\u4e00\u4e2asnackbar\", Snackbar.LENGTH_SHORT); snackbar.setAction(\"ok\", new View.OnClickListener() { @Override public void onClick(View v) { } }); snackbar.setActionTextColor(Color.RED); SnackbarHelper.config(MainActivity.this, snackbar); snackbar.show(); } 4\u3001\u5c55\u793a","title":"\u81ea\u5b9a\u4e49SnackBar"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89SnackBar/#snackbar","text":"\u6211\u6d4f\u89c8material.io\u7f51\u7ad9\u65f6\uff0c\u4ece\u6240\u8c13\u7684\u201cMaterial Design 2\u201d\u4e2d\u627e\u5230\u4e00\u4e9b\u65b0\u7684\u7ec4\u4ef6\uff0c\u5e76\u53d1\u73b0Snackbar\u5df2\u7ecf\u6539\u53d8\u4e86\uff0c\u5b83\u4e0d\u518d\u5360\u7528\u6574\u4e2a\u5c4f\u5e55\u957f\u5ea6\uff0c\u5e76\u4e14\u5468\u56f4\u4f1a\u6709\u4e00\u4e2a\u95f4\u8ddd\u3002 \u4f46\u6211\u5e76\u6ca1\u6709\u4eceSupport Library\u7684alpha\u7248\u672c\u4e2d\u627e\u5230\u5b83\uff0c\u6240\u4ee5\u6211\u51b3\u5b9a\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e0b\u3002","title":"\u81ea\u5b9a\u4e49SnackBar"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89SnackBar/#1drawable","text":"<shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\"> <solid android:color=\"#323232\" /> <corners android:radius=\"4dp\" /> </shape>","title":"1\u3001\u521b\u5efaDrawable\u6587\u4ef6"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89SnackBar/#2","text":"public class SnackbarHelper { public static void config(Context context, Snackbar snack) { addMargins(snack); setRoundBordersBg(context, snack); ViewCompat.setElevation(snack.getView(), 6f); } private static void addMargins(Snackbar snack) { ViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) snack.getView().getLayoutParams(); params.setMargins(12, 12, 12, 12); snack.getView().setLayoutParams(params); } private static void setRoundBordersBg(Context context, Snackbar snackbar) { snackbar.getView().setBackground(context.getResources().getDrawable(R.drawable.bg_snackbar)); } }","title":"2\u3001\u521b\u5efa\u5de5\u5177\u7c7b"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89SnackBar/#3","text":"public void showSnackbar(View view) { Snackbar snackbar = Snackbar.make(view, \"\u8fd9\u4e2a\u4e00\u4e2asnackbar\", Snackbar.LENGTH_SHORT); snackbar.setAction(\"ok\", new View.OnClickListener() { @Override public void onClick(View v) { } }); snackbar.setActionTextColor(Color.RED); SnackbarHelper.config(MainActivity.this, snackbar); snackbar.show(); }","title":"3\u3001\u4f7f\u7528"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89SnackBar/#4","text":"","title":"4\u3001\u5c55\u793a"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7%E5%99%A8/","text":"\u81ea\u5b9a\u4e49\u5168\u5c40\u5f02\u5e38\u6355\u83b7\u5668 \u4e00\u56fe\u80dc\u524d\u8a00 \u4e0a\u56fe\u4e2d\uff0c\u6211\u4eec\u6a21\u62df\u4e86NullPointerException\u7684\u53d1\u751f\uff0c\u7cfb\u7edf\u6355\u83b7\u4e86\u8be5\u5f02\u5e38\uff0c\u5e76\u7528\u4e00\u4e2a\u754c\u9762\u5c55\u793a\u4e86\u51fa\u6765\u3002 \u5982\u4f55\u5b9e\u73b0 \u60f3\u8981\u5b9e\u73b0\u5168\u5c40\u5f02\u5e38\u7684\u6355\u83b7\u6211\u4eec\u9700\u8981\u4e86\u89e3 Thead \u4e2d\u7684\u4e00\u4e2a\u5185\u90e8\u63a5\u53e3 UncaughtExceptionHandler \uff0c\u8be5\u63a5\u53e3\u5728JDK1.5\u4e2d\u88ab\u6dfb\u52a0\u3002 \u6240\u6709\u6211\u4eec\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u53bb\u5b9e\u73b0\u8be5\u63a5\u53e3\uff0c\u5e76\u4e14\u8bbe\u7f6e\u7ed9 Thread \u7684 DefaultUncaughtExceptionHandler \u3002 //\u4f2a\u4ee3\u7801 public class SpiderMan implements Thread.UncaughtExceptionHandler { private SpiderMan() { Thread.setDefaultUncaughtExceptionHandler(this); } @Override public void uncaughtException(Thread t, Throwable ex) { } } UncaughtExceptionHandler \u4f1a\u6355\u83b7\u4ee3\u7801\u4e2d\u6ca1\u6709\u6355\u83b7\u7684\u5f02\u5e38\uff0c\u7136\u540e\u56de\u8c03\u7ed9 uncaughtException \u65b9\u6cd5\u3002 \u89e3\u6790Throwable private CrashModel parseCrash(Throwable ex) { CrashModel model = new CrashModel(); try { model.setEx(ex); model.setTime(new Date().getTime()); if (ex.getCause() != null) { ex = ex.getCause(); } model.setExceptionMsg(ex.getMessage()); StringWriter sw = new StringWriter(); PrintWriter pw = new PrintWriter(sw); ex.printStackTrace(pw); pw.flush(); String exceptionType = ex.getClass().getName(); if (ex.getStackTrace() != null && ex.getStackTrace().length > 0) { StackTraceElement element = ex.getStackTrace()[0]; model.setLineNumber(element.getLineNumber()); model.setClassName(element.getClassName()); model.setFileName(element.getFileName()); model.setMethodName(element.getMethodName()); model.setExceptionType(exceptionType); } model.setFullException(sw.toString()); } catch (Exception e) { return model; } return model; } \u5982\u4e0a\u4ee3\u7801\u6240\u793a\uff0c\u6211\u4eec\u53ef\u4ee5\u4eceThrowable\u7c7b\u4e2d\u89e3\u6790\u51fa\u5f88\u591a\u6709\u7528\u7684\u4fe1\u606f\uff0c\u5305\u62ec \u5d29\u6e83\u53d1\u751f\u7684\u7c7b \uff0c \u6240\u5728\u884c\u6570 , exception\u7684\u7c7b\u578b ... \u8df3\u8f6c\u65b0\u7684\u754c\u9762\u663e\u793aCrash\u4fe1\u606f Intent intent = new Intent(mContext, CrashActivity.class); intent.putExtra(CrashActivity.CRASH_MODEL, model); intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); mContext.startActivity(intent); \u5728\u5bf9Throwable\u89e3\u6790\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8df3\u8f6c\u5230\u4e00\u4e2a\u65b0\u7684Activity\u5e76\u5c55\u793aCrash\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u8fd9\u91cc Context \u662fApplication\u7684Context\uff0c\u6240\u6709\u5fc5\u987b\u4f7f\u7528 Intent.FLAG_ACTIVITY_NEW_TASK \u624d\u80fd\u6210\u529f\u8df3\u8f6c\u3002 \u5206\u4eabCrash\u4fe1\u606f \u5206\u4eab\u6587\u672c \u628aThrowable\u89e3\u6790\u6210\u6709\u7528\u7684\u5b57\u7b26\u4e32\uff0c\u8c03\u7528\u7cfb\u7edf\u7684\u5206\u4eab\u65b9\u6cd5 private void shareText(String text) { Intent intent = new Intent(Intent.ACTION_SEND); intent.setType(\"text/plain\"); intent.putExtra(Intent.EXTRA_SUBJECT, \"\u5d29\u6e83\u4fe1\u606f\uff1a\"); intent.putExtra(Intent.EXTRA_TEXT, text); intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); startActivity(Intent.createChooser(intent, \"\u5206\u4eab\u5230\")); } \u5206\u4eab\u957f\u56fe \u5206\u4eab\u56fe\u7247\u8981\u6d89\u53ca\u4e1c\u897f\u5c31\u591a\u5566\uff0c\u6bd4\u5982ScrollView\u7684\u622a\u56fe\uff0c\u5982\u4f55\u4fdd\u5b58\u5230Sd\u5361\uff0c6.0\u9700\u8981\u52a8\u6001\u6743\u9650\u68c0\u6d4b\uff0c7.0\u8fd8\u8981\u517c\u5bb9fileprovider\u3002 ScrollView\u7684\u622a\u56fe scrollview\u622a\u56fe\u539f\u7406\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u521b\u5efa\u4e00\u4e2a\u548cScrollView\u4e00\u6837\u5bbd\u9ad8\u7684Bitmap\uff0c\u7136\u540e\u5c06ScrollView\u7684\u5185\u5bb9\u753b\u5728Bitmap\u4e0a\u3002 public Bitmap getBitmapByView(ScrollView view) { if (view == null) return null; int height = 0; for (int i = 0; i < view.getChildCount(); i++) { height += view.getChildAt(i).getHeight(); } Bitmap bitmap = Bitmap.createBitmap(view.getWidth(), height, Bitmap.Config.ARGB_8888); Canvas canvas = new Canvas(bitmap); canvas.drawRGB(255, 255, 255); view.draw(canvas); return bitmap; } \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u904d\u5386\u4e86ScrollView\u7684\u6240\u6709\u5b50view\uff0c\u4e3a\u4e86\u8ba1\u7b97\u51faScrollView\u7684\u771f\u5b9e\u9ad8\u5ea6\uff0c\u4f46\u662f\u5176\u5b9e\u5206\u6790\u6e90\u7801\u53ef\u4ee5\u5f97\u77e5ScrollView\u5176\u5b9e\u53ea\u80fd\u6709\u4e00\u4e2a\u5b50view\uff0c\u6240\u4ee5\u76f4\u63a5\u83b7\u53d6ScrollView\u7684\u7b2c\u4e00\u4e2a\u5b50view\u4e5f\u662f\u53ef\u4ee5\u7684\u3002 //ScrollView @Override public void addView(View child) { if (getChildCount() > 0) { throw new IllegalStateException(\"ScrollView can host only one direct child\"); } super.addView(child); } \u63a5\u7740\u5c31\u662f\u521b\u5efa\u4e00\u4e2a\u548cScrollView\u5bbd\u9ad8\u4e00\u6837\u7684Bitmap\uff0c\u5e76\u5c06\u5b83\u8bbe\u7f6e\u7ed9Canvas\uff0cCanvas\u5148draw\u4e86\u4e00\u4e2a\u767d\u8272\u7684\u80cc\u666f\uff0c\u7136\u540e\u624d\u5c06view\u7684\u5185\u5bb9\u753b\u5728Bitmap\u4e0a\u3002 6.0 \u52a8\u6001\u6743\u9650 Android\u4ece 6.0(API 23)\u5f00\u59cb\uff0c\u5bf9\u7cfb\u7edf\u6743\u9650\u505a\u4e86\u5f88\u5927\u7684\u6539\u53d8\u3002\u4ece6.0\u5f00\u59cb\uff0c\u4e00\u4e9b\u654f\u611f\u6743\u9650\uff0c\u9700\u8981\u5728\u4f7f\u7528\u65f6\u52a8\u6001\u7533\u8bf7\uff0c\u5e76\u4e14\u7528\u6237\u53ef\u4ee5\u62d2\u7edd\u6388\u6743\u8bbf\u95ee\u8fd9\u4e9b\u6743\u9650\uff0c\u5df2\u6388\u4e88\u8fc7\u7684\u6743\u9650\uff0c\u7528\u6237\u4e5f\u53ef\u4ee5\u53bbAPP\u8bbe\u7f6e\u9875\u9762\u53bb\u5173\u95ed\u6388\u6743\u3002\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5c06\u957f\u56fe\u4fdd\u5b58\u5230SD\u5361\u540e\u5206\u4eab\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u9700\u8981\u8bfb\u5199SD\u5361\u7684\u6743\u9650\uff0c\u8bfb\u5199SD\u5361\u6743\u9650\u4e5f\u5c5e\u4e8e\u654f\u611f\u6743\u9650\u3002 \u6211\u4eec\u9700\u8981\u8c03\u7528 ActivityCompat \u7c7b\u4e0b\u7684 requestPermissions \u65b9\u6cd5\u53bb\u7533\u8bf7\u6743\u9650\u3002 ActivityCompat.requestPermissions(Activity activity, String[] permissions, int requestCode); activity \u5f53\u524d\u7533\u8bf7\u6743\u9650\u7684Activity permissions \u8981\u7533\u8bf7\u7684\u6743\u9650\u7ec4 requestCode \u8bf7\u6c42\u7801 \u7136\u540e\u6211\u4eec\u9700\u8981\u5728\u5f53\u524dActivity\u4e0b\u91cd\u5199 onRequestPermissionsResult \u6765\u5224\u65ad\u7528\u6237\u662f\u5426\u6388\u6743\u4e86\u6211\u4eec\u7533\u8bf7\u7684\u6743\u9650\u3002 @Override public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) { //\u5224\u65ad\u8bf7\u6c42\u7801\uff0c\u786e\u5b9a\u5f53\u524d\u7533\u8bf7\u7684\u6743\u9650 if (requestCode == REQUEST_CODE) { //\u5224\u65ad\u6743\u9650\u662f\u5426\u7533\u8bf7\u901a\u8fc7 if (grantResults.length == 1 && grantResults[0] == PackageManager.PERMISSION_GRANTED) { //\u6388\u6743\u6210\u529f shareImage(); } else { //\u6388\u6743\u5931\u8d25 showToast(\"\u8bf7\u6388\u4e88SD\u5361\u6743\u9650\u624d\u80fd\u5206\u4eab\u56fe\u7247\"); } } else { super.onRequestPermissionsResult(requestCode, permissions, grantResults); } } \u5176\u5b9e github \u4e0a\u5df2\u7ecf\u6709\u5f88\u591a\u4f18\u79c0\u7684\u6743\u9650\u7533\u8bf7\u6846\u67b6\u4e86\uff0c\u5e2e\u6211\u4eec\u7b80\u5316\u4e86\u5f88\u591a\u64cd\u4f5c\uff0c\u5e76\u4e14\u91cc\u9762\u6709\u4e00\u4e9b\u601d\u60f3\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b66\u4e60\u4e00\u4e0b\u7684\u3002\u5c31\u6bd4\u5982\u7528\u4e00\u4e2a\u900f\u660e\u7684Fragment\u505a\u4ee3\u7406\u76f4\u63a5\u56de\u8c03\u6743\u9650\u7533\u8bf7\u7684\u7ed3\u679c\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4e0d\u91cd\u5199 onRequestPermissionsResult \u65b9\u6cd5\u3002 \u56fe\u7247\u4fdd\u5b58\u5230SD\u5361 \u56fe\u7247\u4fdd\u5b58\u5230SD\u5361\u4e5f\u5f88\u7b80\u5355\uff0c\u76f4\u63a5new\u4e00\u4e2aFile\u5c06Bitmap\u5199\u5165\u5373\u53ef\uff0c\u4f46\u662f\u8bb0\u5f97\u4f7f\u7528\u5b8cBitmap\u53ca\u65f6\u8c03\u7528 recycle \u56de\u6536\u3002 private File BitmapToFile(Bitmap bitmap) { if (bitmap == null) return null; String path = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) .getAbsolutePath(); File imageFile = new File(path, \"spiderMan-\" + df.format(model.getTime()) + \".jpg\"); try { FileOutputStream out = new FileOutputStream(imageFile); bitmap.compress(Bitmap.CompressFormat.JPEG, 100, out); out.flush(); out.close(); bitmap.recycle(); } catch (FileNotFoundException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); } return imageFile; } 7.0 FileProvider \u6700\u540e\u624d\u5230\u771f\u6b63\u5206\u4eab\u56fe\u7247\u7684\u73af\u8282\uff0c\u5206\u4eab\u56fe\u7247\u5176\u5b9e\u5c31\u662f\u5206\u4eabFile\uff0c\u4f46\u662f\u5206\u4eabFile\u5176\u5b9e\u53c8\u662f\u7528\u7684\u643a\u5e26 Uri \u7684 Intent \uff0c\u57287.0\u4ee5\u524d\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 Uri.fromFile(file) \u65b9\u6cd5\u76f4\u63a5\u53d6\u5f97\u6587\u4ef6\u7684Uri\u5730\u5740\uff0c\u4f46\u662f7.0\u4ee5\u540e\u6211\u4eec\u5c31\u9700\u8981 FileProvider \u8fd9\u4e2a\u4e1c\u4e1c\u3002\u90a3 FileProvider \u53c8\u662f\u4e2a\u5565\u5462\uff1f \u4ece Android 7.0 \u5f00\u59cb\uff0c\u4e3a\u4e86\u63d0\u9ad8\u79c1\u6709\u76ee\u5f55\u7684\u5b89\u5168\u6027\uff0c\u9632\u6b62\u5e94\u7528\u4fe1\u606f\u7684\u6cc4\u6f0f\uff0c\u5f00\u53d1\u4eba\u5458\u4e0d\u80fd\u591f\u518d\u7b80\u5355\u5730\u901a\u8fc7 file:// Uri \u8bbf\u95ee\u5e94\u7528\u7684\u79c1\u6709\u76ee\u5f55\u6587\u4ef6\u6216\u8005\u8ba9\u5176\u4ed6\u5e94\u7528\u8bbf\u95ee\u81ea\u5df1\u7684\u79c1\u6709\u76ee\u5f55\u6587\u4ef6\u3002 \u5e76\u4e14\u4ece 7.0 \u5f00\u59cb\uff0cAndroid SDK \u4e2d\u7684 StrictMode \u7b56\u7565\u7981\u6b62\u5f00\u53d1\u4eba\u5458\u5728\u5e94\u7528\u5916\u90e8\u516c\u5f00 file:// Uri\u3002\u4e5f\u5c31\u662f\u8bf4\u5f53\u6211\u4eec\u5728\u5e94\u7528\u4e2d\u4f7f\u7528\u5305\u542b file:// Uri \u7684 Intent \u79bb\u5f00\u81ea\u5df1\u7684\u5e94\u7528\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u51fa\u73b0 FileUriExposedException \u7684\u5f02\u5e38\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u9996\u5148\u6211\u4eec\u5728 res/xml \u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2a xml \u6587\u4ef6\uff0c\u7528\u4e8e\u5b58\u653e\u5e94\u7528\u9700\u8981\u5171\u4eab\u7684\u76ee\u5f55\u6587\u4ef6\u3002 <?xml version=\"1.0\" encoding=\"utf-8\"?> <paths> <external-path name=\"image_cache\" path=\"Download\" /> </paths> \u7136\u540e\u7528\u4e00\u4e2a\u7c7b\u53bb\u7ee7\u627f FileProvider \u7c7b\uff0c\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u591a\u4e2a\u5e94\u7528\u95f4\u540c\u65f6\u7528\u5230\u4e86\u8fd9\u4e2aFileProvider\u7c7b\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u51b2\u7a81\u3002 public class SpiderManFileProvider extends FileProvider { } \u63a5\u7740\u5728 AndroidManifest.xml \u52a0\u4e0a\u6211\u4eec\u81ea\u5b9a\u4e49\u7684Provider\uff0c\u56e0\u4e3aFileProvider\u4e5f\u662f\u7ee7\u627f\u4e0eContentProvider\uff0c\u5c5e\u4e8e\u56db\u5927\u7ec4\u4ef6\u4e4b\u4e00\uff0c\u6240\u4ee5\u5fc5\u987b\u5728AndroidManifest.xml\u6587\u4ef6\u4e2d\u58f0\u660e\u3002 <application> <provider android:name=\"com.simple.spiderman.SpiderManFileProvider\" android:authorities=\"${applicationId}.spidermanfileprovider\" android:exported=\"false\" android:grantUriPermissions=\"true\"> <meta-data android:name=\"android.support.FILE_PROVIDER_PATHS\" android:resource=\"@xml/file_paths\" /> </provider> </application> \u6700\u540e\u624d\u662fIntent\u643a\u5e26File Uri\u5e76\u5206\u4eab\u7684\u4ee3\u7801 Intent intent = new Intent(); intent.setAction(Intent.ACTION_SEND); intent.setType(\"image/*\"); //\u5224\u65ad\u7248\u672c\u662f\u5426\u4e3a7.0\u53ca\u4ee5\u4e0a if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) { Uri contentUri = FileProvider.getUriForFile(getApplicationContext(), getApplicationContext().getPackageName() + \".spidermanfileprovider\", file); intent.putExtra(Intent.EXTRA_STREAM, contentUri); } else { intent.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(file)); } intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION); startActivity(Intent.createChooser(intent, \"\u5206\u4eab\u56fe\u7247\")); \u81ea\u52a8\u521d\u59cb\u5316 \u5f88\u591a\u7b2c\u4e09\u65b9\u6846\u67b6\u6216SDK\u90fd\u4f1a\u6709\u4e2a\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u6bd4\u5982\u5728 Application \u7684 onCreate \u4e2d\u8c03\u7528 XXX.init() \uff0c SpiderMan \u5728\u6700\u5f00\u59cb\u4e5f\u662f\u8fd9\u4e48\u505a\u7684\uff0c\u4f46\u662f\u4e4b\u540e\u5b66\u4e60\u4e86 LeakCanary \u7684\u505a\u6cd5\uff0c\u5c31\u4e0d\u518d\u9700\u8981\u624b\u52a8\u521d\u59cb\u5316\u4e86\uff0c\u90a3\u4e48\u81ea\u52a8\u521d\u59cb\u5316\u8be5\u600e\u4e48\u505a\u5462\uff1f \u9996\u5148\u5b9a\u4e49\u4e00\u4e2a SpiderManInitProvider \uff0c\u5b83\u662f\u7ee7\u627f\u4e8e ContentProvider \u7684\u4e00\u4e2a\u5b50\u7c7b\u3002\u7136\u540e\u5728 AndroidManifest.xml \u4e2d\u6ce8\u518c\u8fd9\u4e2a ContentProvider \u3002 public class SpiderManInitProvider extends ContentProvider { @Override public boolean onCreate() { Context application = getContext().getApplicationContext(); if (application == null) { application = Utils.getApplicationByReflect(); } SpiderMan.init(application); return true; } //... \u7701\u7565\u9ed8\u8ba4\u5b9e\u73b0\u4ee3\u7801 } <application> <provider android:name=\".SpiderManInitProvider\" android:authorities=\"${applicationId}.spiderman-init-provider\" android:exported=\"false\" android:multiprocess=\"true\" /> </application> \u4ece\u4e0a\u9762\u4ee3\u7801\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5c31\u5728 ContentProvider \u7684 onCreate \u65b9\u6cd5\u4e2d\u8c03\u7528\u4e86 SpiderMan \u7684\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u8fd9\u6837\u5c31\u81ea\u52a8\u5b8c\u6210\u4e86\u521d\u59cb\u5316\u5de5\u4f5c\u3002\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\u5c31\u53ef\u4ee5\u4e86\u5462\uff1f\u56e0\u4e3aAndroid\u6e90\u7801\u592a\u8fc7\u590d\u6742\uff0c\u4e0d\u592a\u597d\u8bb2\u89e3\uff0c\u4e0b\u9762\u6211\u5c31\u7b80\u5355\u5206\u6790\u4e0b\u5229\u7528 ContentProvider \u505a\u81ea\u52a8\u521d\u59cb\u5316\u7684\u539f\u7406\u3002 \u7b80\u5355\u7684\u6253\u70b9\uff0c\u6211\u4eec\u540c\u65f6\u5728 ContentProvider \u548c Application \u7684 onCreate \u65b9\u6cd5\u589e\u52a0\u8f93\u51fa\uff0c\u53ef\u4ee5\u53d1\u73b0 ContentProvider \u7684 onCreate \u4f1a\u5148\u4e8e Appliction \u8c03\u7528\u3002 ContentProvider ----> onCreate Application ----> onCreate \u90a3\u4e48\u76f4\u63a5\u4ece Application \u7684 onCreate \u7684\u65b9\u6cd5\u5165\u624b\uff0c\u5728\u4e00\u8fde\u4e32\u7684\u8df3\u8f6c\u540e\u53d1\u73b0\uff1a\u5176\u5b9e Application \u7684 onCreate \u65b9\u6cd5\u8c03\u7528\u662f Instrumentation \u8c03\u7528\u4e86 callApplicationOnCreate \u65b9\u6cd5\uff0c\u7136\u540e\u8fd9\u4e2a\u65b9\u6cd5\u662f\u5728 ActivityThread \u7684 handleBindApplication \u65b9\u6cd5\u4e2d\u8c03\u7528\u7684\u3002\u5e76\u4e14\u5728 callApplicationOnCreate \u65b9\u6cd5\u524d\u6709\u4e2a installContentProviders \u7684\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u662f\u521b\u5efa\u6240\u6709\u5728 AndroidManifest.xml \u6ce8\u518c\u8fc7\u7684 ContentProvider \u3002 //ActivtyThread private void handleBindApplication(AppBindData data) { ... if (!data.restrictedBackupMode) { if (!ArrayUtils.isEmpty(data.providers)) { installContentProviders(app, data.providers); } } ... try { mInstrumentation.callApplicationOnCreate(app); } catch (Exception e) { } ... } \u6e90\u7801\u5730\u5740 https://github.com/simplepeng/SpiderMan","title":"\u81ea\u5b9a\u4e49\u5168\u5c40\u5f02\u5e38\u6355\u83b7\u5668"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7%E5%99%A8/#_1","text":"","title":"\u81ea\u5b9a\u4e49\u5168\u5c40\u5f02\u5e38\u6355\u83b7\u5668"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7%E5%99%A8/#_2","text":"\u4e0a\u56fe\u4e2d\uff0c\u6211\u4eec\u6a21\u62df\u4e86NullPointerException\u7684\u53d1\u751f\uff0c\u7cfb\u7edf\u6355\u83b7\u4e86\u8be5\u5f02\u5e38\uff0c\u5e76\u7528\u4e00\u4e2a\u754c\u9762\u5c55\u793a\u4e86\u51fa\u6765\u3002","title":"\u4e00\u56fe\u80dc\u524d\u8a00"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7%E5%99%A8/#_3","text":"\u60f3\u8981\u5b9e\u73b0\u5168\u5c40\u5f02\u5e38\u7684\u6355\u83b7\u6211\u4eec\u9700\u8981\u4e86\u89e3 Thead \u4e2d\u7684\u4e00\u4e2a\u5185\u90e8\u63a5\u53e3 UncaughtExceptionHandler \uff0c\u8be5\u63a5\u53e3\u5728JDK1.5\u4e2d\u88ab\u6dfb\u52a0\u3002 \u6240\u6709\u6211\u4eec\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u53bb\u5b9e\u73b0\u8be5\u63a5\u53e3\uff0c\u5e76\u4e14\u8bbe\u7f6e\u7ed9 Thread \u7684 DefaultUncaughtExceptionHandler \u3002 //\u4f2a\u4ee3\u7801 public class SpiderMan implements Thread.UncaughtExceptionHandler { private SpiderMan() { Thread.setDefaultUncaughtExceptionHandler(this); } @Override public void uncaughtException(Thread t, Throwable ex) { } } UncaughtExceptionHandler \u4f1a\u6355\u83b7\u4ee3\u7801\u4e2d\u6ca1\u6709\u6355\u83b7\u7684\u5f02\u5e38\uff0c\u7136\u540e\u56de\u8c03\u7ed9 uncaughtException \u65b9\u6cd5\u3002","title":"\u5982\u4f55\u5b9e\u73b0"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7%E5%99%A8/#throwable","text":"private CrashModel parseCrash(Throwable ex) { CrashModel model = new CrashModel(); try { model.setEx(ex); model.setTime(new Date().getTime()); if (ex.getCause() != null) { ex = ex.getCause(); } model.setExceptionMsg(ex.getMessage()); StringWriter sw = new StringWriter(); PrintWriter pw = new PrintWriter(sw); ex.printStackTrace(pw); pw.flush(); String exceptionType = ex.getClass().getName(); if (ex.getStackTrace() != null && ex.getStackTrace().length > 0) { StackTraceElement element = ex.getStackTrace()[0]; model.setLineNumber(element.getLineNumber()); model.setClassName(element.getClassName()); model.setFileName(element.getFileName()); model.setMethodName(element.getMethodName()); model.setExceptionType(exceptionType); } model.setFullException(sw.toString()); } catch (Exception e) { return model; } return model; } \u5982\u4e0a\u4ee3\u7801\u6240\u793a\uff0c\u6211\u4eec\u53ef\u4ee5\u4eceThrowable\u7c7b\u4e2d\u89e3\u6790\u51fa\u5f88\u591a\u6709\u7528\u7684\u4fe1\u606f\uff0c\u5305\u62ec \u5d29\u6e83\u53d1\u751f\u7684\u7c7b \uff0c \u6240\u5728\u884c\u6570 , exception\u7684\u7c7b\u578b ...","title":"\u89e3\u6790Throwable"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7%E5%99%A8/#crash","text":"Intent intent = new Intent(mContext, CrashActivity.class); intent.putExtra(CrashActivity.CRASH_MODEL, model); intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); mContext.startActivity(intent); \u5728\u5bf9Throwable\u89e3\u6790\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8df3\u8f6c\u5230\u4e00\u4e2a\u65b0\u7684Activity\u5e76\u5c55\u793aCrash\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u8fd9\u91cc Context \u662fApplication\u7684Context\uff0c\u6240\u6709\u5fc5\u987b\u4f7f\u7528 Intent.FLAG_ACTIVITY_NEW_TASK \u624d\u80fd\u6210\u529f\u8df3\u8f6c\u3002","title":"\u8df3\u8f6c\u65b0\u7684\u754c\u9762\u663e\u793aCrash\u4fe1\u606f"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7%E5%99%A8/#crash_1","text":"","title":"\u5206\u4eabCrash\u4fe1\u606f"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7%E5%99%A8/#_4","text":"\u628aThrowable\u89e3\u6790\u6210\u6709\u7528\u7684\u5b57\u7b26\u4e32\uff0c\u8c03\u7528\u7cfb\u7edf\u7684\u5206\u4eab\u65b9\u6cd5 private void shareText(String text) { Intent intent = new Intent(Intent.ACTION_SEND); intent.setType(\"text/plain\"); intent.putExtra(Intent.EXTRA_SUBJECT, \"\u5d29\u6e83\u4fe1\u606f\uff1a\"); intent.putExtra(Intent.EXTRA_TEXT, text); intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); startActivity(Intent.createChooser(intent, \"\u5206\u4eab\u5230\")); }","title":"\u5206\u4eab\u6587\u672c"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7%E5%99%A8/#_5","text":"\u5206\u4eab\u56fe\u7247\u8981\u6d89\u53ca\u4e1c\u897f\u5c31\u591a\u5566\uff0c\u6bd4\u5982ScrollView\u7684\u622a\u56fe\uff0c\u5982\u4f55\u4fdd\u5b58\u5230Sd\u5361\uff0c6.0\u9700\u8981\u52a8\u6001\u6743\u9650\u68c0\u6d4b\uff0c7.0\u8fd8\u8981\u517c\u5bb9fileprovider\u3002","title":"\u5206\u4eab\u957f\u56fe"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7%E5%99%A8/#scrollview","text":"scrollview\u622a\u56fe\u539f\u7406\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u521b\u5efa\u4e00\u4e2a\u548cScrollView\u4e00\u6837\u5bbd\u9ad8\u7684Bitmap\uff0c\u7136\u540e\u5c06ScrollView\u7684\u5185\u5bb9\u753b\u5728Bitmap\u4e0a\u3002 public Bitmap getBitmapByView(ScrollView view) { if (view == null) return null; int height = 0; for (int i = 0; i < view.getChildCount(); i++) { height += view.getChildAt(i).getHeight(); } Bitmap bitmap = Bitmap.createBitmap(view.getWidth(), height, Bitmap.Config.ARGB_8888); Canvas canvas = new Canvas(bitmap); canvas.drawRGB(255, 255, 255); view.draw(canvas); return bitmap; } \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u904d\u5386\u4e86ScrollView\u7684\u6240\u6709\u5b50view\uff0c\u4e3a\u4e86\u8ba1\u7b97\u51faScrollView\u7684\u771f\u5b9e\u9ad8\u5ea6\uff0c\u4f46\u662f\u5176\u5b9e\u5206\u6790\u6e90\u7801\u53ef\u4ee5\u5f97\u77e5ScrollView\u5176\u5b9e\u53ea\u80fd\u6709\u4e00\u4e2a\u5b50view\uff0c\u6240\u4ee5\u76f4\u63a5\u83b7\u53d6ScrollView\u7684\u7b2c\u4e00\u4e2a\u5b50view\u4e5f\u662f\u53ef\u4ee5\u7684\u3002 //ScrollView @Override public void addView(View child) { if (getChildCount() > 0) { throw new IllegalStateException(\"ScrollView can host only one direct child\"); } super.addView(child); } \u63a5\u7740\u5c31\u662f\u521b\u5efa\u4e00\u4e2a\u548cScrollView\u5bbd\u9ad8\u4e00\u6837\u7684Bitmap\uff0c\u5e76\u5c06\u5b83\u8bbe\u7f6e\u7ed9Canvas\uff0cCanvas\u5148draw\u4e86\u4e00\u4e2a\u767d\u8272\u7684\u80cc\u666f\uff0c\u7136\u540e\u624d\u5c06view\u7684\u5185\u5bb9\u753b\u5728Bitmap\u4e0a\u3002","title":"ScrollView\u7684\u622a\u56fe"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7%E5%99%A8/#60","text":"Android\u4ece 6.0(API 23)\u5f00\u59cb\uff0c\u5bf9\u7cfb\u7edf\u6743\u9650\u505a\u4e86\u5f88\u5927\u7684\u6539\u53d8\u3002\u4ece6.0\u5f00\u59cb\uff0c\u4e00\u4e9b\u654f\u611f\u6743\u9650\uff0c\u9700\u8981\u5728\u4f7f\u7528\u65f6\u52a8\u6001\u7533\u8bf7\uff0c\u5e76\u4e14\u7528\u6237\u53ef\u4ee5\u62d2\u7edd\u6388\u6743\u8bbf\u95ee\u8fd9\u4e9b\u6743\u9650\uff0c\u5df2\u6388\u4e88\u8fc7\u7684\u6743\u9650\uff0c\u7528\u6237\u4e5f\u53ef\u4ee5\u53bbAPP\u8bbe\u7f6e\u9875\u9762\u53bb\u5173\u95ed\u6388\u6743\u3002\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5c06\u957f\u56fe\u4fdd\u5b58\u5230SD\u5361\u540e\u5206\u4eab\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u9700\u8981\u8bfb\u5199SD\u5361\u7684\u6743\u9650\uff0c\u8bfb\u5199SD\u5361\u6743\u9650\u4e5f\u5c5e\u4e8e\u654f\u611f\u6743\u9650\u3002 \u6211\u4eec\u9700\u8981\u8c03\u7528 ActivityCompat \u7c7b\u4e0b\u7684 requestPermissions \u65b9\u6cd5\u53bb\u7533\u8bf7\u6743\u9650\u3002 ActivityCompat.requestPermissions(Activity activity, String[] permissions, int requestCode); activity \u5f53\u524d\u7533\u8bf7\u6743\u9650\u7684Activity permissions \u8981\u7533\u8bf7\u7684\u6743\u9650\u7ec4 requestCode \u8bf7\u6c42\u7801 \u7136\u540e\u6211\u4eec\u9700\u8981\u5728\u5f53\u524dActivity\u4e0b\u91cd\u5199 onRequestPermissionsResult \u6765\u5224\u65ad\u7528\u6237\u662f\u5426\u6388\u6743\u4e86\u6211\u4eec\u7533\u8bf7\u7684\u6743\u9650\u3002 @Override public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) { //\u5224\u65ad\u8bf7\u6c42\u7801\uff0c\u786e\u5b9a\u5f53\u524d\u7533\u8bf7\u7684\u6743\u9650 if (requestCode == REQUEST_CODE) { //\u5224\u65ad\u6743\u9650\u662f\u5426\u7533\u8bf7\u901a\u8fc7 if (grantResults.length == 1 && grantResults[0] == PackageManager.PERMISSION_GRANTED) { //\u6388\u6743\u6210\u529f shareImage(); } else { //\u6388\u6743\u5931\u8d25 showToast(\"\u8bf7\u6388\u4e88SD\u5361\u6743\u9650\u624d\u80fd\u5206\u4eab\u56fe\u7247\"); } } else { super.onRequestPermissionsResult(requestCode, permissions, grantResults); } } \u5176\u5b9e github \u4e0a\u5df2\u7ecf\u6709\u5f88\u591a\u4f18\u79c0\u7684\u6743\u9650\u7533\u8bf7\u6846\u67b6\u4e86\uff0c\u5e2e\u6211\u4eec\u7b80\u5316\u4e86\u5f88\u591a\u64cd\u4f5c\uff0c\u5e76\u4e14\u91cc\u9762\u6709\u4e00\u4e9b\u601d\u60f3\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b66\u4e60\u4e00\u4e0b\u7684\u3002\u5c31\u6bd4\u5982\u7528\u4e00\u4e2a\u900f\u660e\u7684Fragment\u505a\u4ee3\u7406\u76f4\u63a5\u56de\u8c03\u6743\u9650\u7533\u8bf7\u7684\u7ed3\u679c\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4e0d\u91cd\u5199 onRequestPermissionsResult \u65b9\u6cd5\u3002","title":"6.0 \u52a8\u6001\u6743\u9650"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7%E5%99%A8/#sd","text":"\u56fe\u7247\u4fdd\u5b58\u5230SD\u5361\u4e5f\u5f88\u7b80\u5355\uff0c\u76f4\u63a5new\u4e00\u4e2aFile\u5c06Bitmap\u5199\u5165\u5373\u53ef\uff0c\u4f46\u662f\u8bb0\u5f97\u4f7f\u7528\u5b8cBitmap\u53ca\u65f6\u8c03\u7528 recycle \u56de\u6536\u3002 private File BitmapToFile(Bitmap bitmap) { if (bitmap == null) return null; String path = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) .getAbsolutePath(); File imageFile = new File(path, \"spiderMan-\" + df.format(model.getTime()) + \".jpg\"); try { FileOutputStream out = new FileOutputStream(imageFile); bitmap.compress(Bitmap.CompressFormat.JPEG, 100, out); out.flush(); out.close(); bitmap.recycle(); } catch (FileNotFoundException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); } return imageFile; }","title":"\u56fe\u7247\u4fdd\u5b58\u5230SD\u5361"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7%E5%99%A8/#70-fileprovider","text":"\u6700\u540e\u624d\u5230\u771f\u6b63\u5206\u4eab\u56fe\u7247\u7684\u73af\u8282\uff0c\u5206\u4eab\u56fe\u7247\u5176\u5b9e\u5c31\u662f\u5206\u4eabFile\uff0c\u4f46\u662f\u5206\u4eabFile\u5176\u5b9e\u53c8\u662f\u7528\u7684\u643a\u5e26 Uri \u7684 Intent \uff0c\u57287.0\u4ee5\u524d\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 Uri.fromFile(file) \u65b9\u6cd5\u76f4\u63a5\u53d6\u5f97\u6587\u4ef6\u7684Uri\u5730\u5740\uff0c\u4f46\u662f7.0\u4ee5\u540e\u6211\u4eec\u5c31\u9700\u8981 FileProvider \u8fd9\u4e2a\u4e1c\u4e1c\u3002\u90a3 FileProvider \u53c8\u662f\u4e2a\u5565\u5462\uff1f \u4ece Android 7.0 \u5f00\u59cb\uff0c\u4e3a\u4e86\u63d0\u9ad8\u79c1\u6709\u76ee\u5f55\u7684\u5b89\u5168\u6027\uff0c\u9632\u6b62\u5e94\u7528\u4fe1\u606f\u7684\u6cc4\u6f0f\uff0c\u5f00\u53d1\u4eba\u5458\u4e0d\u80fd\u591f\u518d\u7b80\u5355\u5730\u901a\u8fc7 file:// Uri \u8bbf\u95ee\u5e94\u7528\u7684\u79c1\u6709\u76ee\u5f55\u6587\u4ef6\u6216\u8005\u8ba9\u5176\u4ed6\u5e94\u7528\u8bbf\u95ee\u81ea\u5df1\u7684\u79c1\u6709\u76ee\u5f55\u6587\u4ef6\u3002 \u5e76\u4e14\u4ece 7.0 \u5f00\u59cb\uff0cAndroid SDK \u4e2d\u7684 StrictMode \u7b56\u7565\u7981\u6b62\u5f00\u53d1\u4eba\u5458\u5728\u5e94\u7528\u5916\u90e8\u516c\u5f00 file:// Uri\u3002\u4e5f\u5c31\u662f\u8bf4\u5f53\u6211\u4eec\u5728\u5e94\u7528\u4e2d\u4f7f\u7528\u5305\u542b file:// Uri \u7684 Intent \u79bb\u5f00\u81ea\u5df1\u7684\u5e94\u7528\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u51fa\u73b0 FileUriExposedException \u7684\u5f02\u5e38\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u9996\u5148\u6211\u4eec\u5728 res/xml \u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2a xml \u6587\u4ef6\uff0c\u7528\u4e8e\u5b58\u653e\u5e94\u7528\u9700\u8981\u5171\u4eab\u7684\u76ee\u5f55\u6587\u4ef6\u3002 <?xml version=\"1.0\" encoding=\"utf-8\"?> <paths> <external-path name=\"image_cache\" path=\"Download\" /> </paths> \u7136\u540e\u7528\u4e00\u4e2a\u7c7b\u53bb\u7ee7\u627f FileProvider \u7c7b\uff0c\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u591a\u4e2a\u5e94\u7528\u95f4\u540c\u65f6\u7528\u5230\u4e86\u8fd9\u4e2aFileProvider\u7c7b\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u51b2\u7a81\u3002 public class SpiderManFileProvider extends FileProvider { } \u63a5\u7740\u5728 AndroidManifest.xml \u52a0\u4e0a\u6211\u4eec\u81ea\u5b9a\u4e49\u7684Provider\uff0c\u56e0\u4e3aFileProvider\u4e5f\u662f\u7ee7\u627f\u4e0eContentProvider\uff0c\u5c5e\u4e8e\u56db\u5927\u7ec4\u4ef6\u4e4b\u4e00\uff0c\u6240\u4ee5\u5fc5\u987b\u5728AndroidManifest.xml\u6587\u4ef6\u4e2d\u58f0\u660e\u3002 <application> <provider android:name=\"com.simple.spiderman.SpiderManFileProvider\" android:authorities=\"${applicationId}.spidermanfileprovider\" android:exported=\"false\" android:grantUriPermissions=\"true\"> <meta-data android:name=\"android.support.FILE_PROVIDER_PATHS\" android:resource=\"@xml/file_paths\" /> </provider> </application> \u6700\u540e\u624d\u662fIntent\u643a\u5e26File Uri\u5e76\u5206\u4eab\u7684\u4ee3\u7801 Intent intent = new Intent(); intent.setAction(Intent.ACTION_SEND); intent.setType(\"image/*\"); //\u5224\u65ad\u7248\u672c\u662f\u5426\u4e3a7.0\u53ca\u4ee5\u4e0a if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) { Uri contentUri = FileProvider.getUriForFile(getApplicationContext(), getApplicationContext().getPackageName() + \".spidermanfileprovider\", file); intent.putExtra(Intent.EXTRA_STREAM, contentUri); } else { intent.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(file)); } intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION); startActivity(Intent.createChooser(intent, \"\u5206\u4eab\u56fe\u7247\"));","title":"7.0 FileProvider"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7%E5%99%A8/#_6","text":"\u5f88\u591a\u7b2c\u4e09\u65b9\u6846\u67b6\u6216SDK\u90fd\u4f1a\u6709\u4e2a\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u6bd4\u5982\u5728 Application \u7684 onCreate \u4e2d\u8c03\u7528 XXX.init() \uff0c SpiderMan \u5728\u6700\u5f00\u59cb\u4e5f\u662f\u8fd9\u4e48\u505a\u7684\uff0c\u4f46\u662f\u4e4b\u540e\u5b66\u4e60\u4e86 LeakCanary \u7684\u505a\u6cd5\uff0c\u5c31\u4e0d\u518d\u9700\u8981\u624b\u52a8\u521d\u59cb\u5316\u4e86\uff0c\u90a3\u4e48\u81ea\u52a8\u521d\u59cb\u5316\u8be5\u600e\u4e48\u505a\u5462\uff1f \u9996\u5148\u5b9a\u4e49\u4e00\u4e2a SpiderManInitProvider \uff0c\u5b83\u662f\u7ee7\u627f\u4e8e ContentProvider \u7684\u4e00\u4e2a\u5b50\u7c7b\u3002\u7136\u540e\u5728 AndroidManifest.xml \u4e2d\u6ce8\u518c\u8fd9\u4e2a ContentProvider \u3002 public class SpiderManInitProvider extends ContentProvider { @Override public boolean onCreate() { Context application = getContext().getApplicationContext(); if (application == null) { application = Utils.getApplicationByReflect(); } SpiderMan.init(application); return true; } //... \u7701\u7565\u9ed8\u8ba4\u5b9e\u73b0\u4ee3\u7801 } <application> <provider android:name=\".SpiderManInitProvider\" android:authorities=\"${applicationId}.spiderman-init-provider\" android:exported=\"false\" android:multiprocess=\"true\" /> </application> \u4ece\u4e0a\u9762\u4ee3\u7801\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5c31\u5728 ContentProvider \u7684 onCreate \u65b9\u6cd5\u4e2d\u8c03\u7528\u4e86 SpiderMan \u7684\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u8fd9\u6837\u5c31\u81ea\u52a8\u5b8c\u6210\u4e86\u521d\u59cb\u5316\u5de5\u4f5c\u3002\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\u5c31\u53ef\u4ee5\u4e86\u5462\uff1f\u56e0\u4e3aAndroid\u6e90\u7801\u592a\u8fc7\u590d\u6742\uff0c\u4e0d\u592a\u597d\u8bb2\u89e3\uff0c\u4e0b\u9762\u6211\u5c31\u7b80\u5355\u5206\u6790\u4e0b\u5229\u7528 ContentProvider \u505a\u81ea\u52a8\u521d\u59cb\u5316\u7684\u539f\u7406\u3002 \u7b80\u5355\u7684\u6253\u70b9\uff0c\u6211\u4eec\u540c\u65f6\u5728 ContentProvider \u548c Application \u7684 onCreate \u65b9\u6cd5\u589e\u52a0\u8f93\u51fa\uff0c\u53ef\u4ee5\u53d1\u73b0 ContentProvider \u7684 onCreate \u4f1a\u5148\u4e8e Appliction \u8c03\u7528\u3002 ContentProvider ----> onCreate Application ----> onCreate \u90a3\u4e48\u76f4\u63a5\u4ece Application \u7684 onCreate \u7684\u65b9\u6cd5\u5165\u624b\uff0c\u5728\u4e00\u8fde\u4e32\u7684\u8df3\u8f6c\u540e\u53d1\u73b0\uff1a\u5176\u5b9e Application \u7684 onCreate \u65b9\u6cd5\u8c03\u7528\u662f Instrumentation \u8c03\u7528\u4e86 callApplicationOnCreate \u65b9\u6cd5\uff0c\u7136\u540e\u8fd9\u4e2a\u65b9\u6cd5\u662f\u5728 ActivityThread \u7684 handleBindApplication \u65b9\u6cd5\u4e2d\u8c03\u7528\u7684\u3002\u5e76\u4e14\u5728 callApplicationOnCreate \u65b9\u6cd5\u524d\u6709\u4e2a installContentProviders \u7684\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u662f\u521b\u5efa\u6240\u6709\u5728 AndroidManifest.xml \u6ce8\u518c\u8fc7\u7684 ContentProvider \u3002 //ActivtyThread private void handleBindApplication(AppBindData data) { ... if (!data.restrictedBackupMode) { if (!ArrayUtils.isEmpty(data.providers)) { installContentProviders(app, data.providers); } } ... try { mInstrumentation.callApplicationOnCreate(app); } catch (Exception e) { } ... }","title":"\u81ea\u52a8\u521d\u59cb\u5316"},{"location":"android/%E9%9A%8F%E7%AC%94/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7%E5%99%A8/#_7","text":"https://github.com/simplepeng/SpiderMan","title":"\u6e90\u7801\u5730\u5740"},{"location":"%E5%85%B6%E4%BB%96/HenCoder-5%E6%9C%9F-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","text":"HenCoder-5\u671f-\u5b66\u4e60\u7b14\u8bb0 02-HTTP\u57fa\u7840 HTTP\u662f\u4ec0\u4e48\uff1fHyper Text Transfer Protocol\uff0c\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\u3002 \u8d85\u6587\u672c\u662f\u4ec0\u4e48\uff1f\u5728\u7535\u8111\u4e2d\u663e\u793a\u7684\uff0c\u542b\u6709\u53ef\u4ee5\u6307\u5411\u5176\u4ed6\u6587\u672c\u94fe\u63a5\u7684\u6587\u672c\u3002 HTTP\u7684\u5de5\u4f5c\u65b9\u5f0f\uff1a\u53d1\u9001\u8bf7\u6c42 ----> \u63a5\u53d7\u54cd\u5e94 \u8bf7\u6c42\u62a5\u6587\uff1a \u8bf7\u6c42\u884c\uff1amethod-path-http version \u5bf9\u5e94\uff1aGET /users HTTP/1.1 \u8bf7\u6c42\u5934\uff1a Host: api.github.com Content-Type: text/plain ..... Body \u54cd\u5e94\u62a5\u6587: \u72b6\u6001\u884c\uff1aHTTP/1.1 200 OK Headers Body \u8bf7\u6c42\u65b9\u5f0f\uff1a GET\uff1a\u83b7\u53d6\u8d44\u6e90\uff0c\u6ca1\u6709\u8bf7\u6c42\u7684Body\uff0c\u5e42\u7b49 POST\uff1a \u589e\u52a0\u6216\u4fee\u6539\u8d44\u6e90\uff0c\u6709Body PUT\uff1a\u4fee\u6539\u8d44\u6e90\uff0c\u6709Body \uff0c\u5e42\u7b49 DELETE\uff1a\u5220\u9664\u8d44\u6e90\uff0c\u6ca1\u6709Body\uff0c\u5e42\u7b49 HEAD\uff1a\u8ddfGET\u7c7b\u4f3c\uff0c\u4f46\u662f\u6ca1\u6709\u54cd\u5e94Body\u3002\u4e3b\u8981\u7528\u6765\u83b7\u53d6\u4fe1\u606f ..... \u72b6\u6001\u7801\uff1a\u5bf9\u7ed3\u679c\u505a\u51fa\u7c7b\u578b\u5316\u63cf\u8ff0\uff0c\u4f8b\u5982\uff1a\u83b7\u53d6\u6210\u529f\uff0c\u5185\u5bb9\u672a\u627e\u5230 1xx\uff1a\u4e34\u65f6\u6027\u6d88\u606f 2xx\uff1a\u6210\u529f 3xx\uff1a\u91cd\u5b9a\u5411 4xx\uff1a\u5ba2\u6237\u7aef\u9519\u8bef 5xx\uff1a\u670d\u52a1\u5668\u9519\u8bef","title":"HenCoder-5\u671f-\u5b66\u4e60\u7b14\u8bb0"},{"location":"%E5%85%B6%E4%BB%96/HenCoder-5%E6%9C%9F-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#hencoder-5-","text":"","title":"HenCoder-5\u671f-\u5b66\u4e60\u7b14\u8bb0"},{"location":"%E5%85%B6%E4%BB%96/HenCoder-5%E6%9C%9F-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#02-http","text":"HTTP\u662f\u4ec0\u4e48\uff1fHyper Text Transfer Protocol\uff0c\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\u3002 \u8d85\u6587\u672c\u662f\u4ec0\u4e48\uff1f\u5728\u7535\u8111\u4e2d\u663e\u793a\u7684\uff0c\u542b\u6709\u53ef\u4ee5\u6307\u5411\u5176\u4ed6\u6587\u672c\u94fe\u63a5\u7684\u6587\u672c\u3002 HTTP\u7684\u5de5\u4f5c\u65b9\u5f0f\uff1a\u53d1\u9001\u8bf7\u6c42 ----> \u63a5\u53d7\u54cd\u5e94 \u8bf7\u6c42\u62a5\u6587\uff1a \u8bf7\u6c42\u884c\uff1amethod-path-http version \u5bf9\u5e94\uff1aGET /users HTTP/1.1 \u8bf7\u6c42\u5934\uff1a Host: api.github.com Content-Type: text/plain ..... Body \u54cd\u5e94\u62a5\u6587: \u72b6\u6001\u884c\uff1aHTTP/1.1 200 OK Headers Body \u8bf7\u6c42\u65b9\u5f0f\uff1a GET\uff1a\u83b7\u53d6\u8d44\u6e90\uff0c\u6ca1\u6709\u8bf7\u6c42\u7684Body\uff0c\u5e42\u7b49 POST\uff1a \u589e\u52a0\u6216\u4fee\u6539\u8d44\u6e90\uff0c\u6709Body PUT\uff1a\u4fee\u6539\u8d44\u6e90\uff0c\u6709Body \uff0c\u5e42\u7b49 DELETE\uff1a\u5220\u9664\u8d44\u6e90\uff0c\u6ca1\u6709Body\uff0c\u5e42\u7b49 HEAD\uff1a\u8ddfGET\u7c7b\u4f3c\uff0c\u4f46\u662f\u6ca1\u6709\u54cd\u5e94Body\u3002\u4e3b\u8981\u7528\u6765\u83b7\u53d6\u4fe1\u606f ..... \u72b6\u6001\u7801\uff1a\u5bf9\u7ed3\u679c\u505a\u51fa\u7c7b\u578b\u5316\u63cf\u8ff0\uff0c\u4f8b\u5982\uff1a\u83b7\u53d6\u6210\u529f\uff0c\u5185\u5bb9\u672a\u627e\u5230 1xx\uff1a\u4e34\u65f6\u6027\u6d88\u606f 2xx\uff1a\u6210\u529f 3xx\uff1a\u91cd\u5b9a\u5411 4xx\uff1a\u5ba2\u6237\u7aef\u9519\u8bef 5xx\uff1a\u670d\u52a1\u5668\u9519\u8bef","title":"02-HTTP\u57fa\u7840"},{"location":"%E5%85%B6%E4%BB%96/MacOS%2010.10%20%E4%BB%A5%E4%B8%8A%E8%A7%A3%E5%86%B3%E6%9C%BA%E6%A2%B0%E9%94%AE%E7%9B%98%E6%8C%89%E9%94%AE%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB/","text":"MacOS-10.10\u4ee5\u4e0a--\u89e3\u51b3\u673a\u68b0\u952e\u76d8\u6309\u952e\u65e0\u6cd5\u8bc6\u522b \u9898\u4e3b\u7684\u914d\u7f6e\u662f MacBook Pro \uff0c\u7cfb\u7edf10.13\uff0c\u673a\u68b0\u952e\u76d8\u9ad8\u65af87 \u4ee5\u524d\u88c5\u7684\u9ed1\u82f9\u679c\uff0c\u7cfb\u7edf10.10\uff0c\u673a\u68b0\u952e\u76d8\u53ef\u4ee5\u5b8c\u7f8e\u4f7f\u7528\uff0c\u4f46\u662f\u73b0\u5728\u7528\u4e86MacBook Pro\u673a\u68b0\u952e\u76d8\u786e\u6709\u51e0\u4e2a\u952e\u65e0\u6cd5\u8bc6\u522b\u51fa\u6765\uff0c\u5c31\u662f\u6309\u4e86\u6ca1\u6709\u53cd\u5e94\uff0c\u8fd9\u51e0\u4e2a\u53ef\u6076\u7684\u952e\u5c31\u662f\"Esc\",\"BackSpace\",\"Tab\"\u548c\"Space\"\uff0c\u4f7f\u7528 Karabiner-EventView \u53ef\u4ee5\u770b\u5230\u8fd9\u51e0\u4e2a\u952e\u662f\u6839\u672c\u6ca1\u6709\u54cd\u5e94\u6309\u952e\u4e8b\u4ef6\u3002 \u76f4\u5230\u6211\u53d1\u73b0GitHub\u6709\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\u597d\u50cf\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5148\u653e\u51fagithub\u7684\u4ed3\u5e93\u5730\u5740 iousbhiddriver-descriptor-override \u4f46\u662f\u6211\u6309\u7167\u6587\u6863\u4e2d\u7684\u6b65\u9aa4\u5b89\u88c5\u4e86\u9a71\u52a8\uff0c\u5e76\u4e14\u5728 /System/Library/Extensions \u76ee\u5f55\u4e0b\u4e5f\u627e\u5230\u4e86\u76f8\u5e94\u7684\u9a71\u52a8\u6587\u4ef6\uff0c\u4f46\u662f\u4e0a\u9762\u90a3\u4e2a\u51e0\u952e\u6309\u4e86\u8fd8\u662f\u6ca1\u6709\u53cd\u5e94\uff0c\u674e\u65f6\u73cd\u7684\u76ae\u554a\uff01\uff01\uff01 \u7136\u540e\u53c8\u7ee7\u7eed\u5728\u8be5\u9879\u76ee\u7684issue\u4e2d\u627e\u5bfb\u7b54\u6848\uff0c\u8fd9\u8fd8\u771f\u7684\u627e\u5230\u4e86\uff0c\u5929\u4e0d\u4ea1\u6211\u554a\uff01 issues \u6587\u4e2d\u7684\u5927\u6982\u610f\u601d\u5c31\u662f\u8981\u7981\u7528\u6389 System Integrity Protection (SIP-\u7cfb\u7edf\u5b8c\u6574\u6027\u4fdd\u8bc1)\uff0c\u597d\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u8be6\u7ec6\u6b65\u9aa4\u4e86\u3002 \u7981\u7528sip \u5f00\u673a\u7684\u8fc7\u7a0b\u4e2d\u4f7f\u52b2command+r\uff0c\u5176\u5b9e\u53ea\u7528\u6309\u51e0\u6b21\u5c31\u53ef\u4ee5\u4e86 \u5b9e\u7528\u5de5\u5177\u91cc\u9762\u6253\u5f00\u7ec8\u7aef\u547d\u4ee4\u884c \u8f93\u5165 csrutil disable \u7136\u540e\u56de\u8f66\uff0c\u770b\u5230\u6709success\u5b57\u7b26\u5c31\u884c \u8f93\u5165 reboot \uff0c\u7136\u540e\u56de\u8f66\uff0c\u8fd9\u6837\u7535\u8111\u5c31\u91cd\u542f\u4e86 \u5b89\u88c5Noppoo\u7684\u517c\u5bb9\u9a71\u52a8 iousbhiddriver-descriptor-override \u5230\u4e0a\u9762\u7f51\u7ad9\u4e0b\u8f7d\u6700\u65b0\u9a71\u52a8\u7684pkg\u6587\u4ef6\uff0c\u7136\u540e\u5b89\u88c5\u91cd\u542f\u5373\u53ef\u3002 \u5982\u679c\u9700\u8981\u6539\u952e\u7684\u4e0b\u8f7d Karabiner-Elements \u5373\u53ef\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u7f51\u7ad9\u4e2d\u7684 keyReMap4Mac \u7684\u6700\u65b0\u7248","title":"MacOS-10.10\u4ee5\u4e0a--\u89e3\u51b3\u673a\u68b0\u952e\u76d8\u6309\u952e\u65e0\u6cd5\u8bc6\u522b"},{"location":"%E5%85%B6%E4%BB%96/MacOS%2010.10%20%E4%BB%A5%E4%B8%8A%E8%A7%A3%E5%86%B3%E6%9C%BA%E6%A2%B0%E9%94%AE%E7%9B%98%E6%8C%89%E9%94%AE%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB/#macos-1010-","text":"\u9898\u4e3b\u7684\u914d\u7f6e\u662f MacBook Pro \uff0c\u7cfb\u7edf10.13\uff0c\u673a\u68b0\u952e\u76d8\u9ad8\u65af87 \u4ee5\u524d\u88c5\u7684\u9ed1\u82f9\u679c\uff0c\u7cfb\u7edf10.10\uff0c\u673a\u68b0\u952e\u76d8\u53ef\u4ee5\u5b8c\u7f8e\u4f7f\u7528\uff0c\u4f46\u662f\u73b0\u5728\u7528\u4e86MacBook Pro\u673a\u68b0\u952e\u76d8\u786e\u6709\u51e0\u4e2a\u952e\u65e0\u6cd5\u8bc6\u522b\u51fa\u6765\uff0c\u5c31\u662f\u6309\u4e86\u6ca1\u6709\u53cd\u5e94\uff0c\u8fd9\u51e0\u4e2a\u53ef\u6076\u7684\u952e\u5c31\u662f\"Esc\",\"BackSpace\",\"Tab\"\u548c\"Space\"\uff0c\u4f7f\u7528 Karabiner-EventView \u53ef\u4ee5\u770b\u5230\u8fd9\u51e0\u4e2a\u952e\u662f\u6839\u672c\u6ca1\u6709\u54cd\u5e94\u6309\u952e\u4e8b\u4ef6\u3002 \u76f4\u5230\u6211\u53d1\u73b0GitHub\u6709\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\u597d\u50cf\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5148\u653e\u51fagithub\u7684\u4ed3\u5e93\u5730\u5740 iousbhiddriver-descriptor-override \u4f46\u662f\u6211\u6309\u7167\u6587\u6863\u4e2d\u7684\u6b65\u9aa4\u5b89\u88c5\u4e86\u9a71\u52a8\uff0c\u5e76\u4e14\u5728 /System/Library/Extensions \u76ee\u5f55\u4e0b\u4e5f\u627e\u5230\u4e86\u76f8\u5e94\u7684\u9a71\u52a8\u6587\u4ef6\uff0c\u4f46\u662f\u4e0a\u9762\u90a3\u4e2a\u51e0\u952e\u6309\u4e86\u8fd8\u662f\u6ca1\u6709\u53cd\u5e94\uff0c\u674e\u65f6\u73cd\u7684\u76ae\u554a\uff01\uff01\uff01 \u7136\u540e\u53c8\u7ee7\u7eed\u5728\u8be5\u9879\u76ee\u7684issue\u4e2d\u627e\u5bfb\u7b54\u6848\uff0c\u8fd9\u8fd8\u771f\u7684\u627e\u5230\u4e86\uff0c\u5929\u4e0d\u4ea1\u6211\u554a\uff01 issues \u6587\u4e2d\u7684\u5927\u6982\u610f\u601d\u5c31\u662f\u8981\u7981\u7528\u6389 System Integrity Protection (SIP-\u7cfb\u7edf\u5b8c\u6574\u6027\u4fdd\u8bc1)\uff0c\u597d\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u8be6\u7ec6\u6b65\u9aa4\u4e86\u3002","title":"MacOS-10.10\u4ee5\u4e0a--\u89e3\u51b3\u673a\u68b0\u952e\u76d8\u6309\u952e\u65e0\u6cd5\u8bc6\u522b"},{"location":"%E5%85%B6%E4%BB%96/MacOS%2010.10%20%E4%BB%A5%E4%B8%8A%E8%A7%A3%E5%86%B3%E6%9C%BA%E6%A2%B0%E9%94%AE%E7%9B%98%E6%8C%89%E9%94%AE%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB/#sip","text":"\u5f00\u673a\u7684\u8fc7\u7a0b\u4e2d\u4f7f\u52b2command+r\uff0c\u5176\u5b9e\u53ea\u7528\u6309\u51e0\u6b21\u5c31\u53ef\u4ee5\u4e86 \u5b9e\u7528\u5de5\u5177\u91cc\u9762\u6253\u5f00\u7ec8\u7aef\u547d\u4ee4\u884c \u8f93\u5165 csrutil disable \u7136\u540e\u56de\u8f66\uff0c\u770b\u5230\u6709success\u5b57\u7b26\u5c31\u884c \u8f93\u5165 reboot \uff0c\u7136\u540e\u56de\u8f66\uff0c\u8fd9\u6837\u7535\u8111\u5c31\u91cd\u542f\u4e86","title":"\u7981\u7528sip"},{"location":"%E5%85%B6%E4%BB%96/MacOS%2010.10%20%E4%BB%A5%E4%B8%8A%E8%A7%A3%E5%86%B3%E6%9C%BA%E6%A2%B0%E9%94%AE%E7%9B%98%E6%8C%89%E9%94%AE%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB/#noppoo","text":"iousbhiddriver-descriptor-override \u5230\u4e0a\u9762\u7f51\u7ad9\u4e0b\u8f7d\u6700\u65b0\u9a71\u52a8\u7684pkg\u6587\u4ef6\uff0c\u7136\u540e\u5b89\u88c5\u91cd\u542f\u5373\u53ef\u3002 \u5982\u679c\u9700\u8981\u6539\u952e\u7684\u4e0b\u8f7d Karabiner-Elements \u5373\u53ef\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u7f51\u7ad9\u4e2d\u7684 keyReMap4Mac \u7684\u6700\u65b0\u7248","title":"\u5b89\u88c5Noppoo\u7684\u517c\u5bb9\u9a71\u52a8"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/","text":"\u4ec0\u4e48\u662fFFmpeg github\u5730\u5740\uff1a https://github.com/FFmpeg/FFmpeg FFmpeg\u5b98\u7f51\uff1a https://ffmpeg.org/ FFmpeg \u662f\u4e00\u5957\u53ef\u4ee5\u7528\u6765\u505a\u97f3\u89c6\u9891 \u91c7\u96c6 \uff0c \u88c1\u526a , \u8f6c\u6362 \uff0c \u63a8\u6d41 \u7b49\u64cd\u4f5c\u7684 \u5f00\u6e90\u8ba1\u7b97\u673a\u7a0b\u5e8f \u3002\u91c7\u7528LGPL\u6216GPL\u8bb8\u53ef\u8bc1\uff0c\u5b83\u63d0\u4f9b\u4e86\u5f55\u5236\u3001\u8f6c\u6362\u4ee5\u53ca\u6d41\u5316\u97f3\u89c6\u9891\u7684\u5b8c\u6574\u89e3\u51b3\u65b9\u6848\u3002 \u56fd\u5185\u8033\u719f\u80fd\u8be6\u7684 \u66b4\u98ce\u5f71\u97f3 \u3001 QQ\u5f71\u97f3 \uff0c\u4ee5\u53ca\u56fd\u5916\u8457\u540d\u7684 KMPlayer \u3001 PotPlayer \uff0c\u90fd\u91c7\u7528\u4e86FFmpeg\u7684\u4ee3\u7801\u4f46\u5374\u4e0d\u6309\u89c4\u77e9\u5f00\u6e90\uff0c\u88ab\u653e\u5165\u4e86FFmpeg\u7684\u803b\u8fb1\u540d\u5355\u5f53\u4e2d\u3002 FFmpeg\u4e3b\u8981\u7ec4\u6210\u7ec4\u4ef6 ffmpeg \uff1a\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u7528\u6765\u5bf9\u89c6\u9891\uff0c\u97f3\u9891\u6587\u4ef6\u6267\u884c \u526a\u8f91 \uff0c \u8f6c\u6362\u683c\u5f0f \uff0c \u65cb\u8f6c \uff0c \u6dfb\u52a0\u6ee4\u955c \u7b49\u64cd\u4f5c\u7684\u6307\u4ee4\u96c6 ffserver \uff1a\u4e00\u4e2aHTTP\u591a\u5a92\u4f53\u5373\u65f6\u5e7f\u64ad\u6d41\u670d\u52a1\u5668\uff0c\u652f\u6301\u56de\u6eaf ffplay \uff1a\u4e00\u4e2a\u7b80\u5355\u7684\u64ad\u653e\u5668\uff0c\u57fa\u4e8eSDL\u4e0eFFmpeg\u5e93 libavcodec \uff1a\u5305\u542b\u5168\u90e8FFmpeg\u97f3\u9891/\u89c6\u9891\u7f16\u89e3\u7801\u5e93 libavformat \uff1a\u5305\u542bdemuxers\u548cmuxer\u5c01\u88c5\u683c\u5f0f\u5e93 libavutil \uff1affmpeg\u4e00\u4e2a\u5de5\u5177\u5e93 libavfilter \uff1a\u52a0filter\u7684\u5e93(\u8fd9\u91cc\u7ffb\u8bd1\u6210\u6ee4\u955c\u4e0d\u592a\u4e25\u8c28) libswscale \uff1a\u5bf9\u56fe\u50cf\u505a\u8f6c\u6362\u6bd4\u4f8b(\u7f29\u653e)\u7684\u5e93 libavresample \uff1a\u505a\u91cd\u91c7\u6837\u7684\u5e93 libavdevice \uff1a\u4f7f\u7528\u8fd9\u4e2a\u5e93\u53ef\u4ee5\u8bfb\u53d6\u7535\u8111\uff08\u6216\u8005\u5176\u4ed6\u8bbe\u5907\u4e0a\uff09\u7684\u591a\u5a92\u4f53\u8bbe\u5907\u7684\u6570\u636e\uff0c\u6216\u8005\u8f93\u51fa\u6570\u636e\u5230\u6307\u5b9a\u7684\u591a\u5a92\u4f53\u8bbe\u5907\u4e0a FFmpeg\u547d\u4ee4\u96c6\u7684\u5e38\u7528\u53c2\u6570 FFmpeg\u53ef\u4f7f\u7528\u4f17\u591a\u53c2\u6570\uff0c\u53c2\u6570\u5185\u5bb9\u4f1a\u6839\u636effmpeg\u7248\u672c\u800c\u6709\u5dee\u5f02\uff0c\u4f7f\u7528\u524d\u5efa\u8bae\u5148\u53c2\u8003\u53c2\u6570\u53ca\u7f16\u89e3\u7801\u5668\u7684\u53d9\u8ff0\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528 ffmpeng -h \u547d\u4ee4\u67e5\u770b \u5e38\u7528\u53c2\u6570 -i \uff1a\u8bbe\u7f6e\u8f93\u5165\u6e90\uff0c\u53ef\u4ee5\u662f\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u662f\u7f51\u7edc\u6d41\u6587\u4ef6 -f \uff1a\u8bbe\u7f6e\u8f93\u51fa\u683c\u5f0f -y \uff1a\u82e5\u8f93\u51fa\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\u5c31\u8986\u76d6 -fs \uff1a\u8d85\u8fc7\u6307\u5b9a\u7684\u6587\u4ef6\u7684\u6301\u7eed\u65f6\u95f4\u5c31\u7ed3\u675f -ss \uff1a\u4ece\u6307\u5b9a\u65f6\u95f4\u5f00\u59cb\uff0c\u4e00\u822c\u683c\u5f0f\u4e3a 00:00:00 \uff0c\u4e5f\u53ef\u4ee5\u662f \u591a\u5c11\u79d2 -t \uff1a\u6307\u4ee4\u7684\u6301\u7eed\u65f6\u95f4 -title \uff1a\u8bbe\u7f6e\u5a92\u4f53\u6587\u4ef6\u7684\u6807\u9898 -c \uff1a\u6307\u5b9a\u8f93\u51fa\u6587\u4ef6\u7684\u7f16\u7801 -metadata \uff1a\u66f4\u6539\u8f93\u51fa\u6587\u4ef6\u7684 \u5143\u6570\u636e \u5f71\u50cf\u53c2\u6570 -b:v \u2014\u2014\u8bbe\u7f6e\u5f71\u50cf\u6d41\u91cf\uff0c\u9ed8\u8ba4\u4e3a200Kbit/\u79d2\u3002 -r \u2014\u2014\u8bbe\u7f6e\u5e27\u7387\u503c\uff0c\u9ed8\u8ba4\u4e3a25\u3002 -s \u2014\u2014\u8bbe\u7f6e\u753b\u9762\u7684\u5bbd\u4e0e\u9ad8\u3002 -aspect \u2014\u2014\u8bbe\u7f6e\u753b\u9762\u7684\u6bd4\u4f8b\u3002 -vn \u2014\u2014\u4e0d\u5904\u7406\u5f71\u50cf\uff0c\u4e8e\u4ec5\u9488\u5bf9\u58f0\u97f3\u505a\u5904\u7406\u65f6\u4f7f\u7528\u3002 -vcodec( -c:v ) \u2014\u2014\u8bbe\u7f6e\u5f71\u50cf\u5f71\u50cf\u7f16\u89e3\u7801\u5668\uff0c\u672a\u8bbe\u7f6e\u65f6\u5219\u4f7f\u7528\u4e0e\u8f93\u5165\u6587\u4ef6\u76f8\u540c\u4e4b\u7f16\u89e3\u7801\u5668\u3002 \u58f0\u97f3\u53c2\u6570 -b:a \u2014\u2014\u8bbe\u7f6e\u6bcf\u4e2a Channel \u7684\u6d41\u91cf\uff08chanel\u53ef\u4ee5\u7406\u89e3\u4e3a\u58f0\u9053\u6570\uff0c\u5de6\u58f0\u9053\uff0c\u53f3\u58f0\u9053\u8fd9\u79cd\uff09 -ar \u2014\u2014\u8bbe\u7f6e\u91c7\u6837\u7387\u3002 -ac \u2014\u2014\u8bbe\u7f6e\u58f0\u97f3\u7684 Channel \u6570\u3002 -acodec ( -c:a ) \u2014\u2014\u8bbe\u7f6e\u58f0\u97f3\u7f16\u89e3\u7801\u5668\uff0c\u672a\u8bbe\u7f6e\u65f6\u4e0e\u5f71\u50cf\u76f8\u540c\uff0c\u4f7f\u7528\u4e0e\u8f93\u5165\u6587\u4ef6\u76f8\u540c\u4e4b\u7f16\u89e3\u7801\u5668\u3002 -an \u2014\u2014\u4e0d\u5904\u7406\u58f0\u97f3\uff0c\u4e8e\u4ec5\u9488\u5bf9\u5f71\u50cf\u505a\u5904\u7406\u65f6\u4f7f\u7528\u3002 -vol \u2014\u2014\u8bbe\u7f6e\u97f3\u91cf\u5927\u5c0f\uff0c256\u4e3a\u6807\u51c6\u97f3\u91cf\u3002\uff08\u8981\u8bbe\u7f6e\u6210\u4e24\u500d\u97f3\u91cf\u65f6\u5219\u8f93\u5165512\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\uff09 \u5e38\u7528\u547d\u4ee4 \u67e5\u770b\u5a92\u4f53\u4fe1\u606f ffprobe xxx.xx ffmpeg -i xxx.xx \u64ad\u653e\u5a92\u4f53\u6587\u4ef6 ffplay xxxx.\u6587\u4ef6\u683c\u5f0f ffplay xxx.mp4 \u4e0b\u8f7d\u7f51\u7edc\u5a92\u4f53\u5230\u672c\u5730 ffmpeg -i http://file.52lishi.com/file/yinxiao/ly-17-12-16-06.mp3 laosiji.aac \u8f6c\u6362\u5a92\u4f53\u683c\u5f0f ffmpeg -i \u6e90\u5a92\u4f53 \u8f93\u51fa\u5a92\u4f53 ffmpeg -i chailao.mp4 chailao.ts .ts \uff1aTS\u662f transport Stream\u7684\u7f29\u5199\u901a\u5e38\u79f0\u4e3a\u7801\u6d41\u6587\u4ef6, TS\u6587\u4ef6\u662f\u6700e\u539f\u59cb\u7684\u97f3\u9891\u89c6\u9891\u5bb9\u5668,\u6ca1\u6709\u7ecf\u8fc7\u5176\u4ed6\u7b97\u6cd5\u7684\u538b\u7f29\u6240\u4ee5\u4e00\u822c\u4f1a\u5f88\u5927,\u8fd9\u8ddf\u5f53\u65f6\u64ad\u653e\u7684\u6e90\u6587\u4ef6\u7684\u60c5\u51b5,\u6bd4\u5982\u6bd4\u7279\u7387\u4ec0\u4e48\u7684. \u88c1\u526a\u5a92\u4f53\u6587\u4ef6 ffmpeg -i \u6e90\u5a92\u4f53 -ss 00:00:20 -t 10 -c copy \u8f93\u51fa\u5a92\u4f53 ffmpeg -i chailao.mp4 -ss 00:02:08 -t 7 -c copy chailao_split.mp4 -c \uff1a\u4e5f\u5c31\u662f codec (\u7f16\u7801)\uff0c copy \u6307\u5b9a\u548c\u6e90\u5a92\u4f53\u4f7f\u7528\u540c\u6837\u7684\u914d\u7f6e(\u5143\u6570\u636e) \u89c6\u9891\u8f6cgif ffmpeg -i \u6e90\u5a92\u4f53 xxx.gif ffmpeg -i chailao_split.mp4 chailao.gif \u8fd9\u4e2a\u8ddf\u4e0a\u9762\u7684\u8f6c\u6362\u5a92\u4f53\u683c\u5f0f\u5176\u5b9e\u662f\u4e00\u4e2a\u3002 \u4ece\u89c6\u9891\u6587\u4ef6\u622a\u53d6\u4e00\u5e27\u8f6c\u4e3a\u56fe\u7247 ffmpeg -i \u6e90\u5a92\u4f53 -ss \u5f00\u59cb\u65f6\u95f4 -s \u5bbdx\u9ad8 -vframes \u5e27\u6570 -f image2 \u8f93\u51fa\u6587\u4ef6 ffmpeg -i chailao.mp4 -ss 00:02:08 -s 300x300 -vframes 1 -f image2 frame.png \u5c06\u4e00\u7cfb\u5217\u56fe\u7247\u5408\u6210gif ffmpeg -i xxx_%d.png -r \u5e27\u6570 xxx.gif ffmpeg -i frame%d.png -r 25 frame.gif -f \uff1a\u8bbe\u7f6e\u5e27\u6570 \u5206\u79bb\u89c6\u9891\u97f3\u9891\u6d41 ffmpeg -i input_file -vcodec copy -an output_file_video //\u5206\u79bb\u51fa\u89c6\u9891\u6d41 ffmpeg -i input_file -acodec copy -vn output_file_audio //\u5206\u79bb\u51fa\u97f3\u9891\u6d41 -an \uff1a\u4e0d\u8981\u97f3\u9891\u6d41 -vn \uff1a\u4e0d\u8981\u89c6\u9891\u6d41 ffmpeg -i chailao.mp4 -vcodec copy -an chailao_without_audio.mp4 ffmpeg -i chailao.mp4 -acodec copy -vn chailao_without_video.mp4 \u5c06\u89c6\u9891\u548c\u97f3\u9891\u5408\u5e76 ffmpeg -i video_file -i audio_file -vcodec copy -acodec copy output_file -vcodec \uff1a\u89c6\u9891\u7f16\u7801\u5668 -acodec \uff1a\u97f3\u9891\u7f16\u7801\u5668 ffmpeg -i chailao_without_audio.mp4 -i chailao_without_video.mp4 -vcodec copy -acodec copy chailao_merge.mp4 \u97f3\u89c6\u9891\u5012\u653e //\u89c6\u9891\u5012\u653e ffmpeg -i input-file.mp4 -vf reverse output.mp4r //\u97f3\u89c6\u9891\u90fd\u5012\u653e ffmpeg -i input-file.mp4 -vf reverse -af areverse output.mp4 ffmpeg -i chailao.mp4 -vf reverse reverse_video.mp4 // ffmpeg -i chailao.mp4 -vf reverse -af areverse reverse_video_audio.mp4 \u97f3\u89c6\u9891\u7f16\u89e3\u7801\u6d41\u7a0b \u5e38\u7528\u7ed3\u6784\u4f53\u4ecb\u7ecd ffmpeg \u6e90\u7801\u662f\u57fa\u4e8e c\u8bed\u8a00 \u5199\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5982\u679c\u662f\u4e0d\u7528\u8c03\u7528\u547d\u4ee4\uff0c\u81ea\u5df1\u5199\u4ee3\u7801\u5b9e\u73b0\u76f8\u5e94\u7684\u529f\u80fd\uff0c\u4e86\u89e3\u5176\u5b9a\u4e49\u597d\u7684 \u7ed3\u6784\u4f53 \u81f3\u5173\u91cd\u8981\u3002 AVFormatContext AVFormatContext \u662f\u97f3\u89c6\u9891\u6587\u4ef6\u7684\u4e00\u79cd\u62bd\u8c61\u548c\u5c01\u88c5\uff0c\u8be5\u7ed3\u6784\u4f53\u4e2d\u5305\u542b\u4e86\u591a\u8def\u6d41\uff1a \u97f3\u9891\u6d41 \u3001 \u89c6\u9891\u6d41 \u3001 \u5b57\u5e55\u6d41\u7b49 , \u662fFFmpeg\u4e2d\u4e00\u4e2a\u8d2f\u7a7f\u5168\u5c40\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5f88\u591a\u51fd\u6570\u90fd\u8981\u4ee5\u5b83\u4e3a\u53c2\u6570\u3002 typedef struct AVFormatContext { struct AVInputFormat *iformat; //\u8f93\u5165\u5bb9\u5668\u683c\u5f0f,\u7528\u4e8e\u5206\u6d41,\u901a\u8fc7avformat_open_input()\u8bbe\u7f6e struct AVOutputFormat *oformat; //\u8f93\u51fa\u5bb9\u5668\u683c\u5f0f,\u7528\u4e8e\u6df7\u6d41,\u5fc5\u987b\u5728avformat_write_header()\u8c03\u7528\u524d\u8bbe\u7f6e AVIOContext *pb; // I/O \u4e0a\u4e0b\u6587 unsigned int nb_streams; // \u6d41\u7684\u603b\u6570 AVStream **streams; //\u6240\u6709\u6d41\u7684\u5217\u8868,\u7531avformat_new_stream()\u521b\u5efa\u65b0\u7684\u6d41 int64_t duration; //\u6d41\u7684\u65f6\u957f int64_t bit_rate; //\u6d41\u7684\u6bd4\u7279\u7387 int64_t probesize; //\u4ece\u6307\u5b9a\u5bb9\u5668\u683c\u5f0f\u7684\u8f93\u5165\u4e2d\u8bfb\u53d6\u6700\u5927\u6570\u636e\u7684\u5927\u5c0f,\u8981\u8db3\u591f\u8d77\u64ad\u9996\u5e27\u753b\u9762 int64_t max_analyze_duration; //\u4ece\u6307\u5b9a\u5bb9\u5668\u683c\u5f0f\u7684\u8f93\u5165\u4e2d\u8bfb\u53d6\u7684\u6700\u5927\u6570\u636e\u65f6\u957f enum AVCodecID video_codec_id; // \u89c6\u9891\u7684codec_id enum AVCodecID audio_codec_id; // \u97f3\u9891\u7684codec_id enum AVCodecID subtitle_codec_id; // \u5b57\u5e55\u7684codec_id unsigned int max_index_size; // \u6bcf\u6761\u6d41\u7684\u6700\u5927\u5185\u5b58\u5b57\u8282\u6570 unsigned int max_picture_buffer; //\u4ece\u8bbe\u5907\u83b7\u53d6\u7684\u5b9e\u65f6\u5e27\u7f13\u51b2\u7684\u6700\u5927\u5185\u5b58\u5927\u5c0f AVDictionary *metadata; // \u6574\u4e2a\u6587\u4ef6\u7684\u5143\u6570\u636e ..... }AVFormatContext; AVInputFormat FFmpeg\u7684\u89e3\u590d\u7528\u5668\u5bf9\u8c61\uff0c\u8868\u793a\u8f93\u5165\u6587\u4ef6\u5bb9\u5668\u683c\u5f0f\uff0c\u4e00\u4e2a\u6587\u4ef6\u5bb9\u5668\u683c\u5f0f\u5bf9\u5e94\u4e00\u4e2aAVInputFormat\u7ed3\u6784\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u6709\u591a\u4e2a\u5b9e\u4f8b\u3002 AVCodecContext \u63cf\u8ff0\u7f16\u89e3\u7801\u5668\u4e0a\u4e0b\u6587\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5305\u542b\u4f17\u591a\u7f16\u89e3\u7801\u5668\u9700\u8981\u7684\u53c2\u6570\u4fe1\u606f\u3002 AVCodec \u5b58\u50a8\u7f16\u89e3\u7801\u5668\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\u3002 AVStream \u5b58\u50a8\u6bcf\u4e00\u4e2a\u89c6\u9891/\u97f3\u9891\u6d41\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\uff0c\u4f7f\u7528\u89e3\u590d\u7528\u5668\u4ece\u5bb9\u5668\u4e2d\u89e3\u6790\u51fa\u4e0d\u540c\u7684\u6d41\uff0c\u5728FFmpeg\u4e2d\u6d41\u7684\u5bf9\u8c61\u5c31\u662f AVStream \uff0c\u4fdd\u5b58\u5728 AVFormatContext \u7684 streams \u6570\u7ec4\u4e2d\u3002 AVPacket AVPacket \u4fdd\u5b58\u7684\u662f \u89e3\u590d\u7528\u4e4b\u540e-\u8fd8\u6ca1\u89e3\u7801\u4e4b\u524d \u7684\u6570\u636e\uff08\u4ecd\u7136\u662f\u538b\u7f29\u540e\u7684\u6570\u636e\uff09\u548c\u5173\u4e8e\u8fd9\u4e9b\u6570\u636e\u7684\u4e00\u4e9b\u9644\u52a0\u4fe1\u606f\u3002 AVFrame \u7528\u6765\u63cf\u8ff0 \u89e3\u7801\u540e \u7684\u97f3\u89c6\u9891\u6570\u636e\uff0c\u5fc5\u987b\u4f7f\u7528 av_frame_alloc \u5206\u914d\uff0c av_frame_free \u91ca\u653e\u3002 \u5e38\u7528\u65b9\u6cd5\u4ecb\u7ecd av_register_all \u521d\u59cb\u5316\u6240\u6709\u7ec4\u4ef6\uff0c\u53ea\u6709\u8c03\u7528\u4e86\u8be5\u51fd\u6570\uff0c\u624d\u80fd\u4f7f\u7528\u590d\u7528\u5668\u548c\u7f16\u89e3\u7801\u5668( FFmpeg4.0 \u4ee5\u4e0a\u88ab\u5e9f\u5f03\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\uff0c\u53ef\u4ee5\u4e0d\u8c03\u7528) avformat_alloc_context AVFormatContext \u7ed3\u6784\u4f53\u8981\u7528 avformat_alloc_context() \u51fd\u6570\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u3002 avformat_open_input int avformat_open_input(AVFormatContext **ps, const char *url, AVInputFormat *fmt, AVDictionary **options); \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u8bfb\u53d6 header \uff0c\u4e0d\u4f1a\u6d89\u53ca\u6253\u5f00\u89e3\u7801\u5668\uff0c\u4e0e\u4e4b\u5bf9\u5e94\u7684\u662f avformat_close_input() \u51fd\u6570\u5173\u95ed\u6587\u4ef6\u3002\u5982\u679c\u6253\u5f00\u6587\u4ef6\u6210\u529f\uff0c AVFormatContext ps\u6307\u9488 \u5c31\u4f1a\u5728\u51fd\u6570\u4e2d\u521d\u59cb\u5316\u5b8c\u6210\u3002 av_guess_format AVOutputFormat *av_guess_format(const char *short_name, const char *filename, const char *mime_type); \u4ece\u6240\u7f16\u8bd1\u7684ffmpeg\u5e93\u652f\u6301\u7684 muxer\u5e93 \u4e2d\u67e5\u627e\u4e0e \u6587\u4ef6\u540e\u7f00\u540d \u6709\u5173\u8054\u7684\u5bb9\u5668\u7c7b\u578b\u3002 avformat_new_stream AVStream *avformat_new_stream(AVFormatContext *s, const AVCodec *c); \u5728 AVFormatContext \u4e2d\u521b\u5efa\u65b0\u7684 Stream \u6d41\u901a\u9053\u3002 av_read_frame int av_read_frame(AVFormatContext *s, AVPacket *pkt); \u8bfb\u53d6 \u7801\u6d41 \u4e2d\u7684\u82e5\u5e72\u97f3\u9891\u5e27\u6216\u80051\u5e27\u89c6\u9891\u3002 av_write_frame FFmpeg\u5148\u8c03\u7528 avformat_write_header() \u51fd\u6570\u5199\u5934\u90e8\u4fe1\u606f\uff0c\u4e2d\u95f4\u5faa\u73af\u8c03\u7528 av_write_frame() \u51fd\u6570\u5199\u5165\u5e27\u6570\u636e\uff0c\u6700\u540e\u8c03\u7528 av_write_trailer() \u5199\u5c3e\u90e8\u4fe1\u606f\u6807\u5fd7\u4e00\u4e2a\u7f16\u7801\u64cd\u4f5c\u5b8c\u6210\u3002 \u4ee3\u7801\u793a\u4f8b /ffmpeg/doc/example/encode_video.c /usr/local/opt/ffmpeg/includef'f clang -g -o encode_video encode_video.c -I/usr/local/Cellar/ffmpeg/4.1.4_2/include `pkg-config --libs libavcodec libavutil` ./encode_video encode.mp4 mpeg1video","title":"\u79fb\u52a8\u7aef\u97f3\u89c6\u9891\u5165\u95e8 FFmpeg(\u516c\u53f8\u6280\u672f\u5206\u4eab)"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#ffmpeg","text":"github\u5730\u5740\uff1a https://github.com/FFmpeg/FFmpeg FFmpeg\u5b98\u7f51\uff1a https://ffmpeg.org/ FFmpeg \u662f\u4e00\u5957\u53ef\u4ee5\u7528\u6765\u505a\u97f3\u89c6\u9891 \u91c7\u96c6 \uff0c \u88c1\u526a , \u8f6c\u6362 \uff0c \u63a8\u6d41 \u7b49\u64cd\u4f5c\u7684 \u5f00\u6e90\u8ba1\u7b97\u673a\u7a0b\u5e8f \u3002\u91c7\u7528LGPL\u6216GPL\u8bb8\u53ef\u8bc1\uff0c\u5b83\u63d0\u4f9b\u4e86\u5f55\u5236\u3001\u8f6c\u6362\u4ee5\u53ca\u6d41\u5316\u97f3\u89c6\u9891\u7684\u5b8c\u6574\u89e3\u51b3\u65b9\u6848\u3002 \u56fd\u5185\u8033\u719f\u80fd\u8be6\u7684 \u66b4\u98ce\u5f71\u97f3 \u3001 QQ\u5f71\u97f3 \uff0c\u4ee5\u53ca\u56fd\u5916\u8457\u540d\u7684 KMPlayer \u3001 PotPlayer \uff0c\u90fd\u91c7\u7528\u4e86FFmpeg\u7684\u4ee3\u7801\u4f46\u5374\u4e0d\u6309\u89c4\u77e9\u5f00\u6e90\uff0c\u88ab\u653e\u5165\u4e86FFmpeg\u7684\u803b\u8fb1\u540d\u5355\u5f53\u4e2d\u3002","title":"\u4ec0\u4e48\u662fFFmpeg"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#ffmpeg_1","text":"ffmpeg \uff1a\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u7528\u6765\u5bf9\u89c6\u9891\uff0c\u97f3\u9891\u6587\u4ef6\u6267\u884c \u526a\u8f91 \uff0c \u8f6c\u6362\u683c\u5f0f \uff0c \u65cb\u8f6c \uff0c \u6dfb\u52a0\u6ee4\u955c \u7b49\u64cd\u4f5c\u7684\u6307\u4ee4\u96c6 ffserver \uff1a\u4e00\u4e2aHTTP\u591a\u5a92\u4f53\u5373\u65f6\u5e7f\u64ad\u6d41\u670d\u52a1\u5668\uff0c\u652f\u6301\u56de\u6eaf ffplay \uff1a\u4e00\u4e2a\u7b80\u5355\u7684\u64ad\u653e\u5668\uff0c\u57fa\u4e8eSDL\u4e0eFFmpeg\u5e93 libavcodec \uff1a\u5305\u542b\u5168\u90e8FFmpeg\u97f3\u9891/\u89c6\u9891\u7f16\u89e3\u7801\u5e93 libavformat \uff1a\u5305\u542bdemuxers\u548cmuxer\u5c01\u88c5\u683c\u5f0f\u5e93 libavutil \uff1affmpeg\u4e00\u4e2a\u5de5\u5177\u5e93 libavfilter \uff1a\u52a0filter\u7684\u5e93(\u8fd9\u91cc\u7ffb\u8bd1\u6210\u6ee4\u955c\u4e0d\u592a\u4e25\u8c28) libswscale \uff1a\u5bf9\u56fe\u50cf\u505a\u8f6c\u6362\u6bd4\u4f8b(\u7f29\u653e)\u7684\u5e93 libavresample \uff1a\u505a\u91cd\u91c7\u6837\u7684\u5e93 libavdevice \uff1a\u4f7f\u7528\u8fd9\u4e2a\u5e93\u53ef\u4ee5\u8bfb\u53d6\u7535\u8111\uff08\u6216\u8005\u5176\u4ed6\u8bbe\u5907\u4e0a\uff09\u7684\u591a\u5a92\u4f53\u8bbe\u5907\u7684\u6570\u636e\uff0c\u6216\u8005\u8f93\u51fa\u6570\u636e\u5230\u6307\u5b9a\u7684\u591a\u5a92\u4f53\u8bbe\u5907\u4e0a","title":"FFmpeg\u4e3b\u8981\u7ec4\u6210\u7ec4\u4ef6"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#ffmpeg_2","text":"FFmpeg\u53ef\u4f7f\u7528\u4f17\u591a\u53c2\u6570\uff0c\u53c2\u6570\u5185\u5bb9\u4f1a\u6839\u636effmpeg\u7248\u672c\u800c\u6709\u5dee\u5f02\uff0c\u4f7f\u7528\u524d\u5efa\u8bae\u5148\u53c2\u8003\u53c2\u6570\u53ca\u7f16\u89e3\u7801\u5668\u7684\u53d9\u8ff0\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528 ffmpeng -h \u547d\u4ee4\u67e5\u770b","title":"FFmpeg\u547d\u4ee4\u96c6\u7684\u5e38\u7528\u53c2\u6570"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#_1","text":"-i \uff1a\u8bbe\u7f6e\u8f93\u5165\u6e90\uff0c\u53ef\u4ee5\u662f\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u662f\u7f51\u7edc\u6d41\u6587\u4ef6 -f \uff1a\u8bbe\u7f6e\u8f93\u51fa\u683c\u5f0f -y \uff1a\u82e5\u8f93\u51fa\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\u5c31\u8986\u76d6 -fs \uff1a\u8d85\u8fc7\u6307\u5b9a\u7684\u6587\u4ef6\u7684\u6301\u7eed\u65f6\u95f4\u5c31\u7ed3\u675f -ss \uff1a\u4ece\u6307\u5b9a\u65f6\u95f4\u5f00\u59cb\uff0c\u4e00\u822c\u683c\u5f0f\u4e3a 00:00:00 \uff0c\u4e5f\u53ef\u4ee5\u662f \u591a\u5c11\u79d2 -t \uff1a\u6307\u4ee4\u7684\u6301\u7eed\u65f6\u95f4 -title \uff1a\u8bbe\u7f6e\u5a92\u4f53\u6587\u4ef6\u7684\u6807\u9898 -c \uff1a\u6307\u5b9a\u8f93\u51fa\u6587\u4ef6\u7684\u7f16\u7801 -metadata \uff1a\u66f4\u6539\u8f93\u51fa\u6587\u4ef6\u7684 \u5143\u6570\u636e","title":"\u5e38\u7528\u53c2\u6570"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#_2","text":"-b:v \u2014\u2014\u8bbe\u7f6e\u5f71\u50cf\u6d41\u91cf\uff0c\u9ed8\u8ba4\u4e3a200Kbit/\u79d2\u3002 -r \u2014\u2014\u8bbe\u7f6e\u5e27\u7387\u503c\uff0c\u9ed8\u8ba4\u4e3a25\u3002 -s \u2014\u2014\u8bbe\u7f6e\u753b\u9762\u7684\u5bbd\u4e0e\u9ad8\u3002 -aspect \u2014\u2014\u8bbe\u7f6e\u753b\u9762\u7684\u6bd4\u4f8b\u3002 -vn \u2014\u2014\u4e0d\u5904\u7406\u5f71\u50cf\uff0c\u4e8e\u4ec5\u9488\u5bf9\u58f0\u97f3\u505a\u5904\u7406\u65f6\u4f7f\u7528\u3002 -vcodec( -c:v ) \u2014\u2014\u8bbe\u7f6e\u5f71\u50cf\u5f71\u50cf\u7f16\u89e3\u7801\u5668\uff0c\u672a\u8bbe\u7f6e\u65f6\u5219\u4f7f\u7528\u4e0e\u8f93\u5165\u6587\u4ef6\u76f8\u540c\u4e4b\u7f16\u89e3\u7801\u5668\u3002","title":"\u5f71\u50cf\u53c2\u6570"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#_3","text":"-b:a \u2014\u2014\u8bbe\u7f6e\u6bcf\u4e2a Channel \u7684\u6d41\u91cf\uff08chanel\u53ef\u4ee5\u7406\u89e3\u4e3a\u58f0\u9053\u6570\uff0c\u5de6\u58f0\u9053\uff0c\u53f3\u58f0\u9053\u8fd9\u79cd\uff09 -ar \u2014\u2014\u8bbe\u7f6e\u91c7\u6837\u7387\u3002 -ac \u2014\u2014\u8bbe\u7f6e\u58f0\u97f3\u7684 Channel \u6570\u3002 -acodec ( -c:a ) \u2014\u2014\u8bbe\u7f6e\u58f0\u97f3\u7f16\u89e3\u7801\u5668\uff0c\u672a\u8bbe\u7f6e\u65f6\u4e0e\u5f71\u50cf\u76f8\u540c\uff0c\u4f7f\u7528\u4e0e\u8f93\u5165\u6587\u4ef6\u76f8\u540c\u4e4b\u7f16\u89e3\u7801\u5668\u3002 -an \u2014\u2014\u4e0d\u5904\u7406\u58f0\u97f3\uff0c\u4e8e\u4ec5\u9488\u5bf9\u5f71\u50cf\u505a\u5904\u7406\u65f6\u4f7f\u7528\u3002 -vol \u2014\u2014\u8bbe\u7f6e\u97f3\u91cf\u5927\u5c0f\uff0c256\u4e3a\u6807\u51c6\u97f3\u91cf\u3002\uff08\u8981\u8bbe\u7f6e\u6210\u4e24\u500d\u97f3\u91cf\u65f6\u5219\u8f93\u5165512\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\uff09","title":"\u58f0\u97f3\u53c2\u6570"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#_4","text":"","title":"\u5e38\u7528\u547d\u4ee4"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#_5","text":"ffprobe xxx.xx ffmpeg -i xxx.xx","title":"\u67e5\u770b\u5a92\u4f53\u4fe1\u606f"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#_6","text":"ffplay xxxx.\u6587\u4ef6\u683c\u5f0f ffplay xxx.mp4","title":"\u64ad\u653e\u5a92\u4f53\u6587\u4ef6"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#_7","text":"ffmpeg -i http://file.52lishi.com/file/yinxiao/ly-17-12-16-06.mp3 laosiji.aac","title":"\u4e0b\u8f7d\u7f51\u7edc\u5a92\u4f53\u5230\u672c\u5730"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#_8","text":"ffmpeg -i \u6e90\u5a92\u4f53 \u8f93\u51fa\u5a92\u4f53 ffmpeg -i chailao.mp4 chailao.ts .ts \uff1aTS\u662f transport Stream\u7684\u7f29\u5199\u901a\u5e38\u79f0\u4e3a\u7801\u6d41\u6587\u4ef6, TS\u6587\u4ef6\u662f\u6700e\u539f\u59cb\u7684\u97f3\u9891\u89c6\u9891\u5bb9\u5668,\u6ca1\u6709\u7ecf\u8fc7\u5176\u4ed6\u7b97\u6cd5\u7684\u538b\u7f29\u6240\u4ee5\u4e00\u822c\u4f1a\u5f88\u5927,\u8fd9\u8ddf\u5f53\u65f6\u64ad\u653e\u7684\u6e90\u6587\u4ef6\u7684\u60c5\u51b5,\u6bd4\u5982\u6bd4\u7279\u7387\u4ec0\u4e48\u7684.","title":"\u8f6c\u6362\u5a92\u4f53\u683c\u5f0f"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#_9","text":"ffmpeg -i \u6e90\u5a92\u4f53 -ss 00:00:20 -t 10 -c copy \u8f93\u51fa\u5a92\u4f53 ffmpeg -i chailao.mp4 -ss 00:02:08 -t 7 -c copy chailao_split.mp4 -c \uff1a\u4e5f\u5c31\u662f codec (\u7f16\u7801)\uff0c copy \u6307\u5b9a\u548c\u6e90\u5a92\u4f53\u4f7f\u7528\u540c\u6837\u7684\u914d\u7f6e(\u5143\u6570\u636e)","title":"\u88c1\u526a\u5a92\u4f53\u6587\u4ef6"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#gif","text":"ffmpeg -i \u6e90\u5a92\u4f53 xxx.gif ffmpeg -i chailao_split.mp4 chailao.gif \u8fd9\u4e2a\u8ddf\u4e0a\u9762\u7684\u8f6c\u6362\u5a92\u4f53\u683c\u5f0f\u5176\u5b9e\u662f\u4e00\u4e2a\u3002","title":"\u89c6\u9891\u8f6cgif"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#_10","text":"ffmpeg -i \u6e90\u5a92\u4f53 -ss \u5f00\u59cb\u65f6\u95f4 -s \u5bbdx\u9ad8 -vframes \u5e27\u6570 -f image2 \u8f93\u51fa\u6587\u4ef6 ffmpeg -i chailao.mp4 -ss 00:02:08 -s 300x300 -vframes 1 -f image2 frame.png","title":"\u4ece\u89c6\u9891\u6587\u4ef6\u622a\u53d6\u4e00\u5e27\u8f6c\u4e3a\u56fe\u7247"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#gif_1","text":"ffmpeg -i xxx_%d.png -r \u5e27\u6570 xxx.gif ffmpeg -i frame%d.png -r 25 frame.gif -f \uff1a\u8bbe\u7f6e\u5e27\u6570","title":"\u5c06\u4e00\u7cfb\u5217\u56fe\u7247\u5408\u6210gif"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#_11","text":"ffmpeg -i input_file -vcodec copy -an output_file_video //\u5206\u79bb\u51fa\u89c6\u9891\u6d41 ffmpeg -i input_file -acodec copy -vn output_file_audio //\u5206\u79bb\u51fa\u97f3\u9891\u6d41 -an \uff1a\u4e0d\u8981\u97f3\u9891\u6d41 -vn \uff1a\u4e0d\u8981\u89c6\u9891\u6d41 ffmpeg -i chailao.mp4 -vcodec copy -an chailao_without_audio.mp4 ffmpeg -i chailao.mp4 -acodec copy -vn chailao_without_video.mp4","title":"\u5206\u79bb\u89c6\u9891\u97f3\u9891\u6d41"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#_12","text":"ffmpeg -i video_file -i audio_file -vcodec copy -acodec copy output_file -vcodec \uff1a\u89c6\u9891\u7f16\u7801\u5668 -acodec \uff1a\u97f3\u9891\u7f16\u7801\u5668 ffmpeg -i chailao_without_audio.mp4 -i chailao_without_video.mp4 -vcodec copy -acodec copy chailao_merge.mp4","title":"\u5c06\u89c6\u9891\u548c\u97f3\u9891\u5408\u5e76"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#_13","text":"//\u89c6\u9891\u5012\u653e ffmpeg -i input-file.mp4 -vf reverse output.mp4r //\u97f3\u89c6\u9891\u90fd\u5012\u653e ffmpeg -i input-file.mp4 -vf reverse -af areverse output.mp4 ffmpeg -i chailao.mp4 -vf reverse reverse_video.mp4 // ffmpeg -i chailao.mp4 -vf reverse -af areverse reverse_video_audio.mp4","title":"\u97f3\u89c6\u9891\u5012\u653e"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#_14","text":"","title":"\u97f3\u89c6\u9891\u7f16\u89e3\u7801\u6d41\u7a0b"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#_15","text":"ffmpeg \u6e90\u7801\u662f\u57fa\u4e8e c\u8bed\u8a00 \u5199\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5982\u679c\u662f\u4e0d\u7528\u8c03\u7528\u547d\u4ee4\uff0c\u81ea\u5df1\u5199\u4ee3\u7801\u5b9e\u73b0\u76f8\u5e94\u7684\u529f\u80fd\uff0c\u4e86\u89e3\u5176\u5b9a\u4e49\u597d\u7684 \u7ed3\u6784\u4f53 \u81f3\u5173\u91cd\u8981\u3002","title":"\u5e38\u7528\u7ed3\u6784\u4f53\u4ecb\u7ecd"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#avformatcontext","text":"AVFormatContext \u662f\u97f3\u89c6\u9891\u6587\u4ef6\u7684\u4e00\u79cd\u62bd\u8c61\u548c\u5c01\u88c5\uff0c\u8be5\u7ed3\u6784\u4f53\u4e2d\u5305\u542b\u4e86\u591a\u8def\u6d41\uff1a \u97f3\u9891\u6d41 \u3001 \u89c6\u9891\u6d41 \u3001 \u5b57\u5e55\u6d41\u7b49 , \u662fFFmpeg\u4e2d\u4e00\u4e2a\u8d2f\u7a7f\u5168\u5c40\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5f88\u591a\u51fd\u6570\u90fd\u8981\u4ee5\u5b83\u4e3a\u53c2\u6570\u3002 typedef struct AVFormatContext { struct AVInputFormat *iformat; //\u8f93\u5165\u5bb9\u5668\u683c\u5f0f,\u7528\u4e8e\u5206\u6d41,\u901a\u8fc7avformat_open_input()\u8bbe\u7f6e struct AVOutputFormat *oformat; //\u8f93\u51fa\u5bb9\u5668\u683c\u5f0f,\u7528\u4e8e\u6df7\u6d41,\u5fc5\u987b\u5728avformat_write_header()\u8c03\u7528\u524d\u8bbe\u7f6e AVIOContext *pb; // I/O \u4e0a\u4e0b\u6587 unsigned int nb_streams; // \u6d41\u7684\u603b\u6570 AVStream **streams; //\u6240\u6709\u6d41\u7684\u5217\u8868,\u7531avformat_new_stream()\u521b\u5efa\u65b0\u7684\u6d41 int64_t duration; //\u6d41\u7684\u65f6\u957f int64_t bit_rate; //\u6d41\u7684\u6bd4\u7279\u7387 int64_t probesize; //\u4ece\u6307\u5b9a\u5bb9\u5668\u683c\u5f0f\u7684\u8f93\u5165\u4e2d\u8bfb\u53d6\u6700\u5927\u6570\u636e\u7684\u5927\u5c0f,\u8981\u8db3\u591f\u8d77\u64ad\u9996\u5e27\u753b\u9762 int64_t max_analyze_duration; //\u4ece\u6307\u5b9a\u5bb9\u5668\u683c\u5f0f\u7684\u8f93\u5165\u4e2d\u8bfb\u53d6\u7684\u6700\u5927\u6570\u636e\u65f6\u957f enum AVCodecID video_codec_id; // \u89c6\u9891\u7684codec_id enum AVCodecID audio_codec_id; // \u97f3\u9891\u7684codec_id enum AVCodecID subtitle_codec_id; // \u5b57\u5e55\u7684codec_id unsigned int max_index_size; // \u6bcf\u6761\u6d41\u7684\u6700\u5927\u5185\u5b58\u5b57\u8282\u6570 unsigned int max_picture_buffer; //\u4ece\u8bbe\u5907\u83b7\u53d6\u7684\u5b9e\u65f6\u5e27\u7f13\u51b2\u7684\u6700\u5927\u5185\u5b58\u5927\u5c0f AVDictionary *metadata; // \u6574\u4e2a\u6587\u4ef6\u7684\u5143\u6570\u636e ..... }AVFormatContext;","title":"AVFormatContext"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#avinputformat","text":"FFmpeg\u7684\u89e3\u590d\u7528\u5668\u5bf9\u8c61\uff0c\u8868\u793a\u8f93\u5165\u6587\u4ef6\u5bb9\u5668\u683c\u5f0f\uff0c\u4e00\u4e2a\u6587\u4ef6\u5bb9\u5668\u683c\u5f0f\u5bf9\u5e94\u4e00\u4e2aAVInputFormat\u7ed3\u6784\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u6709\u591a\u4e2a\u5b9e\u4f8b\u3002","title":"AVInputFormat"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#avcodeccontext","text":"\u63cf\u8ff0\u7f16\u89e3\u7801\u5668\u4e0a\u4e0b\u6587\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5305\u542b\u4f17\u591a\u7f16\u89e3\u7801\u5668\u9700\u8981\u7684\u53c2\u6570\u4fe1\u606f\u3002","title":"AVCodecContext"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#avcodec","text":"\u5b58\u50a8\u7f16\u89e3\u7801\u5668\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\u3002","title":"AVCodec"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#avstream","text":"\u5b58\u50a8\u6bcf\u4e00\u4e2a\u89c6\u9891/\u97f3\u9891\u6d41\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\uff0c\u4f7f\u7528\u89e3\u590d\u7528\u5668\u4ece\u5bb9\u5668\u4e2d\u89e3\u6790\u51fa\u4e0d\u540c\u7684\u6d41\uff0c\u5728FFmpeg\u4e2d\u6d41\u7684\u5bf9\u8c61\u5c31\u662f AVStream \uff0c\u4fdd\u5b58\u5728 AVFormatContext \u7684 streams \u6570\u7ec4\u4e2d\u3002","title":"AVStream"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#avpacket","text":"AVPacket \u4fdd\u5b58\u7684\u662f \u89e3\u590d\u7528\u4e4b\u540e-\u8fd8\u6ca1\u89e3\u7801\u4e4b\u524d \u7684\u6570\u636e\uff08\u4ecd\u7136\u662f\u538b\u7f29\u540e\u7684\u6570\u636e\uff09\u548c\u5173\u4e8e\u8fd9\u4e9b\u6570\u636e\u7684\u4e00\u4e9b\u9644\u52a0\u4fe1\u606f\u3002","title":"AVPacket"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#avframe","text":"\u7528\u6765\u63cf\u8ff0 \u89e3\u7801\u540e \u7684\u97f3\u89c6\u9891\u6570\u636e\uff0c\u5fc5\u987b\u4f7f\u7528 av_frame_alloc \u5206\u914d\uff0c av_frame_free \u91ca\u653e\u3002","title":"AVFrame"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#_16","text":"","title":"\u5e38\u7528\u65b9\u6cd5\u4ecb\u7ecd"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#av_register_all","text":"\u521d\u59cb\u5316\u6240\u6709\u7ec4\u4ef6\uff0c\u53ea\u6709\u8c03\u7528\u4e86\u8be5\u51fd\u6570\uff0c\u624d\u80fd\u4f7f\u7528\u590d\u7528\u5668\u548c\u7f16\u89e3\u7801\u5668( FFmpeg4.0 \u4ee5\u4e0a\u88ab\u5e9f\u5f03\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\uff0c\u53ef\u4ee5\u4e0d\u8c03\u7528)","title":"av_register_all"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#avformat_alloc_context","text":"AVFormatContext \u7ed3\u6784\u4f53\u8981\u7528 avformat_alloc_context() \u51fd\u6570\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u3002","title":"avformat_alloc_context"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#avformat_open_input","text":"int avformat_open_input(AVFormatContext **ps, const char *url, AVInputFormat *fmt, AVDictionary **options); \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u8bfb\u53d6 header \uff0c\u4e0d\u4f1a\u6d89\u53ca\u6253\u5f00\u89e3\u7801\u5668\uff0c\u4e0e\u4e4b\u5bf9\u5e94\u7684\u662f avformat_close_input() \u51fd\u6570\u5173\u95ed\u6587\u4ef6\u3002\u5982\u679c\u6253\u5f00\u6587\u4ef6\u6210\u529f\uff0c AVFormatContext ps\u6307\u9488 \u5c31\u4f1a\u5728\u51fd\u6570\u4e2d\u521d\u59cb\u5316\u5b8c\u6210\u3002","title":"avformat_open_input"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#av_guess_format","text":"AVOutputFormat *av_guess_format(const char *short_name, const char *filename, const char *mime_type); \u4ece\u6240\u7f16\u8bd1\u7684ffmpeg\u5e93\u652f\u6301\u7684 muxer\u5e93 \u4e2d\u67e5\u627e\u4e0e \u6587\u4ef6\u540e\u7f00\u540d \u6709\u5173\u8054\u7684\u5bb9\u5668\u7c7b\u578b\u3002","title":"av_guess_format"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#avformat_new_stream","text":"AVStream *avformat_new_stream(AVFormatContext *s, const AVCodec *c); \u5728 AVFormatContext \u4e2d\u521b\u5efa\u65b0\u7684 Stream \u6d41\u901a\u9053\u3002","title":"avformat_new_stream"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#av_read_frame","text":"int av_read_frame(AVFormatContext *s, AVPacket *pkt); \u8bfb\u53d6 \u7801\u6d41 \u4e2d\u7684\u82e5\u5e72\u97f3\u9891\u5e27\u6216\u80051\u5e27\u89c6\u9891\u3002","title":"av_read_frame"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#av_write_frame","text":"FFmpeg\u5148\u8c03\u7528 avformat_write_header() \u51fd\u6570\u5199\u5934\u90e8\u4fe1\u606f\uff0c\u4e2d\u95f4\u5faa\u73af\u8c03\u7528 av_write_frame() \u51fd\u6570\u5199\u5165\u5e27\u6570\u636e\uff0c\u6700\u540e\u8c03\u7528 av_write_trailer() \u5199\u5c3e\u90e8\u4fe1\u606f\u6807\u5fd7\u4e00\u4e2a\u7f16\u7801\u64cd\u4f5c\u5b8c\u6210\u3002","title":"av_write_frame"},{"location":"%E5%85%B6%E4%BB%96/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8-FFmpeg%28%E5%85%AC%E5%8F%B8%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%29/#_17","text":"/ffmpeg/doc/example/encode_video.c /usr/local/opt/ffmpeg/includef'f clang -g -o encode_video encode_video.c -I/usr/local/Cellar/ffmpeg/4.1.4_2/include `pkg-config --libs libavcodec libavutil` ./encode_video encode.mp4 mpeg1video","title":"\u4ee3\u7801\u793a\u4f8b"}]}